/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BaseImmutableAdminUpgradeabilityProxy } from "./BaseImmutableAdminUpgradeabilityProxy";

export class BaseImmutableAdminUpgradeabilityProxyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    admin: string,
    overrides?: Overrides
  ): Promise<BaseImmutableAdminUpgradeabilityProxy> {
    return super.deploy(
      admin,
      overrides || {}
    ) as Promise<BaseImmutableAdminUpgradeabilityProxy>;
  }
  getDeployTransaction(
    admin: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(admin, overrides || {});
  }
  attach(address: string): BaseImmutableAdminUpgradeabilityProxy {
    return super.attach(address) as BaseImmutableAdminUpgradeabilityProxy;
  }
  connect(signer: Signer): BaseImmutableAdminUpgradeabilityProxyFactory {
    return super.connect(
      signer
    ) as BaseImmutableAdminUpgradeabilityProxyFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseImmutableAdminUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaseImmutableAdminUpgradeabilityProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161082b38038061082b8339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b03166107b061007b6000398061018f52806103645280610430528061048552806104b452506107b06000f3fe60806040526004361061003f5760003560e01c80633659cfe6146100495780634f1ef2861461007c5780635c60da1b146100fc578063f851a4401461012d575b610047610142565b005b34801561005557600080fd5b506100476004803603602081101561006c57600080fd5b50356001600160a01b031661015c565b6100476004803603604081101561009257600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100bd57600080fd5b8201836020820111156100cf57600080fd5b803590602001918460018302840111640100000000831117156100f157600080fd5b509092509050610225565b34801561010857600080fd5b5061011161032f565b604080516001600160a01b039092168252519081900360200190f35b34801561013957600080fd5b506101116103fb565b61014a6104a9565b61015a610155610519565b61053e565b565b6101846040518060400160405280600781526020016624b320b236b4b760c91b815250610562565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101ef576101e16040518060400160405280600b81526020016a496641646d696e2059657360a81b815250610562565b6101ea81610608565b610222565b61021a6040518060400160405280600a815260200169496641646d696e204e4f60b01b815250610562565b610222610142565b50565b6102566040518060400160405280601081526020016f1d5c19dc985919551bd05b9910d85b1b60821b815250610562565b61025f83610608565b61028b6040518060400160405280600b81526020016a2fbab833b930b232aa379d60a91b815250610562565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d80600081146102e8576040519150601f19603f3d011682016040523d82523d6000602084013e6102ed565b606091505b5050905061031f6040518060400160405280600d81526020016c3232b632b3b0ba32b1b0b6361d60991b815250610562565b8061032957600080fd5b50505050565b60006103596040518060400160405280600781526020016624b320b236b4b760c91b815250610562565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103c5576103b66040518060400160405280600b81526020016a496641646d696e2059657360a81b815250610562565b6103be610519565b90506103f8565b6103f06040518060400160405280600a815260200169496641646d696e204e4f60b01b815250610562565b6103f8610142565b90565b60006104256040518060400160405280600781526020016624b320b236b4b760c91b815250610562565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103c5576104826040518060400160405280600b81526020016a496641646d696e2059657360a81b815250610562565b507f00000000000000000000000000000000000000000000000000000000000000006103f8565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105115760405162461bcd60e51b815260040180806020018281038252603281526020018061070e6032913960400191505060405180910390fd5b61015a61015a565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561055d573d6000f35b3d6000fd5b610222816040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156105a657818101518382015260200161058e565b50505050905090810190601f1680156105d35780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790529250610648915050565b61061181610669565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610672816106d1565b6106ad5760405162461bcd60e51b815260040180806020018281038252603b815260200180610740603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061070557508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220dbf5c01dad5512da8e6fc7a1432e4f88fff610061aa653d702dac95b6350f70f64736f6c634300060c0033";
