/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IFundDeployer } from "./IFundDeployer";

export class IFundDeployerFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFundDeployer {
    return new Contract(address, _abi, signerOrProvider) as IFundDeployer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fundOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_fundName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_denominationAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sharesActionTimelock",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_feeManagerConfigData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_policyManagerConfigData",
        type: "bytes",
      },
    ],
    name: "createNewFund",
    outputs: [
      {
        internalType: "address",
        name: "comptrollerProxy_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultProxy_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasReconfigurationRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAllowedBuySharesOnBehalfCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isAllowedVaultCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
