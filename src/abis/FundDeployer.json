{
  "address": "0xa4E00CB342B36eC9fDc4B50b3d527c3643D4C49e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dispatcher",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gasRelayPaymasterFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "BuySharesOnBehalfCallerDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "BuySharesOnBehalfCallerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "comptrollerLib",
          "type": "address"
        }
      ],
      "name": "ComptrollerLibSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "comptrollerProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "denominationAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sharesActionTimelock",
          "type": "uint256"
        }
      ],
      "name": "ComptrollerProxyDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nextDeactivateFeeManagerGasLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nextPayProtocolFeeGasLimit",
          "type": "uint256"
        }
      ],
      "name": "GasLimitsForDestructCallSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "vaultProxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "comptrollerProxy",
          "type": "address"
        }
      ],
      "name": "MigrationRequestCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultProxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "comptrollerProxy",
          "type": "address"
        }
      ],
      "name": "NewFundCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolFeeTracker",
          "type": "address"
        }
      ],
      "name": "ProtocolFeeTrackerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vaultProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nextComptrollerProxy",
          "type": "address"
        }
      ],
      "name": "ReconfigurationRequestCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "vaultProxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "comptrollerProxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executableTimestamp",
          "type": "uint256"
        }
      ],
      "name": "ReconfigurationRequestCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vaultProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevComptrollerProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nextComptrollerProxy",
          "type": "address"
        }
      ],
      "name": "ReconfigurationRequestExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nextTimelock",
          "type": "uint256"
        }
      ],
      "name": "ReconfigurationTimelockSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ReleaseIsLive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "dataHash",
          "type": "bytes32"
        }
      ],
      "name": "VaultCallDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "dataHash",
          "type": "bytes32"
        }
      ],
      "name": "VaultCallRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultLib",
          "type": "address"
        }
      ],
      "name": "VaultLibSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_bypassPrevReleaseFailure",
          "type": "bool"
        }
      ],
      "name": "cancelMigration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        }
      ],
      "name": "cancelReconfiguration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_denominationAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sharesActionTimelock",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_feeManagerConfigData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_policyManagerConfigData",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_bypassPrevReleaseFailure",
          "type": "bool"
        }
      ],
      "name": "createMigrationRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "comptrollerProxy_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fundOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_fundName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_denominationAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sharesActionTimelock",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_feeManagerConfigData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_policyManagerConfigData",
          "type": "bytes"
        }
      ],
      "name": "createNewFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "comptrollerProxy_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vaultProxy_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_denominationAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sharesActionTimelock",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_feeManagerConfigData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_policyManagerConfigData",
          "type": "bytes"
        }
      ],
      "name": "createReconfigurationRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "comptrollerProxy_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_callers",
          "type": "address[]"
        }
      ],
      "name": "deregisterBuySharesOnBehalfCallers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_contracts",
          "type": "address[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_dataHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "deregisterVaultCalls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_bypassPrevReleaseFailure",
          "type": "bool"
        }
      ],
      "name": "executeMigration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        }
      ],
      "name": "executeReconfiguration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getComptrollerLib",
      "outputs": [
        {
          "internalType": "address",
          "name": "comptrollerLib_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDispatcher",
      "outputs": [
        {
          "internalType": "address",
          "name": "dispatcher_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGasLimitsForDestructCall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deactivateFeeManagerGasLimit_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "payProtocolFeeGasLimit_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGasRelayPaymasterFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "gasRelayPaymasterFactory_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGasRelayTrustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeeTracker",
      "outputs": [
        {
          "internalType": "address",
          "name": "protocolFeeTracker_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        }
      ],
      "name": "getReconfigurationRequestForVaultProxy",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nextComptrollerProxy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "executableTimestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct FundDeployer.ReconfigurationRequest",
          "name": "reconfigurationRequest_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReconfigurationTimelock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reconfigurationTimelock_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultLib",
      "outputs": [
        {
          "internalType": "address",
          "name": "vaultLib_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        }
      ],
      "name": "hasReconfigurationRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasReconfigurationRequest_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nextComptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "invokeMigrationInCancelHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IMigrationHookHandler.MigrationOutHook",
          "name": "_hook",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "invokeMigrationOutHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        }
      ],
      "name": "isAllowedBuySharesOnBehalfCaller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isAllowed_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes32",
          "name": "_dataHash",
          "type": "bytes32"
        }
      ],
      "name": "isAllowedVaultCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isAllowed_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes32",
          "name": "_dataHash",
          "type": "bytes32"
        }
      ],
      "name": "isRegisteredVaultCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isRegistered_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_callers",
          "type": "address[]"
        }
      ],
      "name": "registerBuySharesOnBehalfCallers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_contracts",
          "type": "address[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_dataHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "registerVaultCalls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseIsLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isLive_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerLib",
          "type": "address"
        }
      ],
      "name": "setComptrollerLib",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_nextDeactivateFeeManagerGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_nextPayProtocolFeeGasLimit",
          "type": "uint32"
        }
      ],
      "name": "setGasLimitsForDestructCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_protocolFeeTracker",
          "type": "address"
        }
      ],
      "name": "setProtocolFeeTracker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nextTimelock",
          "type": "uint256"
        }
      ],
      "name": "setReconfigurationTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setReleaseLive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultLib",
          "type": "address"
        }
      ],
      "name": "setVaultLib",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4db7f045b9b00d83c9801c9828070502473faf822d4c6fecfc0a83dbc9dd14c0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa4E00CB342B36eC9fDc4B50b3d527c3643D4C49e",
    "transactionIndex": 0,
    "gasUsed": "4279065",
    "logsBloom": "0x
    "blockHash": "0xa3645ee13c5eddbaae5425808cc3dc8e9b11f0000d5f2f5bf97ddd38fdc2ed11",
    "transactionHash": "0x4db7f045b9b00d83c9801c9828070502473faf822d4c6fecfc0a83dbc9dd14c0",
    "logs": [],
    "blockNumber": 13929777,
    "cumulativeGasUsed": "4279065",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0c626FC4A447b01554518550e30600136864640B",
    "0x9849832a1d8274aaeDb1112ad9686413461e7101"
  ],
  "solcInputHash": "b2d0c2e3b549d952387d70aebac13f1c",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dispatcher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gasRelayPaymasterFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"BuySharesOnBehalfCallerDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"BuySharesOnBehalfCallerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"comptrollerLib\",\"type\":\"address\"}],\"name\":\"ComptrollerLibSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"denominationAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesActionTimelock\",\"type\":\"uint256\"}],\"name\":\"ComptrollerProxyDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextDeactivateFeeManagerGasLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextPayProtocolFeeGasLimit\",\"type\":\"uint256\"}],\"name\":\"GasLimitsForDestructCallSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"}],\"name\":\"MigrationRequestCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"}],\"name\":\"NewFundCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeTracker\",\"type\":\"address\"}],\"name\":\"ProtocolFeeTrackerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nextComptrollerProxy\",\"type\":\"address\"}],\"name\":\"ReconfigurationRequestCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executableTimestamp\",\"type\":\"uint256\"}],\"name\":\"ReconfigurationRequestCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevComptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nextComptrollerProxy\",\"type\":\"address\"}],\"name\":\"ReconfigurationRequestExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextTimelock\",\"type\":\"uint256\"}],\"name\":\"ReconfigurationTimelockSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ReleaseIsLive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"VaultCallDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"VaultCallRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultLib\",\"type\":\"address\"}],\"name\":\"VaultLibSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_bypassPrevReleaseFailure\",\"type\":\"bool\"}],\"name\":\"cancelMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"}],\"name\":\"cancelReconfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_denominationAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sharesActionTimelock\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_feeManagerConfigData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_policyManagerConfigData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_bypassPrevReleaseFailure\",\"type\":\"bool\"}],\"name\":\"createMigrationRequest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"comptrollerProxy_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fundOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_fundName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_denominationAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sharesActionTimelock\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_feeManagerConfigData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_policyManagerConfigData\",\"type\":\"bytes\"}],\"name\":\"createNewFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"comptrollerProxy_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vaultProxy_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_denominationAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sharesActionTimelock\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_feeManagerConfigData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_policyManagerConfigData\",\"type\":\"bytes\"}],\"name\":\"createReconfigurationRequest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"comptrollerProxy_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"}],\"name\":\"deregisterBuySharesOnBehalfCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_contracts\",\"type\":\"address[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_dataHashes\",\"type\":\"bytes32[]\"}],\"name\":\"deregisterVaultCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_bypassPrevReleaseFailure\",\"type\":\"bool\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"}],\"name\":\"executeReconfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComptrollerLib\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"comptrollerLib_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dispatcher_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasLimitsForDestructCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deactivateFeeManagerGasLimit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payProtocolFeeGasLimit_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasRelayPaymasterFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"gasRelayPaymasterFactory_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasRelayTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"protocolFeeTracker_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"}],\"name\":\"getReconfigurationRequestForVaultProxy\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nextComptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"executableTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct FundDeployer.ReconfigurationRequest\",\"name\":\"reconfigurationRequest_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReconfigurationTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reconfigurationTimelock_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultLib\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultLib_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"}],\"name\":\"hasReconfigurationRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasReconfigurationRequest_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nextComptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"invokeMigrationInCancelHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IMigrationHookHandler.MigrationOutHook\",\"name\":\"_hook\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"invokeMigrationOutHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"isAllowedBuySharesOnBehalfCaller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAllowed_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"}],\"name\":\"isAllowedVaultCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAllowed_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"}],\"name\":\"isRegisteredVaultCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isRegistered_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"}],\"name\":\"registerBuySharesOnBehalfCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_contracts\",\"type\":\"address[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_dataHashes\",\"type\":\"bytes32[]\"}],\"name\":\"registerVaultCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseIsLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isLive_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerLib\",\"type\":\"address\"}],\"name\":\"setComptrollerLib\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_nextDeactivateFeeManagerGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_nextPayProtocolFeeGasLimit\",\"type\":\"uint32\"}],\"name\":\"setGasLimitsForDestructCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocolFeeTracker\",\"type\":\"address\"}],\"name\":\"setProtocolFeeTracker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nextTimelock\",\"type\":\"uint256\"}],\"name\":\"setReconfigurationTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setReleaseLive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultLib\",\"type\":\"address\"}],\"name\":\"setVaultLib\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"cancelMigration(address,bool)\":{\"params\":{\"_bypassPrevReleaseFailure\":\"True if should override a failure in the previous release while canceling migration\",\"_vaultProxy\":\"The VaultProxy for which to cancel migration\"}},\"cancelReconfiguration(address)\":{\"params\":{\"_vaultProxy\":\"The VaultProxy contract for which to cancel the reconfiguration request\"}},\"createMigrationRequest(address,address,uint256,bytes,bytes,bool)\":{\"params\":{\"_bypassPrevReleaseFailure\":\"True if should override a failure in the previous release while signaling migration\",\"_denominationAsset\":\"The contract address of the denomination asset for the fund\",\"_feeManagerConfigData\":\"Bytes data for the fees to be enabled for the fund\",\"_policyManagerConfigData\":\"Bytes data for the policies to be enabled for the fund\",\"_sharesActionTimelock\":\"The minimum number of seconds between any two \\\"shares actions\\\" (buying or selling shares) by the same user\",\"_vaultProxy\":\"The VaultProxy to migrate\"},\"returns\":{\"comptrollerProxy_\":\"The address of the ComptrollerProxy deployed during this action\"}},\"createNewFund(address,string,address,uint256,bytes,bytes)\":{\"params\":{\"_denominationAsset\":\"The contract address of the denomination asset for the fund\",\"_feeManagerConfigData\":\"Bytes data for the fees to be enabled for the fund\",\"_fundName\":\"The name of the fund\",\"_fundOwner\":\"The address of the owner for the fund\",\"_policyManagerConfigData\":\"Bytes data for the policies to be enabled for the fund\",\"_sharesActionTimelock\":\"The minimum number of seconds between any two \\\"shares actions\\\" (buying or selling shares) by the same user\"},\"returns\":{\"comptrollerProxy_\":\"The address of the ComptrollerProxy deployed during this action\"}},\"createReconfigurationRequest(address,address,uint256,bytes,bytes)\":{\"params\":{\"_denominationAsset\":\"The contract address of the denomination asset for the fund\",\"_feeManagerConfigData\":\"Bytes data for the fees to be enabled for the fund\",\"_policyManagerConfigData\":\"Bytes data for the policies to be enabled for the fund\",\"_sharesActionTimelock\":\"The minimum number of seconds between any two \\\"shares actions\\\" (buying or selling shares) by the same user\",\"_vaultProxy\":\"The VaultProxy to reconfigure\"},\"returns\":{\"comptrollerProxy_\":\"The address of the ComptrollerProxy deployed during this action\"}},\"deregisterBuySharesOnBehalfCallers(address[])\":{\"params\":{\"_callers\":\"The callers to deregister\"}},\"deregisterVaultCalls(address[],bytes4[],bytes32[])\":{\"details\":\"ANY_VAULT_CALL is a wildcard that allows any payload\",\"params\":{\"_contracts\":\"The contracts of the calls to de-register\",\"_dataHashes\":\"The keccak call data hashes of the calls to de-register\",\"_selectors\":\"The selectors of the calls to de-register\"}},\"executeMigration(address,bool)\":{\"params\":{\"_bypassPrevReleaseFailure\":\"True if should override a failure in the previous release while executing migration\",\"_vaultProxy\":\"The VaultProxy for which to execute the migration\"}},\"executeReconfiguration(address)\":{\"details\":\"ProtocolFeeTracker.initializeForVault() does not need to be included in a reconfiguration, as it refers to the vault and not the new ComptrollerProxy\",\"params\":{\"_vaultProxy\":\"The VaultProxy contract for which to execute the reconfiguration request\"}},\"getComptrollerLib()\":{\"returns\":{\"comptrollerLib_\":\"The `comptrollerLib` variable value\"}},\"getCreator()\":{\"returns\":{\"creator_\":\"The `CREATOR` variable value\"}},\"getDispatcher()\":{\"returns\":{\"dispatcher_\":\"The `DISPATCHER` variable value\"}},\"getGasLimitsForDestructCall()\":{\"returns\":{\"deactivateFeeManagerGasLimit_\":\"The amount of gas to forward to deactivate the FeeManager\",\"payProtocolFeeGasLimit_\":\"The amount of gas to forward to pay the protocol fee\"}},\"getGasRelayPaymasterFactory()\":{\"returns\":{\"gasRelayPaymasterFactory_\":\"The `GAS_RELAY_PAYMASTER_FACTORY` variable value\"}},\"getGasRelayTrustedForwarder()\":{\"returns\":{\"trustedForwarder_\":\"The trusted forwarder\"}},\"getOwner()\":{\"details\":\"The owner is initially the contract's creator, for convenience in setting up configuration. Ownership is handed-off when the creator calls setReleaseLive().\",\"returns\":{\"owner_\":\"The contract owner address\"}},\"getProtocolFeeTracker()\":{\"returns\":{\"protocolFeeTracker_\":\"The `protocolFeeTracker` variable value\"}},\"getReconfigurationRequestForVaultProxy(address)\":{\"params\":{\"_vaultProxy\":\"The VaultProxy instance\"},\"returns\":{\"reconfigurationRequest_\":\"The pending ReconfigurationRequest\"}},\"getReconfigurationTimelock()\":{\"returns\":{\"reconfigurationTimelock_\":\"The timelock value (in seconds)\"}},\"getVaultLib()\":{\"returns\":{\"vaultLib_\":\"The `vaultLib` variable value\"}},\"hasReconfigurationRequest(address)\":{\"params\":{\"_vaultProxy\":\"The VaultProxy instance\"},\"returns\":{\"hasReconfigurationRequest_\":\"True if a ReconfigurationRequest exists\"}},\"invokeMigrationInCancelHook(address,address,address,address)\":{\"params\":{\"_nextComptrollerProxy\":\"The ComptrollerProxy created on this release\"}},\"invokeMigrationOutHook(uint8,address,address,address,address)\":{\"params\":{\"_vaultProxy\":\"The VaultProxy being migrated\"}},\"isAllowedBuySharesOnBehalfCaller(address)\":{\"params\":{\"_who\":\"The account to check\"},\"returns\":{\"isAllowed_\":\"True if the account is an allowed caller\"}},\"isAllowedVaultCall(address,bytes4,bytes32)\":{\"details\":\"A vault call is allowed if the _dataHash is specifically allowed, or if any _dataHash is allowed\",\"params\":{\"_contract\":\"The contract of the call to check\",\"_dataHash\":\"The keccak call data hash of the call to check\",\"_selector\":\"The selector of the call to check\"},\"returns\":{\"isAllowed_\":\"True if the call is allowed\"}},\"isRegisteredVaultCall(address,bytes4,bytes32)\":{\"params\":{\"_contract\":\"The contract of the call to check\",\"_dataHash\":\"The keccak call data hash of the call to check\",\"_selector\":\"The selector of the call to check\"},\"returns\":{\"isRegistered_\":\"True if the call is registered\"}},\"registerBuySharesOnBehalfCallers(address[])\":{\"details\":\"Validate that each registered caller only forwards requests to buy shares that originate from the same _buyer passed into buySharesOnBehalf(). This is critical to the integrity of VaultProxy.freelyTransferableShares.\",\"params\":{\"_callers\":\"The allowed callers\"}},\"registerVaultCalls(address[],bytes4[],bytes32[])\":{\"details\":\"ANY_VAULT_CALL is a wildcard that allows any payload\",\"params\":{\"_contracts\":\"The contracts of the calls to register\",\"_dataHashes\":\"The keccak call data hashes of the calls to register\",\"_selectors\":\"The selectors of the calls to register\"}},\"releaseIsLive()\":{\"returns\":{\"isLive_\":\"The `isLive` variable value\"}},\"setComptrollerLib(address)\":{\"params\":{\"_comptrollerLib\":\"The ComptrollerLib contract address\"}},\"setGasLimitsForDestructCall(uint32,uint32)\":{\"params\":{\"_nextDeactivateFeeManagerGasLimit\":\"The amount of gas to forward to deactivate the FeeManager\",\"_nextPayProtocolFeeGasLimit\":\"The amount of gas to forward to pay the protocol fee\"}},\"setProtocolFeeTracker(address)\":{\"params\":{\"_protocolFeeTracker\":\"The ProtocolFeeTracker contract address\"}},\"setReconfigurationTimelock(uint256)\":{\"params\":{\"_nextTimelock\":\"The number of seconds for the new timelock\"}},\"setReleaseLive()\":{\"details\":\"A live release allows funds to be created and migrated once this contract is set as the Dispatcher.currentFundDeployer\"},\"setVaultLib(address)\":{\"params\":{\"_vaultLib\":\"The VaultLib contract address\"}}},\"title\":\"FundDeployer Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelMigration(address,bool)\":{\"notice\":\"Cancels fund migration\"},\"cancelReconfiguration(address)\":{\"notice\":\"Cancels a pending reconfiguration request\"},\"createMigrationRequest(address,address,uint256,bytes,bytes,bool)\":{\"notice\":\"Creates a fully-configured ComptrollerProxy instance for a VaultProxy and signals the migration process\"},\"createNewFund(address,string,address,uint256,bytes,bytes)\":{\"notice\":\"Creates a new fund\"},\"createReconfigurationRequest(address,address,uint256,bytes,bytes)\":{\"notice\":\"Creates a fully-configured ComptrollerProxy instance for a VaultProxy and signals the reconfiguration process\"},\"deregisterBuySharesOnBehalfCallers(address[])\":{\"notice\":\"Deregisters allowed callers of ComptrollerProxy.buySharesOnBehalf()\"},\"deregisterVaultCalls(address[],bytes4[],bytes32[])\":{\"notice\":\"De-registers allowed arbitrary contract calls that can be sent from the VaultProxy\"},\"executeMigration(address,bool)\":{\"notice\":\"Executes fund migration\"},\"executeReconfiguration(address)\":{\"notice\":\"Executes a pending reconfiguration request\"},\"getComptrollerLib()\":{\"notice\":\"Gets the `comptrollerLib` variable value\"},\"getCreator()\":{\"notice\":\"Gets the `CREATOR` variable value\"},\"getDispatcher()\":{\"notice\":\"Gets the `DISPATCHER` variable value\"},\"getGasLimitsForDestructCall()\":{\"notice\":\"Gets the amounts of gas to forward to each of the ComptrollerLib.destructActivated() external calls\"},\"getGasRelayPaymasterFactory()\":{\"notice\":\"Gets the `GAS_RELAY_PAYMASTER_FACTORY` variable\"},\"getGasRelayTrustedForwarder()\":{\"notice\":\"Gets the trusted forwarder for GSN relaying\"},\"getOwner()\":{\"notice\":\"Gets the current owner of the contract\"},\"getProtocolFeeTracker()\":{\"notice\":\"Gets the `protocolFeeTracker` variable value\"},\"getReconfigurationRequestForVaultProxy(address)\":{\"notice\":\"Gets the pending ReconfigurationRequest for a given VaultProxy\"},\"getReconfigurationTimelock()\":{\"notice\":\"Gets the amount of time that must pass before executing a ReconfigurationRequest\"},\"getVaultLib()\":{\"notice\":\"Gets the `vaultLib` variable value\"},\"hasReconfigurationRequest(address)\":{\"notice\":\"Checks whether a ReconfigurationRequest exists for a given VaultProxy\"},\"invokeMigrationInCancelHook(address,address,address,address)\":{\"notice\":\"Executes logic when a migration is canceled on the Dispatcher\"},\"invokeMigrationOutHook(uint8,address,address,address,address)\":{\"notice\":\"Allows \\\"hooking into\\\" specific moments in the migration pipeline to execute arbitrary logic during a migration out of this release\"},\"isAllowedBuySharesOnBehalfCaller(address)\":{\"notice\":\"Checks if an account is an allowed caller of ComptrollerProxy.buySharesOnBehalf()\"},\"isAllowedVaultCall(address,bytes4,bytes32)\":{\"notice\":\"Checks if a contract call is allowed\"},\"isRegisteredVaultCall(address,bytes4,bytes32)\":{\"notice\":\"Checks if a contract call is registered\"},\"registerBuySharesOnBehalfCallers(address[])\":{\"notice\":\"Registers allowed callers of ComptrollerProxy.buySharesOnBehalf()\"},\"registerVaultCalls(address[],bytes4[],bytes32[])\":{\"notice\":\"Registers allowed arbitrary contract calls that can be sent from the VaultProxy\"},\"releaseIsLive()\":{\"notice\":\"Gets the `isLive` variable value\"},\"setComptrollerLib(address)\":{\"notice\":\"Sets the ComptrollerLib\"},\"setGasLimitsForDestructCall(uint32,uint32)\":{\"notice\":\"Sets the amounts of gas to forward to each of the ComptrollerLib.destructActivated() external calls\"},\"setProtocolFeeTracker(address)\":{\"notice\":\"Sets the ProtocolFeeTracker\"},\"setReconfigurationTimelock(uint256)\":{\"notice\":\"Sets a new reconfiguration timelock\"},\"setReleaseLive()\":{\"notice\":\"Sets the release as live\"},\"setVaultLib(address)\":{\"notice\":\"Sets the VaultLib\"}},\"notice\":\"The top-level contract of the release. It primarily coordinates fund deployment and fund migration, but it is also deferred to for contract access control and for allowed calls that can be made with a fund's VaultProxy as the msg.sender.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/core/fund-deployer/FundDeployer.sol\":\"FundDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IDispatcher Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IDispatcher {\\n    function cancelMigration(address _vaultProxy, bool _bypassFailure) external;\\n\\n    function claimOwnership() external;\\n\\n    function deployVaultProxy(\\n        address _vaultLib,\\n        address _owner,\\n        address _vaultAccessor,\\n        string calldata _fundName\\n    ) external returns (address vaultProxy_);\\n\\n    function executeMigration(address _vaultProxy, bool _bypassFailure) external;\\n\\n    function getCurrentFundDeployer() external view returns (address currentFundDeployer_);\\n\\n    function getFundDeployerForVaultProxy(address _vaultProxy)\\n        external\\n        view\\n        returns (address fundDeployer_);\\n\\n    function getMigrationRequestDetailsForVaultProxy(address _vaultProxy)\\n        external\\n        view\\n        returns (\\n            address nextFundDeployer_,\\n            address nextVaultAccessor_,\\n            address nextVaultLib_,\\n            uint256 executableTimestamp_\\n        );\\n\\n    function getMigrationTimelock() external view returns (uint256 migrationTimelock_);\\n\\n    function getNominatedOwner() external view returns (address nominatedOwner_);\\n\\n    function getOwner() external view returns (address owner_);\\n\\n    function getSharesTokenSymbol() external view returns (string memory sharesTokenSymbol_);\\n\\n    function getTimelockRemainingForMigrationRequest(address _vaultProxy)\\n        external\\n        view\\n        returns (uint256 secondsRemaining_);\\n\\n    function hasExecutableMigrationRequest(address _vaultProxy)\\n        external\\n        view\\n        returns (bool hasExecutableRequest_);\\n\\n    function hasMigrationRequest(address _vaultProxy)\\n        external\\n        view\\n        returns (bool hasMigrationRequest_);\\n\\n    function removeNominatedOwner() external;\\n\\n    function setCurrentFundDeployer(address _nextFundDeployer) external;\\n\\n    function setMigrationTimelock(uint256 _nextTimelock) external;\\n\\n    function setNominatedOwner(address _nextNominatedOwner) external;\\n\\n    function setSharesTokenSymbol(string calldata _nextSymbol) external;\\n\\n    function signalMigration(\\n        address _vaultProxy,\\n        address _nextVaultAccessor,\\n        address _nextVaultLib,\\n        bool _bypassFailure\\n    ) external;\\n}\\n\",\"keccak256\":\"0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30\",\"license\":\"GPL-3.0\"},\"contracts/persistent/dispatcher/IMigrationHookHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IMigrationHookHandler Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IMigrationHookHandler {\\n    enum MigrationOutHook {PreSignal, PostSignal, PreMigrate, PostMigrate, PostCancel}\\n\\n    function invokeMigrationInCancelHook(\\n        address _vaultProxy,\\n        address _prevFundDeployer,\\n        address _nextVaultAccessor,\\n        address _nextVaultLib\\n    ) external;\\n\\n    function invokeMigrationOutHook(\\n        MigrationOutHook _hook,\\n        address _vaultProxy,\\n        address _nextFundDeployer,\\n        address _nextVaultAccessor,\\n        address _nextVaultLib\\n    ) external;\\n}\\n\",\"keccak256\":\"0xb9eb3924cef9413ce2370b509225e503b8c402ac237ddd7d5cc36a7a91bf1a7a\",\"license\":\"GPL-3.0\"},\"contracts/persistent/vault/interfaces/IExternalPositionVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IExternalPositionVault interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// Provides an interface to get the externalPositionLib for a given type from the Vault\\ninterface IExternalPositionVault {\\n    function getExternalPositionLibForType(uint256) external view returns (address);\\n}\\n\",\"keccak256\":\"0x3c047551a9bab8cb84299c4cf17d0435f1d4d0791ecc1d03e0d55cb3450baad6\",\"license\":\"GPL-3.0\"},\"contracts/persistent/vault/interfaces/IFreelyTransferableSharesVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IFreelyTransferableSharesVault Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Provides the interface for determining whether a vault's shares\\n/// are guaranteed to be freely transferable.\\n/// @dev DO NOT EDIT CONTRACT\\ninterface IFreelyTransferableSharesVault {\\n    function sharesAreFreelyTransferable()\\n        external\\n        view\\n        returns (bool sharesAreFreelyTransferable_);\\n}\\n\",\"keccak256\":\"0xe31f063493e6e3a4434eaa5629c0a706b8fa0569aff3f4ef9d62e27a1928cfa0\",\"license\":\"GPL-3.0\"},\"contracts/persistent/vault/interfaces/IMigratableVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IMigratableVault Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @dev DO NOT EDIT CONTRACT\\ninterface IMigratableVault {\\n    function canMigrate(address _who) external view returns (bool canMigrate_);\\n\\n    function init(\\n        address _owner,\\n        address _accessor,\\n        string calldata _fundName\\n    ) external;\\n\\n    function setAccessor(address _nextAccessor) external;\\n\\n    function setVaultLib(address _nextVaultLib) external;\\n}\\n\",\"keccak256\":\"0x8e1355a7efa8ec2172f5c9b532071def392b86ab1e5534d2fc73417a6e9f7238\",\"license\":\"GPL-3.0\"},\"contracts/release/core/fund-deployer/FundDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../../../persistent/dispatcher/IDispatcher.sol\\\";\\nimport \\\"../../../persistent/dispatcher/IMigrationHookHandler.sol\\\";\\nimport \\\"../../extensions/IExtension.sol\\\";\\nimport \\\"../../infrastructure/gas-relayer/GasRelayRecipientMixin.sol\\\";\\nimport \\\"../../infrastructure/protocol-fees/IProtocolFeeTracker.sol\\\";\\nimport \\\"../fund/comptroller/ComptrollerProxy.sol\\\";\\nimport \\\"../fund/comptroller/IComptroller.sol\\\";\\nimport \\\"../fund/vault/IVault.sol\\\";\\nimport \\\"./IFundDeployer.sol\\\";\\nimport \\\"hardhat/console.sol\\\";\\n\\n/// @title FundDeployer Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice The top-level contract of the release.\\n/// It primarily coordinates fund deployment and fund migration, but\\n/// it is also deferred to for contract access control and for allowed calls\\n/// that can be made with a fund's VaultProxy as the msg.sender.\\ncontract FundDeployer is IFundDeployer, IMigrationHookHandler, GasRelayRecipientMixin {\\n    event BuySharesOnBehalfCallerDeregistered(address caller);\\n\\n    event BuySharesOnBehalfCallerRegistered(address caller);\\n\\n    event ComptrollerLibSet(address comptrollerLib);\\n\\n    event ComptrollerProxyDeployed(\\n        address indexed creator,\\n        address comptrollerProxy,\\n        address indexed denominationAsset,\\n        uint256 sharesActionTimelock\\n    );\\n\\n    event GasLimitsForDestructCallSet(\\n        uint256 nextDeactivateFeeManagerGasLimit,\\n        uint256 nextPayProtocolFeeGasLimit\\n    );\\n\\n    event MigrationRequestCreated(\\n        address indexed creator,\\n        address indexed vaultProxy,\\n        address comptrollerProxy\\n    );\\n\\n    event NewFundCreated(address indexed creator, address vaultProxy, address comptrollerProxy);\\n\\n    event ProtocolFeeTrackerSet(address protocolFeeTracker);\\n\\n    event ReconfigurationRequestCancelled(\\n        address indexed vaultProxy,\\n        address indexed nextComptrollerProxy\\n    );\\n\\n    event ReconfigurationRequestCreated(\\n        address indexed creator,\\n        address indexed vaultProxy,\\n        address comptrollerProxy,\\n        uint256 executableTimestamp\\n    );\\n\\n    event ReconfigurationRequestExecuted(\\n        address indexed vaultProxy,\\n        address indexed prevComptrollerProxy,\\n        address indexed nextComptrollerProxy\\n    );\\n\\n    event ReconfigurationTimelockSet(uint256 nextTimelock);\\n\\n    event ReleaseIsLive();\\n\\n    event VaultCallDeregistered(\\n        address indexed contractAddress,\\n        bytes4 selector,\\n        bytes32 dataHash\\n    );\\n\\n    event VaultCallRegistered(address indexed contractAddress, bytes4 selector, bytes32 dataHash);\\n\\n    event VaultLibSet(address vaultLib);\\n\\n    struct ReconfigurationRequest {\\n        address nextComptrollerProxy;\\n        uint256 executableTimestamp;\\n    }\\n\\n    // Constants\\n    // keccak256(abi.encodePacked(\\\"mln.vaultCall.any\\\")\\n    bytes32\\n        private constant ANY_VAULT_CALL = 0x5bf1898dd28c4d29f33c4c1bb9b8a7e2f6322847d70be63e8f89de024d08a669;\\n\\n    address private immutable CREATOR;\\n    address private immutable DISPATCHER;\\n\\n    // Pseudo-constants (can only be set once)\\n    address private comptrollerLib;\\n    address private protocolFeeTracker;\\n    address private vaultLib;\\n\\n    // Storage\\n    uint32 private gasLimitForDestructCallToDeactivateFeeManager; // Can reduce to uint16\\n    uint32 private gasLimitForDestructCallToPayProtocolFee; // Can reduce to uint16\\n    bool private isLive;\\n    uint256 private reconfigurationTimelock;\\n\\n    mapping(address => bool) private acctToIsAllowedBuySharesOnBehalfCaller;\\n    mapping(bytes32 => mapping(bytes32 => bool)) private vaultCallToPayloadToIsAllowed;\\n    mapping(address => ReconfigurationRequest) private vaultProxyToReconfigurationRequest;\\n\\n    modifier onlyDispatcher() {\\n        require(msg.sender == DISPATCHER, \\\"Only Dispatcher can call this function\\\");\\n        _;\\n    }\\n\\n    modifier onlyLiveRelease() {\\n        require(releaseIsLive(), \\\"Release is not yet live\\\");\\n        _;\\n    }\\n\\n    modifier onlyMigrator(address _vaultProxy) {\\n        __assertIsMigrator(_vaultProxy, __msgSender());\\n        _;\\n    }\\n\\n    modifier onlyMigratorNotRelayable(address _vaultProxy) {\\n        __assertIsMigrator(_vaultProxy, msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == getOwner(), \\\"Only the contract owner can call this function\\\");\\n        _;\\n    }\\n\\n    modifier pseudoConstant(address _storageValue) {\\n        require(_storageValue == address(0), \\\"This value can only be set once\\\");\\n        _;\\n    }\\n\\n    function __assertIsMigrator(address _vaultProxy, address _who) private view {\\n        require(\\n            IVault(_vaultProxy).canMigrate(_who),\\n            \\\"Only a permissioned migrator can call this function\\\"\\n        );\\n    }\\n\\n    constructor(address _dispatcher, address _gasRelayPaymasterFactory)\\n        public\\n        GasRelayRecipientMixin(_gasRelayPaymasterFactory)\\n    {\\n        // Validate constants\\n        require(\\n            ANY_VAULT_CALL == keccak256(abi.encodePacked(\\\"mln.vaultCall.any\\\")),\\n            \\\"constructor: Incorrect ANY_VAULT_CALL\\\"\\n        );\\n\\n        CREATOR = msg.sender;\\n        DISPATCHER = _dispatcher;\\n\\n        // Estimated base call cost: 17k\\n        // Per fee that uses shares outstanding (default recipient): 33k\\n        // 300k accommodates up to 8 such fees\\n        gasLimitForDestructCallToDeactivateFeeManager = 300000;\\n        // Estimated cost: 50k\\n        gasLimitForDestructCallToPayProtocolFee = 200000;\\n\\n        reconfigurationTimelock = 2 days;\\n    }\\n\\n    //////////////////////////////////////\\n    // PSEUDO-CONSTANTS (only set once) //\\n    //////////////////////////////////////\\n\\n    /// @notice Sets the ComptrollerLib\\n    /// @param _comptrollerLib The ComptrollerLib contract address\\n    function setComptrollerLib(address _comptrollerLib)\\n        external\\n        onlyOwner\\n        pseudoConstant(getComptrollerLib())\\n    {\\n        comptrollerLib = _comptrollerLib;\\n\\n        emit ComptrollerLibSet(_comptrollerLib);\\n    }\\n\\n    /// @notice Sets the ProtocolFeeTracker\\n    /// @param _protocolFeeTracker The ProtocolFeeTracker contract address\\n    function setProtocolFeeTracker(address _protocolFeeTracker)\\n        external\\n        onlyOwner\\n        pseudoConstant(getProtocolFeeTracker())\\n    {\\n        protocolFeeTracker = _protocolFeeTracker;\\n\\n        emit ProtocolFeeTrackerSet(_protocolFeeTracker);\\n    }\\n\\n    /// @notice Sets the VaultLib\\n    /// @param _vaultLib The VaultLib contract address\\n    function setVaultLib(address _vaultLib) external onlyOwner pseudoConstant(getVaultLib()) {\\n        vaultLib = _vaultLib;\\n\\n        emit VaultLibSet(_vaultLib);\\n    }\\n\\n    /////////////\\n    // GENERAL //\\n    /////////////\\n\\n    /// @notice Gets the current owner of the contract\\n    /// @return owner_ The contract owner address\\n    /// @dev The owner is initially the contract's creator, for convenience in setting up configuration.\\n    /// Ownership is handed-off when the creator calls setReleaseLive().\\n    function getOwner() public view override returns (address owner_) {\\n        if (!releaseIsLive()) {\\n            return getCreator();\\n        }\\n\\n        return IDispatcher(getDispatcher()).getOwner();\\n    }\\n\\n    /// @notice Sets the amounts of gas to forward to each of the ComptrollerLib.destructActivated() external calls\\n    /// @param _nextDeactivateFeeManagerGasLimit The amount of gas to forward to deactivate the FeeManager\\n    /// @param _nextPayProtocolFeeGasLimit The amount of gas to forward to pay the protocol fee\\n    function setGasLimitsForDestructCall(\\n        uint32 _nextDeactivateFeeManagerGasLimit,\\n        uint32 _nextPayProtocolFeeGasLimit\\n    ) external onlyOwner {\\n        require(\\n            _nextDeactivateFeeManagerGasLimit > 0 && _nextPayProtocolFeeGasLimit > 0,\\n            \\\"setGasLimitsForDestructCall: Zero value not allowed\\\"\\n        );\\n\\n        gasLimitForDestructCallToDeactivateFeeManager = _nextDeactivateFeeManagerGasLimit;\\n        gasLimitForDestructCallToPayProtocolFee = _nextPayProtocolFeeGasLimit;\\n\\n        emit GasLimitsForDestructCallSet(\\n            _nextDeactivateFeeManagerGasLimit,\\n            _nextPayProtocolFeeGasLimit\\n        );\\n    }\\n\\n    /// @notice Sets the release as live\\n    /// @dev A live release allows funds to be created and migrated once this contract\\n    /// is set as the Dispatcher.currentFundDeployer\\n    function setReleaseLive() external {\\n        require(\\n            msg.sender == getCreator(),\\n            \\\"setReleaseLive: Only the creator can call this function\\\"\\n        );\\n        require(!releaseIsLive(), \\\"setReleaseLive: Already live\\\");\\n\\n        // All pseudo-constants should be set\\n        require(getComptrollerLib() != address(0), \\\"setReleaseLive: comptrollerLib is not set\\\");\\n        require(\\n            getProtocolFeeTracker() != address(0),\\n            \\\"setReleaseLive: protocolFeeTracker is not set\\\"\\n        );\\n        require(getVaultLib() != address(0), \\\"setReleaseLive: vaultLib is not set\\\");\\n\\n        isLive = true;\\n\\n        emit ReleaseIsLive();\\n    }\\n\\n    /// @dev Helper to call ComptrollerProxy.destructActivated() with the correct params\\n    function __destructActivatedComptrollerProxy(address _comptrollerProxy) private {\\n        (\\n            uint256 deactivateFeeManagerGasLimit,\\n            uint256 payProtocolFeeGasLimit\\n        ) = getGasLimitsForDestructCall();\\n        IComptroller(_comptrollerProxy).destructActivated(\\n            deactivateFeeManagerGasLimit,\\n            payProtocolFeeGasLimit\\n        );\\n    }\\n\\n    ///////////////////\\n    // FUND CREATION //\\n    ///////////////////\\n\\n    /// @notice Creates a fully-configured ComptrollerProxy instance for a VaultProxy and signals the migration process\\n    /// @param _vaultProxy The VaultProxy to migrate\\n    /// @param _denominationAsset The contract address of the denomination asset for the fund\\n    /// @param _sharesActionTimelock The minimum number of seconds between any two \\\"shares actions\\\"\\n    /// (buying or selling shares) by the same user\\n    /// @param _feeManagerConfigData Bytes data for the fees to be enabled for the fund\\n    /// @param _policyManagerConfigData Bytes data for the policies to be enabled for the fund\\n    /// @param _bypassPrevReleaseFailure True if should override a failure in the previous release while signaling migration\\n    /// @return comptrollerProxy_ The address of the ComptrollerProxy deployed during this action\\n    function createMigrationRequest(\\n        address _vaultProxy,\\n        address _denominationAsset,\\n        uint256 _sharesActionTimelock,\\n        bytes calldata _feeManagerConfigData,\\n        bytes calldata _policyManagerConfigData,\\n        bool _bypassPrevReleaseFailure\\n    )\\n        external\\n        onlyLiveRelease\\n        onlyMigratorNotRelayable(_vaultProxy)\\n        returns (address comptrollerProxy_)\\n    {\\n        // Bad _vaultProxy value is validated by Dispatcher.signalMigration()\\n\\n        require(\\n            !IDispatcher(getDispatcher()).hasMigrationRequest(_vaultProxy),\\n            \\\"createMigrationRequest: A MigrationRequest already exists\\\"\\n        );\\n\\n        comptrollerProxy_ = __deployComptrollerProxy(\\n            msg.sender,\\n            _denominationAsset,\\n            _sharesActionTimelock\\n        );\\n\\n        IComptroller(comptrollerProxy_).setVaultProxy(_vaultProxy);\\n\\n        __configureExtensions(\\n            comptrollerProxy_,\\n            _vaultProxy,\\n            _feeManagerConfigData,\\n            _policyManagerConfigData\\n        );\\n\\n        IDispatcher(getDispatcher()).signalMigration(\\n            _vaultProxy,\\n            comptrollerProxy_,\\n            getVaultLib(),\\n            _bypassPrevReleaseFailure\\n        );\\n\\n        emit MigrationRequestCreated(msg.sender, _vaultProxy, comptrollerProxy_);\\n\\n        return comptrollerProxy_;\\n    }\\n\\n    /// @notice Creates a new fund\\n    /// @param _fundOwner The address of the owner for the fund\\n    /// @param _fundName The name of the fund\\n    /// @param _denominationAsset The contract address of the denomination asset for the fund\\n    /// @param _sharesActionTimelock The minimum number of seconds between any two \\\"shares actions\\\"\\n    /// (buying or selling shares) by the same user\\n    /// @param _feeManagerConfigData Bytes data for the fees to be enabled for the fund\\n    /// @param _policyManagerConfigData Bytes data for the policies to be enabled for the fund\\n    /// @return comptrollerProxy_ The address of the ComptrollerProxy deployed during this action\\n    function createNewFund(\\n        address _fundOwner,\\n        string calldata _fundName,\\n        address _denominationAsset,\\n        uint256 _sharesActionTimelock,\\n        bytes calldata _feeManagerConfigData,\\n        bytes calldata _policyManagerConfigData\\n    ) external onlyLiveRelease returns (address comptrollerProxy_, address vaultProxy_) {\\n\\n        console.log(\\\"fund Owner:%s\\\",_fundOwner);\\n        console.log(\\\"fund name:%s\\\",_fundName);\\n        console.log(\\\"asset:%s\\\",_denominationAsset);\\n\\n        // _fundOwner is validated by VaultLib.__setOwner()\\n        address canonicalSender = __msgSender();\\n\\n        comptrollerProxy_ = __deployComptrollerProxy(\\n            canonicalSender,\\n            _denominationAsset,\\n            _sharesActionTimelock\\n        );\\n\\n        console.log(\\\"createNewFund:comptrollerProxy_:%s\\\",comptrollerProxy_);\\n        vaultProxy_ = IDispatcher(getDispatcher()).deployVaultProxy(\\n            getVaultLib(),\\n            _fundOwner,\\n            comptrollerProxy_,\\n            _fundName\\n        );\\n        console.log(\\\"createNewFund:vaultProxy_:%s\\\",vaultProxy_);\\n\\n        IComptroller comptrollerContract = IComptroller(comptrollerProxy_);\\n        console.log(\\\"createNewFund:comptrollerContract:%s\\\",address(comptrollerContract));\\n        comptrollerContract.setVaultProxy(vaultProxy_);\\n         console.log(\\\"createNewFund:setVaultProxy\\\");\\n\\n        __configureExtensions(\\n            comptrollerProxy_,\\n            vaultProxy_,\\n            _feeManagerConfigData,\\n            _policyManagerConfigData\\n        );\\n        console.log(\\\"createNewFund:__configureExtensions\\\");\\n\\n        comptrollerContract.activate(false);\\n        console.log(\\\"createNewFund:comptrollerContract.activate\\\");\\n\\n        IProtocolFeeTracker(getProtocolFeeTracker()).initializeForVault(vaultProxy_);\\n\\n        console.log(\\\"createNewFund:IProtocolFeeTracker\\\");\\n        emit NewFundCreated(canonicalSender, vaultProxy_, comptrollerProxy_);\\n        console.log(\\\"createNewFund:NewFundCreated\\\");\\n        return (comptrollerProxy_, vaultProxy_);\\n    }\\n\\n    /// @notice Creates a fully-configured ComptrollerProxy instance for a VaultProxy and signals the reconfiguration process\\n    /// @param _vaultProxy The VaultProxy to reconfigure\\n    /// @param _denominationAsset The contract address of the denomination asset for the fund\\n    /// @param _sharesActionTimelock The minimum number of seconds between any two \\\"shares actions\\\"\\n    /// (buying or selling shares) by the same user\\n    /// @param _feeManagerConfigData Bytes data for the fees to be enabled for the fund\\n    /// @param _policyManagerConfigData Bytes data for the policies to be enabled for the fund\\n    /// @return comptrollerProxy_ The address of the ComptrollerProxy deployed during this action\\n    function createReconfigurationRequest(\\n        address _vaultProxy,\\n        address _denominationAsset,\\n        uint256 _sharesActionTimelock,\\n        bytes calldata _feeManagerConfigData,\\n        bytes calldata _policyManagerConfigData\\n    ) external returns (address comptrollerProxy_) {\\n        address canonicalSender = __msgSender();\\n        __assertIsMigrator(_vaultProxy, canonicalSender);\\n        require(\\n            IDispatcher(getDispatcher()).getFundDeployerForVaultProxy(_vaultProxy) ==\\n                address(this),\\n            \\\"createReconfigurationRequest: VaultProxy not on this release\\\"\\n        );\\n        require(\\n            !hasReconfigurationRequest(_vaultProxy),\\n            \\\"createReconfigurationRequest: VaultProxy has a pending reconfiguration request\\\"\\n        );\\n\\n        comptrollerProxy_ = __deployComptrollerProxy(\\n            canonicalSender,\\n            _denominationAsset,\\n            _sharesActionTimelock\\n        );\\n\\n        IComptroller(comptrollerProxy_).setVaultProxy(_vaultProxy);\\n\\n        __configureExtensions(\\n            comptrollerProxy_,\\n            _vaultProxy,\\n            _feeManagerConfigData,\\n            _policyManagerConfigData\\n        );\\n\\n        uint256 executableTimestamp = block.timestamp + getReconfigurationTimelock();\\n        vaultProxyToReconfigurationRequest[_vaultProxy] = ReconfigurationRequest({\\n            nextComptrollerProxy: comptrollerProxy_,\\n            executableTimestamp: executableTimestamp\\n        });\\n\\n        emit ReconfigurationRequestCreated(\\n            canonicalSender,\\n            _vaultProxy,\\n            comptrollerProxy_,\\n            executableTimestamp\\n        );\\n\\n        return comptrollerProxy_;\\n    }\\n\\n    /// @dev Helper function to configure the Extensions for a given ComptrollerProxy\\n    function __configureExtensions(\\n        address _comptrollerProxy,\\n        address _vaultProxy,\\n        bytes memory _feeManagerConfigData,\\n        bytes memory _policyManagerConfigData\\n    ) private {\\n        console.log (\\\"__configureExtensions _feeManagerConfigData.length:%s\\\", _feeManagerConfigData.length > 0);\\n        console.log (\\\" __configureExtensions: _comptrollerProxy %s\\\",_comptrollerProxy);\\n        console.log (\\\" __configureExtensions: _vaultProxy %s\\\",_vaultProxy);\\n        // Since fees can only be set in this step, if there are no fees, there is no need to set the validated VaultProxy\\n        if (_feeManagerConfigData.length > 0) {\\n            address feeManager = IComptroller(_comptrollerProxy).getFeeManager();\\n            console.log (\\\" __configureExtensions: feeManager %s\\\",feeManager);\\n            console.log (\\\" __configureExtensions: sender %s\\\",msg.sender);\\n            IExtension(feeManager).setConfigForFund(\\n                _comptrollerProxy,\\n                _vaultProxy,\\n                _feeManagerConfigData\\n            );\\n        }\\n        console.log (\\\"__configureExtensions first step\\\");\\n        \\n\\n        // For all other extensions, we call to cache the validated VaultProxy, for simplicity.\\n        // In the future, we can consider caching conditionally.\\n        IExtension(IComptroller(_comptrollerProxy).getExternalPositionManager()).setConfigForFund(\\n            _comptrollerProxy,\\n            _vaultProxy,\\n            \\\"\\\"\\n        );\\n        IExtension(IComptroller(_comptrollerProxy).getIntegrationManager()).setConfigForFund(\\n            _comptrollerProxy,\\n            _vaultProxy,\\n            \\\"\\\"\\n        );\\n        IExtension(IComptroller(_comptrollerProxy).getPolicyManager()).setConfigForFund(\\n            _comptrollerProxy,\\n            _vaultProxy,\\n            _policyManagerConfigData\\n        );\\n    }\\n\\n    /// @dev Helper function to deploy a configured ComptrollerProxy\\n    function __deployComptrollerProxy(\\n        address _canonicalSender,\\n        address _denominationAsset,\\n        uint256 _sharesActionTimelock\\n    ) private returns (address comptrollerProxy_) {\\n        // _denominationAsset is validated by ComptrollerLib.init()\\n\\n        bytes memory constructData = abi.encodeWithSelector(\\n            IComptroller.init.selector,\\n            _denominationAsset,\\n            _sharesActionTimelock\\n        );\\n        comptrollerProxy_ = address(new ComptrollerProxy(constructData, getComptrollerLib()));\\n\\n        emit ComptrollerProxyDeployed(\\n            _canonicalSender,\\n            comptrollerProxy_,\\n            _denominationAsset,\\n            _sharesActionTimelock\\n        );\\n\\n        return comptrollerProxy_;\\n    }\\n\\n    ///////////////////////////////////////////////\\n    // RECONFIGURATION (INTRA-RELEASE MIGRATION) //\\n    ///////////////////////////////////////////////\\n\\n    /// @notice Cancels a pending reconfiguration request\\n    /// @param _vaultProxy The VaultProxy contract for which to cancel the reconfiguration request\\n    function cancelReconfiguration(address _vaultProxy) external onlyMigrator(_vaultProxy) {\\n        address nextComptrollerProxy = vaultProxyToReconfigurationRequest[_vaultProxy]\\n            .nextComptrollerProxy;\\n        require(\\n            nextComptrollerProxy != address(0),\\n            \\\"cancelReconfiguration: No reconfiguration request exists for _vaultProxy\\\"\\n        );\\n\\n        // Destroy the nextComptrollerProxy\\n        IComptroller(nextComptrollerProxy).destructUnactivated();\\n\\n        // Remove the reconfiguration request\\n        delete vaultProxyToReconfigurationRequest[_vaultProxy];\\n\\n        emit ReconfigurationRequestCancelled(_vaultProxy, nextComptrollerProxy);\\n    }\\n\\n    /// @notice Executes a pending reconfiguration request\\n    /// @param _vaultProxy The VaultProxy contract for which to execute the reconfiguration request\\n    /// @dev ProtocolFeeTracker.initializeForVault() does not need to be included in a reconfiguration,\\n    /// as it refers to the vault and not the new ComptrollerProxy\\n    function executeReconfiguration(address _vaultProxy) external onlyMigrator(_vaultProxy) {\\n        ReconfigurationRequest memory request = getReconfigurationRequestForVaultProxy(\\n            _vaultProxy\\n        );\\n        require(\\n            request.nextComptrollerProxy != address(0),\\n            \\\"executeReconfiguration: No reconfiguration request exists for _vaultProxy\\\"\\n        );\\n        require(\\n            block.timestamp >= request.executableTimestamp,\\n            \\\"executeReconfiguration: The reconfiguration timelock has not elapsed\\\"\\n        );\\n        // Not technically necessary, but a nice assurance\\n        require(\\n            IDispatcher(getDispatcher()).getFundDeployerForVaultProxy(_vaultProxy) ==\\n                address(this),\\n            \\\"executeReconfiguration: _vaultProxy is no longer on this release\\\"\\n        );\\n\\n        // Unwind and destroy the prevComptrollerProxy before setting the nextComptrollerProxy as the VaultProxy.accessor\\n        address prevComptrollerProxy = IVault(_vaultProxy).getAccessor();\\n        address paymaster = IComptroller(prevComptrollerProxy).getGasRelayPaymaster();\\n        __destructActivatedComptrollerProxy(prevComptrollerProxy);\\n\\n        // Execute the reconfiguration\\n        IVault(_vaultProxy).setAccessorForFundReconfiguration(request.nextComptrollerProxy);\\n\\n        // Activate the new ComptrollerProxy\\n        IComptroller(request.nextComptrollerProxy).activate(true);\\n        if (paymaster != address(0)) {\\n            IComptroller(request.nextComptrollerProxy).setGasRelayPaymaster(paymaster);\\n        }\\n\\n        // Remove the reconfiguration request\\n        delete vaultProxyToReconfigurationRequest[_vaultProxy];\\n\\n        emit ReconfigurationRequestExecuted(\\n            _vaultProxy,\\n            prevComptrollerProxy,\\n            request.nextComptrollerProxy\\n        );\\n    }\\n\\n    /// @notice Sets a new reconfiguration timelock\\n    /// @param _nextTimelock The number of seconds for the new timelock\\n    function setReconfigurationTimelock(uint256 _nextTimelock) external onlyOwner {\\n        reconfigurationTimelock = _nextTimelock;\\n\\n        emit ReconfigurationTimelockSet(_nextTimelock);\\n    }\\n\\n    //////////////////\\n    // MIGRATION IN //\\n    //////////////////\\n\\n    /// @notice Cancels fund migration\\n    /// @param _vaultProxy The VaultProxy for which to cancel migration\\n    /// @param _bypassPrevReleaseFailure True if should override a failure in the previous release while canceling migration\\n    function cancelMigration(address _vaultProxy, bool _bypassPrevReleaseFailure)\\n        external\\n        onlyMigratorNotRelayable(_vaultProxy)\\n    {\\n        IDispatcher(getDispatcher()).cancelMigration(_vaultProxy, _bypassPrevReleaseFailure);\\n    }\\n\\n    /// @notice Executes fund migration\\n    /// @param _vaultProxy The VaultProxy for which to execute the migration\\n    /// @param _bypassPrevReleaseFailure True if should override a failure in the previous release while executing migration\\n    function executeMigration(address _vaultProxy, bool _bypassPrevReleaseFailure)\\n        external\\n        onlyMigratorNotRelayable(_vaultProxy)\\n    {\\n        IDispatcher dispatcherContract = IDispatcher(getDispatcher());\\n\\n        (, address comptrollerProxy, , ) = dispatcherContract\\n            .getMigrationRequestDetailsForVaultProxy(_vaultProxy);\\n\\n        dispatcherContract.executeMigration(_vaultProxy, _bypassPrevReleaseFailure);\\n\\n        IComptroller(comptrollerProxy).activate(true);\\n\\n        IProtocolFeeTracker(getProtocolFeeTracker()).initializeForVault(_vaultProxy);\\n    }\\n\\n    /// @notice Executes logic when a migration is canceled on the Dispatcher\\n    /// @param _nextComptrollerProxy The ComptrollerProxy created on this release\\n    function invokeMigrationInCancelHook(\\n        address,\\n        address,\\n        address _nextComptrollerProxy,\\n        address\\n    ) external override onlyDispatcher {\\n        IComptroller(_nextComptrollerProxy).destructUnactivated();\\n    }\\n\\n    ///////////////////\\n    // MIGRATION OUT //\\n    ///////////////////\\n\\n    /// @notice Allows \\\"hooking into\\\" specific moments in the migration pipeline\\n    /// to execute arbitrary logic during a migration out of this release\\n    /// @param _vaultProxy The VaultProxy being migrated\\n    function invokeMigrationOutHook(\\n        MigrationOutHook _hook,\\n        address _vaultProxy,\\n        address,\\n        address,\\n        address\\n    ) external override onlyDispatcher {\\n        if (_hook != MigrationOutHook.PreMigrate) {\\n            return;\\n        }\\n\\n        // Must use PreMigrate hook to get the ComptrollerProxy from the VaultProxy\\n        address comptrollerProxy = IVault(_vaultProxy).getAccessor();\\n\\n        // Wind down fund and destroy its config\\n        __destructActivatedComptrollerProxy(comptrollerProxy);\\n    }\\n\\n    //////////////\\n    // REGISTRY //\\n    //////////////\\n\\n    // BUY SHARES CALLERS\\n\\n    /// @notice Deregisters allowed callers of ComptrollerProxy.buySharesOnBehalf()\\n    /// @param _callers The callers to deregister\\n    function deregisterBuySharesOnBehalfCallers(address[] calldata _callers) external onlyOwner {\\n        for (uint256 i; i < _callers.length; i++) {\\n            require(\\n                isAllowedBuySharesOnBehalfCaller(_callers[i]),\\n                \\\"deregisterBuySharesOnBehalfCallers: Caller not registered\\\"\\n            );\\n\\n            acctToIsAllowedBuySharesOnBehalfCaller[_callers[i]] = false;\\n\\n            emit BuySharesOnBehalfCallerDeregistered(_callers[i]);\\n        }\\n    }\\n\\n    /// @notice Registers allowed callers of ComptrollerProxy.buySharesOnBehalf()\\n    /// @param _callers The allowed callers\\n    /// @dev Validate that each registered caller only forwards requests to buy shares that\\n    /// originate from the same _buyer passed into buySharesOnBehalf(). This is critical\\n    /// to the integrity of VaultProxy.freelyTransferableShares.\\n    function registerBuySharesOnBehalfCallers(address[] calldata _callers) external onlyOwner {\\n        for (uint256 i; i < _callers.length; i++) {\\n            require(\\n                !isAllowedBuySharesOnBehalfCaller(_callers[i]),\\n                \\\"registerBuySharesOnBehalfCallers: Caller already registered\\\"\\n            );\\n\\n            acctToIsAllowedBuySharesOnBehalfCaller[_callers[i]] = true;\\n\\n            emit BuySharesOnBehalfCallerRegistered(_callers[i]);\\n        }\\n    }\\n\\n    // VAULT CALLS\\n\\n    /// @notice De-registers allowed arbitrary contract calls that can be sent from the VaultProxy\\n    /// @param _contracts The contracts of the calls to de-register\\n    /// @param _selectors The selectors of the calls to de-register\\n    /// @param _dataHashes The keccak call data hashes of the calls to de-register\\n    /// @dev ANY_VAULT_CALL is a wildcard that allows any payload\\n    function deregisterVaultCalls(\\n        address[] calldata _contracts,\\n        bytes4[] calldata _selectors,\\n        bytes32[] memory _dataHashes\\n    ) external onlyOwner {\\n        require(_contracts.length > 0, \\\"deregisterVaultCalls: Empty _contracts\\\");\\n        require(\\n            _contracts.length == _selectors.length && _contracts.length == _dataHashes.length,\\n            \\\"deregisterVaultCalls: Uneven input arrays\\\"\\n        );\\n\\n        for (uint256 i; i < _contracts.length; i++) {\\n            require(\\n                isRegisteredVaultCall(_contracts[i], _selectors[i], _dataHashes[i]),\\n                \\\"deregisterVaultCalls: Call not registered\\\"\\n            );\\n\\n            vaultCallToPayloadToIsAllowed[keccak256(\\n                abi.encodePacked(_contracts[i], _selectors[i])\\n            )][_dataHashes[i]] = false;\\n\\n            emit VaultCallDeregistered(_contracts[i], _selectors[i], _dataHashes[i]);\\n        }\\n    }\\n\\n    /// @notice Registers allowed arbitrary contract calls that can be sent from the VaultProxy\\n    /// @param _contracts The contracts of the calls to register\\n    /// @param _selectors The selectors of the calls to register\\n    /// @param _dataHashes The keccak call data hashes of the calls to register\\n    /// @dev ANY_VAULT_CALL is a wildcard that allows any payload\\n    function registerVaultCalls(\\n        address[] calldata _contracts,\\n        bytes4[] calldata _selectors,\\n        bytes32[] memory _dataHashes\\n    ) external onlyOwner {\\n        require(_contracts.length > 0, \\\"registerVaultCalls: Empty _contracts\\\");\\n        require(\\n            _contracts.length == _selectors.length && _contracts.length == _dataHashes.length,\\n            \\\"registerVaultCalls: Uneven input arrays\\\"\\n        );\\n\\n        for (uint256 i; i < _contracts.length; i++) {\\n            require(\\n                !isRegisteredVaultCall(_contracts[i], _selectors[i], _dataHashes[i]),\\n                \\\"registerVaultCalls: Call already registered\\\"\\n            );\\n\\n            vaultCallToPayloadToIsAllowed[keccak256(\\n                abi.encodePacked(_contracts[i], _selectors[i])\\n            )][_dataHashes[i]] = true;\\n\\n            emit VaultCallRegistered(_contracts[i], _selectors[i], _dataHashes[i]);\\n        }\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    // EXTERNAL FUNCTIONS\\n\\n    /// @notice Checks if a contract call is allowed\\n    /// @param _contract The contract of the call to check\\n    /// @param _selector The selector of the call to check\\n    /// @param _dataHash The keccak call data hash of the call to check\\n    /// @return isAllowed_ True if the call is allowed\\n    /// @dev A vault call is allowed if the _dataHash is specifically allowed,\\n    /// or if any _dataHash is allowed\\n    function isAllowedVaultCall(\\n        address _contract,\\n        bytes4 _selector,\\n        bytes32 _dataHash\\n    ) external view override returns (bool isAllowed_) {\\n        bytes32 contractFunctionHash = keccak256(abi.encodePacked(_contract, _selector));\\n\\n        return\\n            vaultCallToPayloadToIsAllowed[contractFunctionHash][_dataHash] ||\\n            vaultCallToPayloadToIsAllowed[contractFunctionHash][ANY_VAULT_CALL];\\n    }\\n\\n    // PUBLIC FUNCTIONS\\n\\n    /// @notice Gets the `comptrollerLib` variable value\\n    /// @return comptrollerLib_ The `comptrollerLib` variable value\\n    function getComptrollerLib() public view returns (address comptrollerLib_) {\\n        return comptrollerLib;\\n    }\\n\\n    /// @notice Gets the `CREATOR` variable value\\n    /// @return creator_ The `CREATOR` variable value\\n    function getCreator() public view returns (address creator_) {\\n        return CREATOR;\\n    }\\n\\n    /// @notice Gets the `DISPATCHER` variable value\\n    /// @return dispatcher_ The `DISPATCHER` variable value\\n    function getDispatcher() public view returns (address dispatcher_) {\\n        return DISPATCHER;\\n    }\\n\\n    /// @notice Gets the amounts of gas to forward to each of the ComptrollerLib.destructActivated() external calls\\n    /// @return deactivateFeeManagerGasLimit_ The amount of gas to forward to deactivate the FeeManager\\n    /// @return payProtocolFeeGasLimit_ The amount of gas to forward to pay the protocol fee\\n    function getGasLimitsForDestructCall()\\n        public\\n        view\\n        returns (uint256 deactivateFeeManagerGasLimit_, uint256 payProtocolFeeGasLimit_)\\n    {\\n        return (\\n            gasLimitForDestructCallToDeactivateFeeManager,\\n            gasLimitForDestructCallToPayProtocolFee\\n        );\\n    }\\n\\n    /// @notice Gets the `protocolFeeTracker` variable value\\n    /// @return protocolFeeTracker_ The `protocolFeeTracker` variable value\\n    function getProtocolFeeTracker() public view returns (address protocolFeeTracker_) {\\n        return protocolFeeTracker;\\n    }\\n\\n    /// @notice Gets the pending ReconfigurationRequest for a given VaultProxy\\n    /// @param _vaultProxy The VaultProxy instance\\n    /// @return reconfigurationRequest_ The pending ReconfigurationRequest\\n    function getReconfigurationRequestForVaultProxy(address _vaultProxy)\\n        public\\n        view\\n        returns (ReconfigurationRequest memory reconfigurationRequest_)\\n    {\\n        return vaultProxyToReconfigurationRequest[_vaultProxy];\\n    }\\n\\n    /// @notice Gets the amount of time that must pass before executing a ReconfigurationRequest\\n    /// @return reconfigurationTimelock_ The timelock value (in seconds)\\n    function getReconfigurationTimelock() public view returns (uint256 reconfigurationTimelock_) {\\n        return reconfigurationTimelock;\\n    }\\n\\n    /// @notice Gets the `vaultLib` variable value\\n    /// @return vaultLib_ The `vaultLib` variable value\\n    function getVaultLib() public view returns (address vaultLib_) {\\n        return vaultLib;\\n    }\\n\\n    /// @notice Checks whether a ReconfigurationRequest exists for a given VaultProxy\\n    /// @param _vaultProxy The VaultProxy instance\\n    /// @return hasReconfigurationRequest_ True if a ReconfigurationRequest exists\\n    function hasReconfigurationRequest(address _vaultProxy)\\n        public\\n        view\\n        override\\n        returns (bool hasReconfigurationRequest_)\\n    {\\n        return vaultProxyToReconfigurationRequest[_vaultProxy].nextComptrollerProxy != address(0);\\n    }\\n\\n    /// @notice Checks if an account is an allowed caller of ComptrollerProxy.buySharesOnBehalf()\\n    /// @param _who The account to check\\n    /// @return isAllowed_ True if the account is an allowed caller\\n    function isAllowedBuySharesOnBehalfCaller(address _who)\\n        public\\n        view\\n        override\\n        returns (bool isAllowed_)\\n    {\\n        return acctToIsAllowedBuySharesOnBehalfCaller[_who];\\n    }\\n\\n    /// @notice Checks if a contract call is registered\\n    /// @param _contract The contract of the call to check\\n    /// @param _selector The selector of the call to check\\n    /// @param _dataHash The keccak call data hash of the call to check\\n    /// @return isRegistered_ True if the call is registered\\n    function isRegisteredVaultCall(\\n        address _contract,\\n        bytes4 _selector,\\n        bytes32 _dataHash\\n    ) public view returns (bool isRegistered_) {\\n        return\\n            vaultCallToPayloadToIsAllowed[keccak256(\\n                abi.encodePacked(_contract, _selector)\\n            )][_dataHash];\\n    }\\n\\n    /// @notice Gets the `isLive` variable value\\n    /// @return isLive_ The `isLive` variable value\\n    function releaseIsLive() public view returns (bool isLive_) {\\n        return isLive;\\n    }\\n}\\n\",\"keccak256\":\"0x6c8a7ca7feb737d77a2739bbae1044faba56dc119579800fffa6e69dfdca3f4a\",\"license\":\"GPL-3.0\"},\"contracts/release/core/fund-deployer/IFundDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IFundDeployer Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IFundDeployer {\\n    function getOwner() external view returns (address);\\n\\n    function hasReconfigurationRequest(address) external view returns (bool);\\n\\n    function isAllowedBuySharesOnBehalfCaller(address) external view returns (bool);\\n\\n    function isAllowedVaultCall(\\n        address,\\n        bytes4,\\n        bytes32\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5b901b81b3a4ef3d30ef9b4a1fa7fdd6526dfacd66e9971d1f988c2b63334314\",\"license\":\"GPL-3.0\"},\"contracts/release/core/fund/comptroller/ComptrollerProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../../utils/NonUpgradableProxy.sol\\\";\\n\\n/// @title ComptrollerProxy Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A proxy contract for all ComptrollerProxy instances\\ncontract ComptrollerProxy is NonUpgradableProxy {\\n    constructor(bytes memory _constructData, address _comptrollerLib)\\n        public\\n        NonUpgradableProxy(_constructData, _comptrollerLib)\\n    {}\\n}\\n\",\"keccak256\":\"0x2915bf85b7a39e3b31f00d87bf06fc11415c6e027e00f98681b122176b74c76f\",\"license\":\"GPL-3.0\"},\"contracts/release/core/fund/comptroller/IComptroller.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../vault/IVault.sol\\\";\\n\\n/// @title IComptroller Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IComptroller {\\n    function activate(bool) external;\\n\\n    function calcGav(bool) external returns (uint256);\\n\\n    function calcGrossShareValue(bool) external returns (uint256);\\n\\n    function callOnExtension(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external;\\n\\n    function destructActivated(uint256, uint256) external;\\n\\n    function destructUnactivated() external;\\n\\n    function getDenominationAsset() external view returns (address);\\n\\n    function getExternalPositionManager() external view returns (address);\\n\\n    function getFeeManager() external view returns (address);\\n\\n    function getFundDeployer() external view returns (address);\\n\\n    function getGasRelayPaymaster() external view returns (address);\\n\\n    function getIntegrationManager() external view returns (address);\\n\\n    function getPolicyManager() external view returns (address);\\n\\n    function getVaultProxy() external view returns (address);\\n\\n    function init(address, uint256) external;\\n\\n    function permissionedVaultAction(IVault.VaultAction, bytes calldata) external;\\n\\n    function preTransferSharesHook(\\n        address,\\n        address,\\n        uint256\\n    ) external;\\n\\n    function preTransferSharesHookFreelyTransferable(address) external view;\\n\\n    function setGasRelayPaymaster(address) external;\\n\\n    function setVaultProxy(address) external;\\n}\\n\",\"keccak256\":\"0xe59c52ad44c1c4643d0f000deb6ebc45bf72393d42d87de5721a79544a0dae37\",\"license\":\"GPL-3.0\"},\"contracts/release/core/fund/vault/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../../../persistent/vault/interfaces/IExternalPositionVault.sol\\\";\\nimport \\\"../../../../persistent/vault/interfaces/IFreelyTransferableSharesVault.sol\\\";\\nimport \\\"../../../../persistent/vault/interfaces/IMigratableVault.sol\\\";\\n\\n/// @title IVault Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IVault is IMigratableVault, IFreelyTransferableSharesVault, IExternalPositionVault {\\n    enum VaultAction {\\n        None,\\n        // Shares management\\n        BurnShares,\\n        MintShares,\\n        TransferShares,\\n        // Asset management\\n        AddTrackedAsset,\\n        ApproveAssetSpender,\\n        RemoveTrackedAsset,\\n        WithdrawAssetTo,\\n        // External position management\\n        AddExternalPosition,\\n        CallOnExternalPosition,\\n        RemoveExternalPosition\\n    }\\n\\n    function addTrackedAsset(address) external;\\n\\n    function burnShares(address, uint256) external;\\n\\n    function buyBackProtocolFeeShares(\\n        uint256,\\n        uint256,\\n        uint256\\n    ) external;\\n\\n    function callOnContract(address, bytes calldata) external returns (bytes memory);\\n\\n    function canManageAssets(address) external view returns (bool);\\n\\n    function canRelayCalls(address) external view returns (bool);\\n\\n    function getAccessor() external view returns (address);\\n\\n    function getOwner() external view returns (address);\\n\\n    function getActiveExternalPositions() external view returns (address[] memory);\\n\\n    function getTrackedAssets() external view returns (address[] memory);\\n\\n    function isActiveExternalPosition(address) external view returns (bool);\\n\\n    function isTrackedAsset(address) external view returns (bool);\\n\\n    function mintShares(address, uint256) external;\\n\\n    function payProtocolFee() external;\\n\\n    function receiveValidatedVaultAction(VaultAction, bytes calldata) external;\\n\\n    function setAccessorForFundReconfiguration(address) external;\\n\\n    function transferShares(\\n        address,\\n        address,\\n        uint256\\n    ) external;\\n\\n    function withdrawAssetTo(\\n        address,\\n        address,\\n        uint256\\n    ) external;\\n}\\n\",\"keccak256\":\"0x9d44db20591ff0e5d2d88e2d60b2b55eb2f0272f374fe8c3b543a7eaeb510a54\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/IExtension.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IExtension Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Interface for all extensions\\ninterface IExtension {\\n    function activateForFund(bool _isMigration) external;\\n\\n    function deactivateForFund() external;\\n\\n    function receiveCallFromComptroller(\\n        address _caller,\\n        uint256 _actionId,\\n        bytes calldata _callArgs\\n    ) external;\\n\\n    function setConfigForFund(\\n        address _comptrollerProxy,\\n        address _vaultProxy,\\n        bytes calldata _configData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x59aaa2ddd32c24271bd4a57e9e1f3426570a78cd56d6d11e63786f36c916e94b\",\"license\":\"GPL-3.0\"},\"contracts/release/infrastructure/gas-relayer/GasRelayRecipientMixin.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\nimport \\\"../../utils/beacon-proxy/IBeaconProxyFactory.sol\\\";\\nimport \\\"./IGasRelayPaymaster.sol\\\";\\n\\npragma solidity 0.6.12;\\n\\n/// @title GasRelayRecipientMixin Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A mixin that enables receiving GSN-relayed calls\\n/// @dev IMPORTANT: Do not use storage var in this contract,\\n/// unless it is no longer inherited by the VaultLib\\nabstract contract GasRelayRecipientMixin {\\n    address internal immutable GAS_RELAY_PAYMASTER_FACTORY;\\n\\n    constructor(address _gasRelayPaymasterFactory) internal {\\n        GAS_RELAY_PAYMASTER_FACTORY = _gasRelayPaymasterFactory;\\n    }\\n\\n    /// @dev Helper to parse the canonical sender of a tx based on whether it has been relayed\\n    function __msgSender() internal view returns (address payable canonicalSender_) {\\n        if (msg.data.length >= 24 && msg.sender == getGasRelayTrustedForwarder()) {\\n            assembly {\\n                canonicalSender_ := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n\\n            return canonicalSender_;\\n        }\\n\\n        return msg.sender;\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Gets the `GAS_RELAY_PAYMASTER_FACTORY` variable\\n    /// @return gasRelayPaymasterFactory_ The `GAS_RELAY_PAYMASTER_FACTORY` variable value\\n    function getGasRelayPaymasterFactory()\\n        public\\n        view\\n        returns (address gasRelayPaymasterFactory_)\\n    {\\n        return GAS_RELAY_PAYMASTER_FACTORY;\\n    }\\n\\n    /// @notice Gets the trusted forwarder for GSN relaying\\n    /// @return trustedForwarder_ The trusted forwarder\\n    function getGasRelayTrustedForwarder() public view returns (address trustedForwarder_) {\\n        return\\n            IGasRelayPaymaster(\\n                IBeaconProxyFactory(getGasRelayPaymasterFactory()).getCanonicalLib()\\n            )\\n                .trustedForwarder();\\n    }\\n}\\n\",\"keccak256\":\"0xa5741fbd96f87cc20c961d8dfa43937f8a83dfdbdb93b542e789c89698ddd418\",\"license\":\"GPL-3.0\"},\"contracts/release/infrastructure/gas-relayer/IGasRelayPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../../interfaces/IGsnPaymaster.sol\\\";\\n\\n/// @title IGasRelayPaymaster Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IGasRelayPaymaster is IGsnPaymaster {\\n    function deposit() external;\\n\\n    function withdrawBalance() external;\\n}\\n\",\"keccak256\":\"0xb8b05029aca9eb89ff33c9cc3f97f6d096a5d8185a5ddcdec7cb1a92e4927b01\",\"license\":\"GPL-3.0\"},\"contracts/release/infrastructure/protocol-fees/IProtocolFeeTracker.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IProtocolFeeTracker Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IProtocolFeeTracker {\\n    function initializeForVault(address) external;\\n\\n    function payFee() external returns (uint256);\\n}\\n\",\"keccak256\":\"0x232b347f83457439064add7369bfe1930c7cb56f15930bb87d640e909c15e447\",\"license\":\"GPL-3.0\"},\"contracts/release/interfaces/IGsnForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IGsnForwarder interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IGsnForwarder {\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntil;\\n    }\\n}\\n\",\"keccak256\":\"0xdf725d6209efe494c5f56c1f3d2cc8c64f0785b4b62fa9869bee3d85d8d9e030\",\"license\":\"GPL-3.0\"},\"contracts/release/interfaces/IGsnPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./IGsnTypes.sol\\\";\\n\\n/// @title IGsnPaymaster interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IGsnPaymaster {\\n    struct GasAndDataLimits {\\n        uint256 acceptanceBudget;\\n        uint256 preRelayedCallGasLimit;\\n        uint256 postRelayedCallGasLimit;\\n        uint256 calldataSizeLimit;\\n    }\\n\\n    function getGasAndDataLimits() external view returns (GasAndDataLimits memory limits);\\n\\n    function getHubAddr() external view returns (address);\\n\\n    function getRelayHubDeposit() external view returns (uint256);\\n\\n    function preRelayedCall(\\n        IGsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    ) external returns (bytes memory context, bool rejectOnRecipientRevert);\\n\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        IGsnTypes.RelayData calldata relayData\\n    ) external;\\n\\n    function trustedForwarder() external view returns (address);\\n\\n    function versionPaymaster() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x2b6990c5f1721a994774d431c41563970e9400971df9ba0ff91ead265427272c\",\"license\":\"GPL-3.0\"},\"contracts/release/interfaces/IGsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./IGsnForwarder.sol\\\";\\n\\n/// @title IGsnTypes Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IGsnTypes {\\n    struct RelayData {\\n        uint256 gasPrice;\\n        uint256 pctRelayFee;\\n        uint256 baseRelayFee;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    struct RelayRequest {\\n        IGsnForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0xa5e951206789bd818be825058792b233858a9c58ca25d451b3691917a0ce3714\",\"license\":\"GPL-3.0\"},\"contracts/release/utils/NonUpgradableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title NonUpgradableProxy Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A proxy contract for use with non-upgradable libs\\n/// @dev The recommended constructor-fallback pattern of a proxy in EIP-1822, updated for solc 0.6.12,\\n/// and using an immutable lib value to save on gas (since not upgradable).\\n/// The EIP-1967 storage slot for the lib is still assigned,\\n/// for ease of referring to UIs that understand the pattern, i.e., Etherscan.\\nabstract contract NonUpgradableProxy {\\n    address private immutable CONTRACT_LOGIC;\\n\\n    constructor(bytes memory _constructData, address _contractLogic) public {\\n        CONTRACT_LOGIC = _contractLogic;\\n\\n        assembly {\\n            // EIP-1967 slot: `bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)`\\n            sstore(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc,\\n                _contractLogic\\n            )\\n        }\\n        (bool success, bytes memory returnData) = _contractLogic.delegatecall(_constructData);\\n        require(success, string(returnData));\\n    }\\n\\n    // solhint-disable-next-line no-complex-fallback\\n    fallback() external payable {\\n        address contractLogic = CONTRACT_LOGIC;\\n\\n        assembly {\\n            calldatacopy(0x0, 0x0, calldatasize())\\n            let success := delegatecall(\\n                sub(gas(), 10000),\\n                contractLogic,\\n                0x0,\\n                calldatasize(),\\n                0,\\n                0\\n            )\\n            let retSz := returndatasize()\\n            returndatacopy(0, 0, retSz)\\n            switch success\\n                case 0 {\\n                    revert(0, retSz)\\n                }\\n                default {\\n                    return(0, retSz)\\n                }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf4cc55bfc8c448e58b4fa294377ab46ff4e656104cf5fca1cab35e52c84563cc\",\"license\":\"GPL-3.0\"},\"contracts/release/utils/beacon-proxy/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IBeacon interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IBeacon {\\n    function getCanonicalLib() external view returns (address);\\n}\\n\",\"keccak256\":\"0x27a585523828a67a1a7c84eadd22b3056e8ffc51ab71992fd97c9ffb4239eeb2\",\"license\":\"GPL-3.0\"},\"contracts/release/utils/beacon-proxy/IBeaconProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\nimport \\\"./IBeacon.sol\\\";\\n\\npragma solidity 0.6.12;\\n\\n/// @title IBeaconProxyFactory interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IBeaconProxyFactory is IBeacon {\\n    function deployProxy(bytes memory _constructData) external returns (address proxy_);\\n\\n    function setCanonicalLib(address _canonicalLib) external;\\n}\\n\",\"keccak256\":\"0x747e53725f5dbe419893ea447df4f33a3b25d99aae5b724aa1b9778cec1a26bc\",\"license\":\"GPL-3.0\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162004e2638038062004e2683398101604081905262000034916200011a565b6001600160601b0319606082901b166080526040516200005790602001620001d1565b604051602081830303815290604052805190602001207f5bf1898dd28c4d29f33c4c1bb9b8a7e2f6322847d70be63e8f89de024d08a66960001b14620000ba5760405162461bcd60e51b8152600401620000b190620001de565b60405180910390fd5b5033606090811b60a0521b6001600160601b03191660c0526002805463ffffffff60a01b191661249f60a51b1763ffffffff60c01b1916610c3560c61b1790556202a3006003556200022a565b8051620001148162000210565b92915050565b600080604083850312156200012e57600080fd5b60006200013c858562000107565b92505060206200014f8582860162000107565b9150509250929050565b600062000168601183620001f9565b706d6c6e2e7661756c7443616c6c2e616e7960781b815260110192915050565b600062000197602583620001f0565b7f636f6e7374727563746f723a20496e636f727265637420414e595f5641554c5481526417d0d0531360da1b602082015260400192915050565b6000620001148262000159565b60208082528101620001148162000188565b90815260200190565b919050565b60006001600160a01b03821662000114565b6200021b81620001fe565b81146200022757600080fd5b50565b60805160601c60a05160601c60c05160601c614bbc6200026a60003980610a5752806119be5280611a5b52508061060e5250806115e95250614bbc6000f3fe60806040523480156200001157600080fd5b5060043610620002445760003560e01c806372eb5f2b1162000141578063b8f8a84c11620000bd578063ebb3d5891162000087578063ebb3d58914620004c3578063ed9eeb7f14620004cd578063efcde9e314620004e4578063f0bb66ac14620004fb578063ff84571814620005225762000244565b8063b8f8a84c1462000465578063cebffb58146200047c578063d5189add1462000495578063df369ba714620004ac5762000244565b806393a2ecd9116200010b57806393a2ecd9146200041957806398f0d4bb14620004235780639c9d48da146200042d5780639f9df7851462000444578063ac259456146200045b5762000244565b806372eb5f2b14620003c8578063749cc8f514620003ee578063893d20e814620003f85780638c500ea314620004025762000244565b80634140d60711620001d1578063575403dc116200019b578063575403dc146200036f578063682cea1914620003865780636c579e5714620003905780636ea2114314620003a75780636f2b757414620003b15762000244565b80634140d60714620003135780634348ab62146200032a5780634bacc5f7146200034157806354391f0914620003585762000244565b806338b3eb1b116200021357806338b3eb1b14620002b45780633b30dce714620002cb5780633d0d4abb14620002e25780633f84c12c14620002fc5762000244565b80630d2fcd7614620002495780630ee2cb101462000262578063164dd2d4146200028457806336b4ea4f146200028e575b600080fd5b620002606200025a3660046200319a565b62000539565b005b6200026c6200060c565b6040516200027b919062004192565b60405180910390f35b6200026062000631565b620002a56200029f36600462003472565b62000778565b6040516200027b9190620042ef565b62000260620002c536600462003433565b620007d1565b62000260620002dc3660046200374f565b620009af565b620002ec62000a2e565b6040516200027b92919062004587565b620002606200030d366004620036dc565b62000a4c565b62000260620003243660046200319a565b62000b3f565b6200026c6200033b366004620032ac565b62000bfd565b6200026062000352366004620035b0565b62000e8e565b620002a5620003693660046200319a565b62000fda565b620002606200038036600462003770565b62000ff8565b6200026c620010dd565b620002a5620003a13660046200319a565b620010ec565b6200026c6200110c565b62000260620003c2366004620035b0565b62001205565b620003df620003d93660046200319a565b62001336565b6040516200027b919062004567565b6200026c6200137d565b6200026c6200138c565b620002a56200041336600462003472565b620013f2565b6200026c6200148b565b620002a56200149a565b620002606200043e36600462003433565b620014aa565b62000260620004553660046200319a565b62001529565b6200026c620015e7565b6200026c6200047636600462003365565b6200160b565b62000486620018ab565b6040516200027b919062004577565b62000260620004a63660046200319a565b620018b1565b62000260620004bd366004620031e4565b620019b3565b6200026c62001a59565b62000260620004de366004620035f5565b62001a7d565b62000260620004f5366004620035f5565b62001d04565b620005126200050c366004620034c6565b62001f36565b6040516200027b929190620041a2565b62000260620005333660046200319a565b6200245a565b620005436200138c565b6001600160a01b0316336001600160a01b0316146200057f5760405162461bcd60e51b81526004016200057690620043ff565b60405180910390fd5b620005896200148b565b6001600160a01b03811615620005b35760405162461bcd60e51b81526004016200057690620043db565b600080546001600160a01b0319166001600160a01b0384161790556040517f38e37d5fdf60e4358769c3b616594ad451626b1e023c65eaa1062116feadacf8906200060090849062004192565b60405180910390a15050565b7f00000000000000000000000000000000000000000000000000000000000000005b90565b6200063b6200060c565b6001600160a01b0316336001600160a01b0316146200066e5760405162461bcd60e51b8152600401620005769062004531565b620006786200149a565b15620006985760405162461bcd60e51b815260040162000576906200446b565b6000620006a46200148b565b6001600160a01b03161415620006ce5760405162461bcd60e51b81526004016200057690620043c9565b6000620006da6200137d565b6001600160a01b03161415620007045760405162461bcd60e51b81526004016200057690620044b3565b600062000710620010dd565b6001600160a01b031614156200073a5760405162461bcd60e51b81526004016200057690620043a5565b6002805460ff60e01b1916600160e01b1790556040517f0356d4f8f825c1c2803d9e1f15724b6b8eea8992d04fad04da8bcbe6ff30296f90600090a1565b60006005600085856040516020016200079392919062004168565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120858252909152205460ff1690505b9392505050565b81620007de813362002828565b6000620007ea62001a59565b90506000816001600160a01b0316637dad9fc8866040518263ffffffff1660e01b81526004016200081c919062004192565b60806040518083038186803b1580156200083557600080fd5b505afa1580156200084a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087091906200324e565b50506040516338b3eb1b60e01b81529092506001600160a01b03841691506338b3eb1b90620008a69088908890600401620042b1565b600060405180830381600087803b158015620008c157600080fd5b505af1158015620008d6573d6000803e3d6000fd5b505060405163ce5e84a360e01b81526001600160a01b038416925063ce5e84a391506200090990600190600401620042ef565b600060405180830381600087803b1580156200092457600080fd5b505af115801562000939573d6000803e3d6000fd5b50505050620009476200137d565b6001600160a01b0316630a48e041866040518263ffffffff1660e01b815260040162000974919062004192565b600060405180830381600087803b1580156200098f57600080fd5b505af1158015620009a4573d6000803e3d6000fd5b505050505050505050565b620009b96200138c565b6001600160a01b0316336001600160a01b031614620009ec5760405162461bcd60e51b81526004016200057690620043ff565b60038190556040517fa12f25dbb69b970318f8cc02d37f8cfe5bb3fec3a55630fd7e419d6dc42f1d919062000a2390839062004577565b60405180910390a150565b60025463ffffffff600160a01b8204811691600160c01b9004169091565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000a975760405162461bcd60e51b8152600401620005769062004447565b600285600481111562000aa657fe5b1462000ab25762000b38565b6000846001600160a01b0316635a53e3486040518163ffffffff1660e01b815260040160206040518083038186803b15801562000aee57600080fd5b505afa15801562000b03573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b299190620031c3565b905062000b3681620028cd565b505b5050505050565b62000b496200138c565b6001600160a01b0316336001600160a01b03161462000b7c5760405162461bcd60e51b81526004016200057690620043ff565b62000b86620010dd565b6001600160a01b0381161562000bb05760405162461bcd60e51b81526004016200057690620043db565b600280546001600160a01b0319166001600160a01b0384161790556040517f1e01982aac1b1376985c41ed48c69e04ff4c75107bfe0b8a4827693d2ddba04e906200060090849062004192565b60008062000c0a6200290f565b905062000c18898262002828565b3062000c2362001a59565b6001600160a01b0316633d7c74f88b6040518263ffffffff1660e01b815260040162000c50919062004192565b60206040518083038186803b15801562000c6957600080fd5b505afa15801562000c7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca49190620031c3565b6001600160a01b03161462000ccd5760405162461bcd60e51b8152600401620005769062004411565b62000cd889620010ec565b1562000cf85760405162461bcd60e51b815260040162000576906200451f565b62000d0581898962002958565b60405163397bfe5560e01b81529092506001600160a01b0383169063397bfe559062000d36908c9060040162004192565b600060405180830381600087803b15801562000d5157600080fd5b505af115801562000d66573d6000803e3d6000fd5b5050505062000de1828a88888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525062002a4a92505050565b600062000ded620018ab565b6040805180820182526001600160a01b038681168252429390930160208083018281528f86166000818152600690935291859020935184546001600160a01b031916908716178455516001909301929092559151919350918416907fbc4a5bba58d663a7e6752f3a72d2737260a60caeec28e0bf880ee25711f7fe1e9062000e799087908690620042d0565b60405180910390a35050979650505050505050565b62000e986200138c565b6001600160a01b0316336001600160a01b03161462000ecb5760405162461bcd60e51b81526004016200057690620043ff565b60005b8181101562000fd55762000eff83838381811062000ee857fe5b90506020020160208101906200036991906200319a565b62000f1e5760405162461bcd60e51b81526004016200057690620044d7565b60006004600085858581811062000f3157fe5b905060200201602081019062000f4891906200319a565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557fe49a33dc7a73a9833a0358b29ef8d5fecbfff419af0c4fd9219f57a7147009c683838381811062000f9e57fe5b905060200201602081019062000fb591906200319a565b60405162000fc4919062004192565b60405180910390a160010162000ece565b505050565b6001600160a01b031660009081526004602052604090205460ff1690565b620010026200138c565b6001600160a01b0316336001600160a01b031614620010355760405162461bcd60e51b81526004016200057690620043ff565b60008263ffffffff1611801562001052575060008163ffffffff16115b620010715760405162461bcd60e51b815260040162000576906200448f565b6002805463ffffffff838116600160c01b0263ffffffff60c01b19918616600160a01b0263ffffffff60a01b1990931692909217161790556040517f09069ba7f5bded3e9f9f7d353e606ae6ee8496309d9cbe09241d1c741e1dceed9062000600908490849062004597565b6002546001600160a01b031690565b6001600160a01b0390811660009081526006602052604090205416151590565b600062001118620015e7565b6001600160a01b03166398a7c4c76040518163ffffffff1660e01b815260040160206040518083038186803b1580156200115157600080fd5b505afa15801562001166573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200118c9190620031c3565b6001600160a01b0316637da0a8776040518163ffffffff1660e01b815260040160206040518083038186803b158015620011c557600080fd5b505afa158015620011da573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012009190620031c3565b905090565b6200120f6200138c565b6001600160a01b0316336001600160a01b031614620012425760405162461bcd60e51b81526004016200057690620043ff565b60005b8181101562000fd5576200125f83838381811062000ee857fe5b156200127f5760405162461bcd60e51b81526004016200057690620043ed565b6001600460008585858181106200129257fe5b9050602002016020810190620012a991906200319a565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557f7b322f508cd6b0cc569822d5a028bb23e6698192d88a7b9669ab48fd68916eda838383818110620012ff57fe5b90506020020160208101906200131691906200319a565b60405162001325919062004192565b60405180910390a160010162001245565b6200134062002fe2565b506001600160a01b039081166000908152600660209081526040918290208251808401909352805490931682526001909201549181019190915290565b6001546001600160a01b031690565b6000620013986200149a565b620013af57620013a76200060c565b90506200062e565b620013b962001a59565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015620011c557600080fd5b60008084846040516020016200140a92919062004168565b60408051601f19818403018152918152815160209283012060008181526005845282812087825290935291205490915060ff168062001482575060008181526005602090815260408083207f5bf1898dd28c4d29f33c4c1bb9b8a7e2f6322847d70be63e8f89de024d08a669845290915290205460ff165b95945050505050565b6000546001600160a01b031690565b600254600160e01b900460ff1690565b81620014b7813362002828565b620014c162001a59565b6001600160a01b0316639c9d48da84846040518363ffffffff1660e01b8152600401620014f0929190620042b1565b600060405180830381600087803b1580156200150b57600080fd5b505af115801562001520573d6000803e3d6000fd5b50505050505050565b620015336200138c565b6001600160a01b0316336001600160a01b031614620015665760405162461bcd60e51b81526004016200057690620043ff565b620015706200137d565b6001600160a01b038116156200159a5760405162461bcd60e51b81526004016200057690620043db565b600180546001600160a01b0319166001600160a01b0384161790556040517f1a8919bc714742db0ed6eb86960768bdd5103c1dabb914651aaec5796907db15906200060090849062004192565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000620016176200149a565b620016365760405162461bcd60e51b81526004016200057690620044a1565b8862001643813362002828565b6200164d62001a59565b6001600160a01b031663d0449d3d8b6040518263ffffffff1660e01b81526004016200167a919062004192565b60206040518083038186803b1580156200169357600080fd5b505afa158015620016a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016ce91906200369a565b15620016ee5760405162461bcd60e51b8152600401620005769062004459565b620016fb338a8a62002958565b60405163397bfe5560e01b81529092506001600160a01b0383169063397bfe55906200172c908d9060040162004192565b600060405180830381600087803b1580156200174757600080fd5b505af11580156200175c573d6000803e3d6000fd5b50505050620017d7828b89898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525062002a4a92505050565b620017e162001a59565b6001600160a01b031663d15f9b9c8b84620017fb620010dd565b876040518563ffffffff1660e01b81526004016200181d9493929190620041c1565b600060405180830381600087803b1580156200183857600080fd5b505af11580156200184d573d6000803e3d6000fd5b50505050896001600160a01b0316336001600160a01b03167f7cb609d1845028175b74ce1b27f0b41ba93711f8699a747463f0cf89c5c95b818460405162001896919062004192565b60405180910390a35098975050505050505050565b60035490565b80620018c781620018c16200290f565b62002828565b6001600160a01b038083166000908152600660205260409020541680620019025760405162461bcd60e51b8152600401620005769062004393565b806001600160a01b031663e53a73b96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200193e57600080fd5b505af115801562001953573d6000803e3d6000fd5b505050506001600160a01b0383811660008181526006602052604080822080546001600160a01b031916815560010182905551928416927f8eae645f408f18cb738736a49846a7ccb7a4ed8cdf9b960624ea965ffbe96e919190a3505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620019fe5760405162461bcd60e51b8152600401620005769062004447565b816001600160a01b031663e53a73b96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001a3a57600080fd5b505af115801562001a4f573d6000803e3d6000fd5b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b62001a876200138c565b6001600160a01b0316336001600160a01b03161462001aba5760405162461bcd60e51b81526004016200057690620043ff565b8362001ada5760405162461bcd60e51b815260040162000576906200450d565b838214801562001aea5750805184145b62001b095760405162461bcd60e51b8152600401620005769062004555565b60005b8481101562000b365762001b7c86868381811062001b2657fe5b905060200201602081019062001b3d91906200319a565b85858481811062001b4a57fe5b905060200201602081019062001b619190620036bb565b84848151811062001b6e57fe5b602002602001015162000778565b62001b9b5760405162461bcd60e51b8152600401620005769062004423565b60006005600088888581811062001bae57fe5b905060200201602081019062001bc591906200319a565b87878681811062001bd257fe5b905060200201602081019062001be99190620036bb565b60405160200162001bfc92919062004168565b604051602081830303815290604052805190602001208152602001908152602001600020600084848151811062001c2f57fe5b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555085858281811062001c6957fe5b905060200201602081019062001c8091906200319a565b6001600160a01b03167f845c9ef356cc5570a54e9eb6be3e6d95a2aaad4c4c7d7b2c0cf8c7cdd78d614d85858481811062001cb757fe5b905060200201602081019062001cce9190620036bb565b84848151811062001cdb57fe5b602002602001015160405162001cf3929190620042ff565b60405180910390a260010162001b0c565b62001d0e6200138c565b6001600160a01b0316336001600160a01b03161462001d415760405162461bcd60e51b81526004016200057690620043ff565b8362001d615760405162461bcd60e51b81526004016200057690620044c5565b838214801562001d715750805184145b62001d905760405162461bcd60e51b81526004016200057690620044fb565b60005b8481101562000b365762001dad86868381811062001b2657fe5b1562001dcd5760405162461bcd60e51b81526004016200057690620044e9565b60016005600088888581811062001de057fe5b905060200201602081019062001df791906200319a565b87878681811062001e0457fe5b905060200201602081019062001e1b9190620036bb565b60405160200162001e2e92919062004168565b604051602081830303815290604052805190602001208152602001908152602001600020600084848151811062001e6157fe5b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555085858281811062001e9b57fe5b905060200201602081019062001eb291906200319a565b6001600160a01b03167fb1fbe377864edcbf521713f906125bd99a3638c7a9e4087f6a70019686a741d185858481811062001ee957fe5b905060200201602081019062001f009190620036bb565b84848151811062001f0d57fe5b602002602001015160405162001f25929190620042ff565b60405180910390a260010162001d93565b60008062001f436200149a565b62001f625760405162461bcd60e51b81526004016200057690620044a1565b62001f936040518060400160405280600d81526020016c66756e64204f776e65723a257360981b8152508c62002ea1565b62001ff96040518060400160405280600c81526020016b66756e64206e616d653a257360a01b8152508b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062002eea92505050565b620020256040518060400160405280600881526020016761737365743a257360c01b8152508962002ea1565b6000620020316200290f565b905062002040818a8a62002958565b92506200206760405180606001604052806022815260200162004b3f602291398462002ea1565b6200207162001a59565b6001600160a01b03166322a0c08b62002089620010dd565b8e868f8f6040518663ffffffff1660e01b8152600401620020af959493929190620041fe565b602060405180830381600087803b158015620020ca57600080fd5b505af1158015620020df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021059190620031c3565b9150620021486040518060400160405280601c81526020017f6372656174654e657746756e643a7661756c7450726f78795f3a2573000000008152508362002ea1565b60008390506200217260405180606001604052806024815260200162004a06602491398262002ea1565b60405163397bfe5560e01b81526001600160a01b0382169063397bfe5590620021a090869060040162004192565b600060405180830381600087803b158015620021bb57600080fd5b505af1158015620021d0573d6000803e3d6000fd5b50505050620022146040518060400160405280601b81526020017f6372656174654e657746756e643a7365745661756c7450726f7879000000000081525062002f33565b6200228b84848a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525062002a4a92505050565b620022af60405180606001604052806023815260200162004ae76023913962002f33565b60405163ce5e84a360e01b81526001600160a01b0382169063ce5e84a390620022de90600090600401620042ef565b600060405180830381600087803b158015620022f957600080fd5b505af11580156200230e573d6000803e3d6000fd5b50505050620023366040518060600160405280602a815260200162004abd602a913962002f33565b620023406200137d565b6001600160a01b0316630a48e041846040518263ffffffff1660e01b81526004016200236d919062004192565b600060405180830381600087803b1580156200238857600080fd5b505af11580156200239d573d6000803e3d6000fd5b50505050620023c560405180606001604052806021815260200162004a776021913962002f33565b816001600160a01b03167f04dab3bc63cc7e4b52aa28a026644559e2937d78dbf7b81e26dfecdd8bbe33b9848660405162002402929190620041a2565b60405180910390a26200244a6040518060400160405280601c81526020017f6372656174654e657746756e643a4e657746756e64437265617465640000000081525062002f33565b5050995099975050505050505050565b806200246a81620018c16200290f565b6200247462002fe2565b6200247f8362001336565b80519091506001600160a01b0316620024ac5760405162461bcd60e51b81526004016200057690620043b7565b8060200151421015620024d35760405162461bcd60e51b8152600401620005769062004543565b30620024de62001a59565b6001600160a01b0316633d7c74f8856040518263ffffffff1660e01b81526004016200250b919062004192565b60206040518083038186803b1580156200252457600080fd5b505afa15801562002539573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200255f9190620031c3565b6001600160a01b031614620025885760405162461bcd60e51b815260040162000576906200447d565b6000836001600160a01b0316635a53e3486040518163ffffffff1660e01b815260040160206040518083038186803b158015620025c457600080fd5b505afa158015620025d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025ff9190620031c3565b90506000816001600160a01b031663faf9096b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200263d57600080fd5b505afa15801562002652573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026789190620031c3565b90506200268582620028cd565b8251604051633a0795ad60e11b81526001600160a01b0387169163740f2b5a91620026b4919060040162004192565b600060405180830381600087803b158015620026cf57600080fd5b505af1158015620026e4573d6000803e3d6000fd5b5050845160405163ce5e84a360e01b81526001600160a01b03909116925063ce5e84a391506200271a90600190600401620042ef565b600060405180830381600087803b1580156200273557600080fd5b505af11580156200274a573d6000803e3d6000fd5b505050506001600160a01b03811615620027c45782516040516373eecf4760e01b81526001600160a01b03909116906373eecf47906200278f90849060040162004192565b600060405180830381600087803b158015620027aa57600080fd5b505af1158015620027bf573d6000803e3d6000fd5b505050505b6001600160a01b0380861660008181526006602052604080822080546001600160a01b03191681556001018290558651905190841693861692917fa587629d93edeac6431610facaeec919890c8bc040ef849f720e42315148d7d991a45050505050565b604051633ef03e7560e11b81526001600160a01b03831690637de07cea906200285690849060040162004192565b60206040518083038186803b1580156200286f57600080fd5b505afa15801562002884573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028aa91906200369a565b620028c95760405162461bcd60e51b8152600401620005769062004435565b5050565b600080620028da62000a2e565b60405163495abadb60e11b815291935091506001600160a01b038416906392b575b690620014f0908590859060040162004587565b6000601836108015906200293d5750620029286200110c565b6001600160a01b0316336001600160a01b0316145b1562002953575060131936013560601c6200062e565b503390565b6000606063399ae72460e01b848460405160240162002979929190620042d0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905080620029b86200148b565b604051620029c69062002ff9565b620029d39291906200430f565b604051809103906000f080158015620029f0573d6000803e3d6000fd5b509150836001600160a01b0316856001600160a01b03167f19dbe5ac5bcfdc5074f78d1e907e1dce6f6e3b50a56b50d990926abaf9c55057848660405162002a3a929190620042d0565b60405180910390a3509392505050565b62002a7360405180606001604052806035815260200162004b0a60359139600084511162002f7d565b62002a986040518060600160405280602c815260200162004a2a602c91398562002ea1565b62002abd60405180606001604052806026815260200162004b61602691398462002ea1565b81511562002bf0576000846001600160a01b031663f2d638266040518163ffffffff1660e01b815260040160206040518083038186803b15801562002b0157600080fd5b505afa15801562002b16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b3c9190620031c3565b905062002b6360405180606001604052806025815260200162004a98602591398262002ea1565b62002b8860405180606001604052806021815260200162004a56602191393362002ea1565b60405163f067cc1160e01b81526001600160a01b0382169063f067cc119062002bba908890889088906004016200424c565b600060405180830381600087803b15801562002bd557600080fd5b505af115801562002bea573d6000803e3d6000fd5b50505050505b62002c306040518060400160405280602081526020017f5f5f636f6e666967757265457874656e73696f6e73206669727374207374657081525062002f33565b836001600160a01b031663b3fc38e96040518163ffffffff1660e01b815260040160206040518083038186803b15801562002c6a57600080fd5b505afa15801562002c7f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ca59190620031c3565b6001600160a01b031663f067cc1185856040518363ffffffff1660e01b815260040162002cd49291906200427f565b600060405180830381600087803b15801562002cef57600080fd5b505af115801562002d04573d6000803e3d6000fd5b50505050836001600160a01b031663e7c456906040518163ffffffff1660e01b815260040160206040518083038186803b15801562002d4257600080fd5b505afa15801562002d57573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d7d9190620031c3565b6001600160a01b031663f067cc1185856040518363ffffffff1660e01b815260040162002dac9291906200427f565b600060405180830381600087803b15801562002dc757600080fd5b505af115801562002ddc573d6000803e3d6000fd5b50505050836001600160a01b031663d44ad6cb6040518163ffffffff1660e01b815260040160206040518083038186803b15801562002e1a57600080fd5b505afa15801562002e2f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e559190620031c3565b6001600160a01b031663f067cc118585846040518463ffffffff1660e01b815260040162002e86939291906200424c565b600060405180830381600087803b15801562001a3a57600080fd5b620028c9828260405160240162002eba9291906200430f565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905262002fc1565b620028c9828260405160240162002f039291906200436a565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905262002fc1565b62002f7a8160405160240162002f4a919062004333565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262002fc1565b50565b620028c9828260405160240162002f9692919062004346565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b604080518082019091526000808252602082015290565b61030980620046fd83390190565b80356200301481620046ab565b92915050565b80516200301481620046ab565b60008083601f8401126200303a57600080fd5b5081356001600160401b038111156200305257600080fd5b6020830191508360208202830111156200306b57600080fd5b9250929050565b600082601f8301126200308457600080fd5b81356200309b6200309582620045dd565b620045b6565b91508181835260208401935060208101905083856020840282011115620030c157600080fd5b60005b83811015620030f15781620030da888262003115565b8452506020928301929190910190600101620030c4565b5050505092915050565b80356200301481620046c2565b80516200301481620046c2565b80356200301481620046cd565b80356200301481620046d8565b60008083601f8401126200314257600080fd5b5081356001600160401b038111156200315a57600080fd5b6020830191508360018202830111156200306b57600080fd5b80356200301481620046e3565b80516200301481620046cd565b80356200301481620046f1565b600060208284031215620031ad57600080fd5b6000620031bb848462003007565b949350505050565b600060208284031215620031d657600080fd5b6000620031bb84846200301a565b60008060008060808587031215620031fb57600080fd5b600062003209878762003007565b94505060206200321c8782880162003007565b93505060406200322f8782880162003007565b9250506060620032428782880162003007565b91505092959194509250565b600080600080608085870312156200326557600080fd5b60006200327387876200301a565b945050602062003286878288016200301a565b935050604062003299878288016200301a565b9250506060620032428782880162003180565b600080600080600080600060a0888a031215620032c857600080fd5b6000620032d68a8a62003007565b9750506020620032e98a828b0162003007565b9650506040620032fc8a828b0162003115565b95505060608801356001600160401b038111156200331957600080fd5b620033278a828b016200312f565b945094505060808801356001600160401b038111156200334657600080fd5b620033548a828b016200312f565b925092505092959891949750929550565b60008060008060008060008060c0898b0312156200338257600080fd5b6000620033908b8b62003007565b9850506020620033a38b828c0162003007565b9750506040620033b68b828c0162003115565b96505060608901356001600160401b03811115620033d357600080fd5b620033e18b828c016200312f565b955095505060808901356001600160401b038111156200340057600080fd5b6200340e8b828c016200312f565b935093505060a0620034238b828c01620030fb565b9150509295985092959890939650565b600080604083850312156200344757600080fd5b600062003455858562003007565b92505060206200346885828601620030fb565b9150509250929050565b6000806000606084860312156200348857600080fd5b600062003496868662003007565b9350506020620034a98682870162003122565b9250506040620034bc8682870162003115565b9150509250925092565b600080600080600080600080600060c08a8c031215620034e557600080fd5b6000620034f38c8c62003007565b99505060208a01356001600160401b038111156200351057600080fd5b6200351e8c828d016200312f565b98509850506040620035338c828d0162003007565b9650506060620035468c828d0162003115565b95505060808a01356001600160401b038111156200356357600080fd5b620035718c828d016200312f565b945094505060a08a01356001600160401b038111156200359057600080fd5b6200359e8c828d016200312f565b92509250509295985092959850929598565b60008060208385031215620035c457600080fd5b82356001600160401b03811115620035db57600080fd5b620035e98582860162003027565b92509250509250929050565b6000806000806000606086880312156200360e57600080fd5b85356001600160401b038111156200362557600080fd5b620036338882890162003027565b955095505060208601356001600160401b038111156200365257600080fd5b620036608882890162003027565b935093505060408601356001600160401b038111156200367f57600080fd5b6200368d8882890162003072565b9150509295509295909350565b600060208284031215620036ad57600080fd5b6000620031bb848462003108565b600060208284031215620036ce57600080fd5b6000620031bb848462003122565b600080600080600060a08688031215620036f557600080fd5b600062003703888862003173565b9550506020620037168882890162003007565b9450506040620037298882890162003007565b93505060606200373c8882890162003007565b92505060806200368d8882890162003007565b6000602082840312156200376257600080fd5b6000620031bb848462003115565b600080604083850312156200378457600080fd5b60006200379285856200318d565b925050602062003468858286016200318d565b620037b0816200460b565b82525050565b620037b0620037c5826200460b565b62004687565b620037b08162004618565b620037b0816200062e565b620037b0816200461d565b620037b0620037fb826200461d565b6200062e565b60006200380e82620045fe565b6200381a818562004602565b93506200382c81856020860162004658565b62003837816200469b565b9093019392505050565b60006200384f838562004602565b93506200385e8385846200464c565b62003837836200469b565b60006200387860488362004602565b7f63616e63656c5265636f6e66696775726174696f6e3a204e6f207265636f6e6681527f696775726174696f6e20726571756573742065786973747320666f72205f7661602082015267756c7450726f787960c01b604082015260600192915050565b6000620038ea60238362004602565b7f73657452656c656173654c6976653a207661756c744c6962206973206e6f74208152621cd95d60ea1b602082015260400192915050565b60006200393160498362004602565b7f657865637574655265636f6e66696775726174696f6e3a204e6f207265636f6e81527f66696775726174696f6e20726571756573742065786973747320666f72205f7660208201526861756c7450726f787960b81b604082015260600192915050565b6000620039a460298362004602565b7f73657452656c656173654c6976653a20636f6d7074726f6c6c65724c696220698152681cc81b9bdd081cd95d60ba1b602082015260400192915050565b6000620039f1601f8362004602565b7f546869732076616c75652063616e206f6e6c7920626520736574206f6e636500815260200192915050565b600062003a2c603b8362004602565b7f72656769737465724275795368617265734f6e426568616c6643616c6c65727381527f3a2043616c6c657220616c726561647920726567697374657265640000000000602082015260400192915050565b600062003a8d602e8362004602565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c81526d103a3434b990333ab731ba34b7b760911b602082015260400192915050565b600062003adf603c8362004602565b7f6372656174655265636f6e66696775726174696f6e526571756573743a20566181527f756c7450726f7879206e6f74206f6e20746869732072656c6561736500000000602082015260400192915050565b600062003b4060298362004602565b7f646572656769737465725661756c7443616c6c733a2043616c6c206e6f7420728152681959da5cdd195c995960ba1b602082015260400192915050565b600062003b8d60338362004602565b7f4f6e6c792061207065726d697373696f6e6564206d69677261746f722063616e8152721031b0b636103a3434b990333ab731ba34b7b760691b602082015260400192915050565b600062003be460268362004602565b7f4f6e6c7920446973706174636865722063616e2063616c6c20746869732066758152653731ba34b7b760d11b602082015260400192915050565b600062003c2e60398362004602565b7f6372656174654d6967726174696f6e526571756573743a2041204d696772617481527f696f6e5265717565737420616c72656164792065786973747300000000000000602082015260400192915050565b600062003c8f601c8362004602565b7f73657452656c656173654c6976653a20416c7265616479206c69766500000000815260200192915050565b600062003cca60408362004602565b7f657865637574655265636f6e66696775726174696f6e3a205f7661756c74507281527f6f7879206973206e6f206c6f6e676572206f6e20746869732072656c65617365602082015260400192915050565b600062003d2b60338362004602565b7f7365744761734c696d697473466f72446573747275637443616c6c3a205a65728152721bc81d985b1d59481b9bdd08185b1b1bddd959606a1b602082015260400192915050565b600062003d8260178362004602565b7f52656c65617365206973206e6f7420796574206c697665000000000000000000815260200192915050565b600062003dbd602d8362004602565b7f73657452656c656173654c6976653a2070726f746f636f6c466565547261636b81526c195c881a5cc81b9bdd081cd95d609a1b602082015260400192915050565b600062003e0e60248362004602565b7f72656769737465725661756c7443616c6c733a20456d707479205f636f6e74728152636163747360e01b602082015260400192915050565b60006200301460008362004602565b600062003e6560398362004602565b7f646572656769737465724275795368617265734f6e426568616c6643616c6c6581527f72733a2043616c6c6572206e6f74207265676973746572656400000000000000602082015260400192915050565b600062003ec6602b8362004602565b7f72656769737465725661756c7443616c6c733a2043616c6c20616c726561647981526a081c9959da5cdd195c995960aa1b602082015260400192915050565b600062003f1560278362004602565b7f72656769737465725661756c7443616c6c733a20556e6576656e20696e7075748152662061727261797360c81b602082015260400192915050565b600062003f6060268362004602565b7f646572656769737465725661756c7443616c6c733a20456d707479205f636f6e81526574726163747360d01b602082015260400192915050565b600062003faa604e8362004602565b7f6372656174655265636f6e66696775726174696f6e526571756573743a20566181527f756c7450726f78792068617320612070656e64696e67207265636f6e6669677560208201526d1c985d1a5bdb881c995c5d595cdd60921b604082015260600192915050565b60006200402260378362004602565b7f73657452656c656173654c6976653a204f6e6c79207468652063726561746f7281527f2063616e2063616c6c20746869732066756e6374696f6e000000000000000000602082015260400192915050565b60006200408360448362004602565b7f657865637574655265636f6e66696775726174696f6e3a20546865207265636f81527f6e66696775726174696f6e2074696d656c6f636b20686173206e6f7420656c616020820152631c1cd95960e21b604082015260600192915050565b6000620040f160298362004602565b7f646572656769737465725661756c7443616c6c733a20556e6576656e20696e7081526875742061727261797360b81b602082015260400192915050565b80516040830190620041428482620037a5565b506020820151620041576020850182620037d6565b50505050565b620037b0816200463f565b6000620041768285620037b6565b601482019150620041888284620037ec565b5060040192915050565b60208101620030148284620037a5565b60408101620041b28285620037a5565b620007ca6020830184620037a5565b60808101620041d18287620037a5565b620041e06020830186620037a5565b620041ef6040830185620037a5565b620014826060830184620037cb565b608081016200420e8288620037a5565b6200421d6020830187620037a5565b6200422c6040830186620037a5565b81810360608301526200424181848662003841565b979650505050505050565b606081016200425c8286620037a5565b6200426b6020830185620037a5565b818103604083015262001482818462003801565b606081016200428f8285620037a5565b6200429e6020830184620037a5565b8181036040830152620031bb8162003e47565b60408101620042c18285620037a5565b620007ca6020830184620037cb565b60408101620042e08285620037a5565b620007ca6020830184620037d6565b60208101620030148284620037cb565b60408101620042e08285620037e1565b6040808252810162004322818562003801565b9050620007ca6020830184620037a5565b60208082528101620007ca818462003801565b6040808252810162004359818562003801565b9050620007ca6020830184620037cb565b604080825281016200437d818562003801565b90508181036020830152620031bb818462003801565b60208082528101620030148162003869565b602080825281016200301481620038db565b60208082528101620030148162003922565b60208082528101620030148162003995565b602080825281016200301481620039e2565b60208082528101620030148162003a1d565b60208082528101620030148162003a7e565b60208082528101620030148162003ad0565b60208082528101620030148162003b31565b60208082528101620030148162003b7e565b60208082528101620030148162003bd5565b60208082528101620030148162003c1f565b60208082528101620030148162003c80565b60208082528101620030148162003cbb565b60208082528101620030148162003d1c565b60208082528101620030148162003d73565b60208082528101620030148162003dae565b60208082528101620030148162003dff565b60208082528101620030148162003e56565b60208082528101620030148162003eb7565b60208082528101620030148162003f06565b60208082528101620030148162003f51565b60208082528101620030148162003f9b565b60208082528101620030148162004013565b60208082528101620030148162004074565b602080825281016200301481620040e2565b604081016200301482846200412f565b60208101620030148284620037d6565b60408101620042e08285620037d6565b60408101620045a782856200415d565b620007ca60208301846200415d565b6040518181016001600160401b0381118282101715620045d557600080fd5b604052919050565b60006001600160401b03821115620045f457600080fd5b5060209081020190565b5190565b90815260200190565b600062003014826200462a565b151590565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b6000620030148262004636565b82818337506000910152565b60005b83811015620046755781810151838201526020016200465b565b83811115620041575750506000910152565b6000620030148260006200301482620046a5565b601f01601f191690565b60601b90565b620046b6816200460b565b811462002f7a57600080fd5b620046b68162004618565b620046b6816200062e565b620046b6816200461d565b6005811062002f7a57600080fd5b620046b6816200463656fe60a060405234801561001057600080fd5b506040516103093803806103098339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291905050508181806001600160a01b03166080816001600160a01b031660601b81525050807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5560006060826001600160a01b0316846040518082805190602001908083835b602083106101705780518252601f199092019160209182019101610151565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101d0576040519150601f19603f3d011682016040523d82523d6000602084013e6101d5565b606091505b50915091508181906102655760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561022a578181015183820152602001610212565b50505050905090810190601f1680156102575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050505050505060805160601c6083610286600039806006525060836000f3fe60806040527f00000000000000000000000000000000000000000000000000000000000000003660008037600080366000846127105a03f43d806000803e818015604857816000f35b816000fdfea2646970667358221220af3fa506b4585d3105feda3d44f2fc3c9f0ebf4c6a5e5924e3a86b53bce8828564736f6c634300060c00336372656174654e657746756e643a636f6d7074726f6c6c6572436f6e74726163743a2573205f5f636f6e666967757265457874656e73696f6e733a205f636f6d7074726f6c6c657250726f7879202573205f5f636f6e666967757265457874656e73696f6e733a2073656e6465722025736372656174654e657746756e643a4950726f746f636f6c466565547261636b6572205f5f636f6e666967757265457874656e73696f6e733a206665654d616e616765722025736372656174654e657746756e643a636f6d7074726f6c6c6572436f6e74726163742e61637469766174656372656174654e657746756e643a5f5f636f6e666967757265457874656e73696f6e735f5f636f6e666967757265457874656e73696f6e73205f6665654d616e61676572436f6e666967446174612e6c656e6774683a25736372656174654e657746756e643a636f6d7074726f6c6c657250726f78795f3a2573205f5f636f6e666967757265457874656e73696f6e733a205f7661756c7450726f7879202573a26469706673582212209aaff7e1bfe703c12fe3148b8d6d002ffd8748aea6a73fe36a60e0daa9d89c6b64736f6c634300060c0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620002445760003560e01c806372eb5f2b1162000141578063b8f8a84c11620000bd578063ebb3d5891162000087578063ebb3d58914620004c3578063ed9eeb7f14620004cd578063efcde9e314620004e4578063f0bb66ac14620004fb578063ff84571814620005225762000244565b8063b8f8a84c1462000465578063cebffb58146200047c578063d5189add1462000495578063df369ba714620004ac5762000244565b806393a2ecd9116200010b57806393a2ecd9146200041957806398f0d4bb14620004235780639c9d48da146200042d5780639f9df7851462000444578063ac259456146200045b5762000244565b806372eb5f2b14620003c8578063749cc8f514620003ee578063893d20e814620003f85780638c500ea314620004025762000244565b80634140d60711620001d1578063575403dc116200019b578063575403dc146200036f578063682cea1914620003865780636c579e5714620003905780636ea2114314620003a75780636f2b757414620003b15762000244565b80634140d60714620003135780634348ab62146200032a5780634bacc5f7146200034157806354391f0914620003585762000244565b806338b3eb1b116200021357806338b3eb1b14620002b45780633b30dce714620002cb5780633d0d4abb14620002e25780633f84c12c14620002fc5762000244565b80630d2fcd7614620002495780630ee2cb101462000262578063164dd2d4146200028457806336b4ea4f146200028e575b600080fd5b620002606200025a3660046200319a565b62000539565b005b6200026c6200060c565b6040516200027b919062004192565b60405180910390f35b6200026062000631565b620002a56200029f36600462003472565b62000778565b6040516200027b9190620042ef565b62000260620002c536600462003433565b620007d1565b62000260620002dc3660046200374f565b620009af565b620002ec62000a2e565b6040516200027b92919062004587565b620002606200030d366004620036dc565b62000a4c565b62000260620003243660046200319a565b62000b3f565b6200026c6200033b366004620032ac565b62000bfd565b6200026062000352366004620035b0565b62000e8e565b620002a5620003693660046200319a565b62000fda565b620002606200038036600462003770565b62000ff8565b6200026c620010dd565b620002a5620003a13660046200319a565b620010ec565b6200026c6200110c565b62000260620003c2366004620035b0565b62001205565b620003df620003d93660046200319a565b62001336565b6040516200027b919062004567565b6200026c6200137d565b6200026c6200138c565b620002a56200041336600462003472565b620013f2565b6200026c6200148b565b620002a56200149a565b620002606200043e36600462003433565b620014aa565b62000260620004553660046200319a565b62001529565b6200026c620015e7565b6200026c6200047636600462003365565b6200160b565b62000486620018ab565b6040516200027b919062004577565b62000260620004a63660046200319a565b620018b1565b62000260620004bd366004620031e4565b620019b3565b6200026c62001a59565b62000260620004de366004620035f5565b62001a7d565b62000260620004f5366004620035f5565b62001d04565b620005126200050c366004620034c6565b62001f36565b6040516200027b929190620041a2565b62000260620005333660046200319a565b6200245a565b620005436200138c565b6001600160a01b0316336001600160a01b0316146200057f5760405162461bcd60e51b81526004016200057690620043ff565b60405180910390fd5b620005896200148b565b6001600160a01b03811615620005b35760405162461bcd60e51b81526004016200057690620043db565b600080546001600160a01b0319166001600160a01b0384161790556040517f38e37d5fdf60e4358769c3b616594ad451626b1e023c65eaa1062116feadacf8906200060090849062004192565b60405180910390a15050565b7f00000000000000000000000000000000000000000000000000000000000000005b90565b6200063b6200060c565b6001600160a01b0316336001600160a01b0316146200066e5760405162461bcd60e51b8152600401620005769062004531565b620006786200149a565b15620006985760405162461bcd60e51b815260040162000576906200446b565b6000620006a46200148b565b6001600160a01b03161415620006ce5760405162461bcd60e51b81526004016200057690620043c9565b6000620006da6200137d565b6001600160a01b03161415620007045760405162461bcd60e51b81526004016200057690620044b3565b600062000710620010dd565b6001600160a01b031614156200073a5760405162461bcd60e51b81526004016200057690620043a5565b6002805460ff60e01b1916600160e01b1790556040517f0356d4f8f825c1c2803d9e1f15724b6b8eea8992d04fad04da8bcbe6ff30296f90600090a1565b60006005600085856040516020016200079392919062004168565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120858252909152205460ff1690505b9392505050565b81620007de813362002828565b6000620007ea62001a59565b90506000816001600160a01b0316637dad9fc8866040518263ffffffff1660e01b81526004016200081c919062004192565b60806040518083038186803b1580156200083557600080fd5b505afa1580156200084a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087091906200324e565b50506040516338b3eb1b60e01b81529092506001600160a01b03841691506338b3eb1b90620008a69088908890600401620042b1565b600060405180830381600087803b158015620008c157600080fd5b505af1158015620008d6573d6000803e3d6000fd5b505060405163ce5e84a360e01b81526001600160a01b038416925063ce5e84a391506200090990600190600401620042ef565b600060405180830381600087803b1580156200092457600080fd5b505af115801562000939573d6000803e3d6000fd5b50505050620009476200137d565b6001600160a01b0316630a48e041866040518263ffffffff1660e01b815260040162000974919062004192565b600060405180830381600087803b1580156200098f57600080fd5b505af1158015620009a4573d6000803e3d6000fd5b505050505050505050565b620009b96200138c565b6001600160a01b0316336001600160a01b031614620009ec5760405162461bcd60e51b81526004016200057690620043ff565b60038190556040517fa12f25dbb69b970318f8cc02d37f8cfe5bb3fec3a55630fd7e419d6dc42f1d919062000a2390839062004577565b60405180910390a150565b60025463ffffffff600160a01b8204811691600160c01b9004169091565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000a975760405162461bcd60e51b8152600401620005769062004447565b600285600481111562000aa657fe5b1462000ab25762000b38565b6000846001600160a01b0316635a53e3486040518163ffffffff1660e01b815260040160206040518083038186803b15801562000aee57600080fd5b505afa15801562000b03573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b299190620031c3565b905062000b3681620028cd565b505b5050505050565b62000b496200138c565b6001600160a01b0316336001600160a01b03161462000b7c5760405162461bcd60e51b81526004016200057690620043ff565b62000b86620010dd565b6001600160a01b0381161562000bb05760405162461bcd60e51b81526004016200057690620043db565b600280546001600160a01b0319166001600160a01b0384161790556040517f1e01982aac1b1376985c41ed48c69e04ff4c75107bfe0b8a4827693d2ddba04e906200060090849062004192565b60008062000c0a6200290f565b905062000c18898262002828565b3062000c2362001a59565b6001600160a01b0316633d7c74f88b6040518263ffffffff1660e01b815260040162000c50919062004192565b60206040518083038186803b15801562000c6957600080fd5b505afa15801562000c7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca49190620031c3565b6001600160a01b03161462000ccd5760405162461bcd60e51b8152600401620005769062004411565b62000cd889620010ec565b1562000cf85760405162461bcd60e51b815260040162000576906200451f565b62000d0581898962002958565b60405163397bfe5560e01b81529092506001600160a01b0383169063397bfe559062000d36908c9060040162004192565b600060405180830381600087803b15801562000d5157600080fd5b505af115801562000d66573d6000803e3d6000fd5b5050505062000de1828a88888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525062002a4a92505050565b600062000ded620018ab565b6040805180820182526001600160a01b038681168252429390930160208083018281528f86166000818152600690935291859020935184546001600160a01b031916908716178455516001909301929092559151919350918416907fbc4a5bba58d663a7e6752f3a72d2737260a60caeec28e0bf880ee25711f7fe1e9062000e799087908690620042d0565b60405180910390a35050979650505050505050565b62000e986200138c565b6001600160a01b0316336001600160a01b03161462000ecb5760405162461bcd60e51b81526004016200057690620043ff565b60005b8181101562000fd55762000eff83838381811062000ee857fe5b90506020020160208101906200036991906200319a565b62000f1e5760405162461bcd60e51b81526004016200057690620044d7565b60006004600085858581811062000f3157fe5b905060200201602081019062000f4891906200319a565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557fe49a33dc7a73a9833a0358b29ef8d5fecbfff419af0c4fd9219f57a7147009c683838381811062000f9e57fe5b905060200201602081019062000fb591906200319a565b60405162000fc4919062004192565b60405180910390a160010162000ece565b505050565b6001600160a01b031660009081526004602052604090205460ff1690565b620010026200138c565b6001600160a01b0316336001600160a01b031614620010355760405162461bcd60e51b81526004016200057690620043ff565b60008263ffffffff1611801562001052575060008163ffffffff16115b620010715760405162461bcd60e51b815260040162000576906200448f565b6002805463ffffffff838116600160c01b0263ffffffff60c01b19918616600160a01b0263ffffffff60a01b1990931692909217161790556040517f09069ba7f5bded3e9f9f7d353e606ae6ee8496309d9cbe09241d1c741e1dceed9062000600908490849062004597565b6002546001600160a01b031690565b6001600160a01b0390811660009081526006602052604090205416151590565b600062001118620015e7565b6001600160a01b03166398a7c4c76040518163ffffffff1660e01b815260040160206040518083038186803b1580156200115157600080fd5b505afa15801562001166573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200118c9190620031c3565b6001600160a01b0316637da0a8776040518163ffffffff1660e01b815260040160206040518083038186803b158015620011c557600080fd5b505afa158015620011da573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012009190620031c3565b905090565b6200120f6200138c565b6001600160a01b0316336001600160a01b031614620012425760405162461bcd60e51b81526004016200057690620043ff565b60005b8181101562000fd5576200125f83838381811062000ee857fe5b156200127f5760405162461bcd60e51b81526004016200057690620043ed565b6001600460008585858181106200129257fe5b9050602002016020810190620012a991906200319a565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557f7b322f508cd6b0cc569822d5a028bb23e6698192d88a7b9669ab48fd68916eda838383818110620012ff57fe5b90506020020160208101906200131691906200319a565b60405162001325919062004192565b60405180910390a160010162001245565b6200134062002fe2565b506001600160a01b039081166000908152600660209081526040918290208251808401909352805490931682526001909201549181019190915290565b6001546001600160a01b031690565b6000620013986200149a565b620013af57620013a76200060c565b90506200062e565b620013b962001a59565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015620011c557600080fd5b60008084846040516020016200140a92919062004168565b60408051601f19818403018152918152815160209283012060008181526005845282812087825290935291205490915060ff168062001482575060008181526005602090815260408083207f5bf1898dd28c4d29f33c4c1bb9b8a7e2f6322847d70be63e8f89de024d08a669845290915290205460ff165b95945050505050565b6000546001600160a01b031690565b600254600160e01b900460ff1690565b81620014b7813362002828565b620014c162001a59565b6001600160a01b0316639c9d48da84846040518363ffffffff1660e01b8152600401620014f0929190620042b1565b600060405180830381600087803b1580156200150b57600080fd5b505af115801562001520573d6000803e3d6000fd5b50505050505050565b620015336200138c565b6001600160a01b0316336001600160a01b031614620015665760405162461bcd60e51b81526004016200057690620043ff565b620015706200137d565b6001600160a01b038116156200159a5760405162461bcd60e51b81526004016200057690620043db565b600180546001600160a01b0319166001600160a01b0384161790556040517f1a8919bc714742db0ed6eb86960768bdd5103c1dabb914651aaec5796907db15906200060090849062004192565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000620016176200149a565b620016365760405162461bcd60e51b81526004016200057690620044a1565b8862001643813362002828565b6200164d62001a59565b6001600160a01b031663d0449d3d8b6040518263ffffffff1660e01b81526004016200167a919062004192565b60206040518083038186803b1580156200169357600080fd5b505afa158015620016a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016ce91906200369a565b15620016ee5760405162461bcd60e51b8152600401620005769062004459565b620016fb338a8a62002958565b60405163397bfe5560e01b81529092506001600160a01b0383169063397bfe55906200172c908d9060040162004192565b600060405180830381600087803b1580156200174757600080fd5b505af11580156200175c573d6000803e3d6000fd5b50505050620017d7828b89898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525062002a4a92505050565b620017e162001a59565b6001600160a01b031663d15f9b9c8b84620017fb620010dd565b876040518563ffffffff1660e01b81526004016200181d9493929190620041c1565b600060405180830381600087803b1580156200183857600080fd5b505af11580156200184d573d6000803e3d6000fd5b50505050896001600160a01b0316336001600160a01b03167f7cb609d1845028175b74ce1b27f0b41ba93711f8699a747463f0cf89c5c95b818460405162001896919062004192565b60405180910390a35098975050505050505050565b60035490565b80620018c781620018c16200290f565b62002828565b6001600160a01b038083166000908152600660205260409020541680620019025760405162461bcd60e51b8152600401620005769062004393565b806001600160a01b031663e53a73b96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200193e57600080fd5b505af115801562001953573d6000803e3d6000fd5b505050506001600160a01b0383811660008181526006602052604080822080546001600160a01b031916815560010182905551928416927f8eae645f408f18cb738736a49846a7ccb7a4ed8cdf9b960624ea965ffbe96e919190a3505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620019fe5760405162461bcd60e51b8152600401620005769062004447565b816001600160a01b031663e53a73b96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001a3a57600080fd5b505af115801562001a4f573d6000803e3d6000fd5b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b62001a876200138c565b6001600160a01b0316336001600160a01b03161462001aba5760405162461bcd60e51b81526004016200057690620043ff565b8362001ada5760405162461bcd60e51b815260040162000576906200450d565b838214801562001aea5750805184145b62001b095760405162461bcd60e51b8152600401620005769062004555565b60005b8481101562000b365762001b7c86868381811062001b2657fe5b905060200201602081019062001b3d91906200319a565b85858481811062001b4a57fe5b905060200201602081019062001b619190620036bb565b84848151811062001b6e57fe5b602002602001015162000778565b62001b9b5760405162461bcd60e51b8152600401620005769062004423565b60006005600088888581811062001bae57fe5b905060200201602081019062001bc591906200319a565b87878681811062001bd257fe5b905060200201602081019062001be99190620036bb565b60405160200162001bfc92919062004168565b604051602081830303815290604052805190602001208152602001908152602001600020600084848151811062001c2f57fe5b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555085858281811062001c6957fe5b905060200201602081019062001c8091906200319a565b6001600160a01b03167f845c9ef356cc5570a54e9eb6be3e6d95a2aaad4c4c7d7b2c0cf8c7cdd78d614d85858481811062001cb757fe5b905060200201602081019062001cce9190620036bb565b84848151811062001cdb57fe5b602002602001015160405162001cf3929190620042ff565b60405180910390a260010162001b0c565b62001d0e6200138c565b6001600160a01b0316336001600160a01b03161462001d415760405162461bcd60e51b81526004016200057690620043ff565b8362001d615760405162461bcd60e51b81526004016200057690620044c5565b838214801562001d715750805184145b62001d905760405162461bcd60e51b81526004016200057690620044fb565b60005b8481101562000b365762001dad86868381811062001b2657fe5b1562001dcd5760405162461bcd60e51b81526004016200057690620044e9565b60016005600088888581811062001de057fe5b905060200201602081019062001df791906200319a565b87878681811062001e0457fe5b905060200201602081019062001e1b9190620036bb565b60405160200162001e2e92919062004168565b604051602081830303815290604052805190602001208152602001908152602001600020600084848151811062001e6157fe5b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555085858281811062001e9b57fe5b905060200201602081019062001eb291906200319a565b6001600160a01b03167fb1fbe377864edcbf521713f906125bd99a3638c7a9e4087f6a70019686a741d185858481811062001ee957fe5b905060200201602081019062001f009190620036bb565b84848151811062001f0d57fe5b602002602001015160405162001f25929190620042ff565b60405180910390a260010162001d93565b60008062001f436200149a565b62001f625760405162461bcd60e51b81526004016200057690620044a1565b62001f936040518060400160405280600d81526020016c66756e64204f776e65723a257360981b8152508c62002ea1565b62001ff96040518060400160405280600c81526020016b66756e64206e616d653a257360a01b8152508b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062002eea92505050565b620020256040518060400160405280600881526020016761737365743a257360c01b8152508962002ea1565b6000620020316200290f565b905062002040818a8a62002958565b92506200206760405180606001604052806022815260200162004b3f602291398462002ea1565b6200207162001a59565b6001600160a01b03166322a0c08b62002089620010dd565b8e868f8f6040518663ffffffff1660e01b8152600401620020af959493929190620041fe565b602060405180830381600087803b158015620020ca57600080fd5b505af1158015620020df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021059190620031c3565b9150620021486040518060400160405280601c81526020017f6372656174654e657746756e643a7661756c7450726f78795f3a2573000000008152508362002ea1565b60008390506200217260405180606001604052806024815260200162004a06602491398262002ea1565b60405163397bfe5560e01b81526001600160a01b0382169063397bfe5590620021a090869060040162004192565b600060405180830381600087803b158015620021bb57600080fd5b505af1158015620021d0573d6000803e3d6000fd5b50505050620022146040518060400160405280601b81526020017f6372656174654e657746756e643a7365745661756c7450726f7879000000000081525062002f33565b6200228b84848a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525062002a4a92505050565b620022af60405180606001604052806023815260200162004ae76023913962002f33565b60405163ce5e84a360e01b81526001600160a01b0382169063ce5e84a390620022de90600090600401620042ef565b600060405180830381600087803b158015620022f957600080fd5b505af11580156200230e573d6000803e3d6000fd5b50505050620023366040518060600160405280602a815260200162004abd602a913962002f33565b620023406200137d565b6001600160a01b0316630a48e041846040518263ffffffff1660e01b81526004016200236d919062004192565b600060405180830381600087803b1580156200238857600080fd5b505af11580156200239d573d6000803e3d6000fd5b50505050620023c560405180606001604052806021815260200162004a776021913962002f33565b816001600160a01b03167f04dab3bc63cc7e4b52aa28a026644559e2937d78dbf7b81e26dfecdd8bbe33b9848660405162002402929190620041a2565b60405180910390a26200244a6040518060400160405280601c81526020017f6372656174654e657746756e643a4e657746756e64437265617465640000000081525062002f33565b5050995099975050505050505050565b806200246a81620018c16200290f565b6200247462002fe2565b6200247f8362001336565b80519091506001600160a01b0316620024ac5760405162461bcd60e51b81526004016200057690620043b7565b8060200151421015620024d35760405162461bcd60e51b8152600401620005769062004543565b30620024de62001a59565b6001600160a01b0316633d7c74f8856040518263ffffffff1660e01b81526004016200250b919062004192565b60206040518083038186803b1580156200252457600080fd5b505afa15801562002539573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200255f9190620031c3565b6001600160a01b031614620025885760405162461bcd60e51b815260040162000576906200447d565b6000836001600160a01b0316635a53e3486040518163ffffffff1660e01b815260040160206040518083038186803b158015620025c457600080fd5b505afa158015620025d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025ff9190620031c3565b90506000816001600160a01b031663faf9096b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200263d57600080fd5b505afa15801562002652573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026789190620031c3565b90506200268582620028cd565b8251604051633a0795ad60e11b81526001600160a01b0387169163740f2b5a91620026b4919060040162004192565b600060405180830381600087803b158015620026cf57600080fd5b505af1158015620026e4573d6000803e3d6000fd5b5050845160405163ce5e84a360e01b81526001600160a01b03909116925063ce5e84a391506200271a90600190600401620042ef565b600060405180830381600087803b1580156200273557600080fd5b505af11580156200274a573d6000803e3d6000fd5b505050506001600160a01b03811615620027c45782516040516373eecf4760e01b81526001600160a01b03909116906373eecf47906200278f90849060040162004192565b600060405180830381600087803b158015620027aa57600080fd5b505af1158015620027bf573d6000803e3d6000fd5b505050505b6001600160a01b0380861660008181526006602052604080822080546001600160a01b03191681556001018290558651905190841693861692917fa587629d93edeac6431610facaeec919890c8bc040ef849f720e42315148d7d991a45050505050565b604051633ef03e7560e11b81526001600160a01b03831690637de07cea906200285690849060040162004192565b60206040518083038186803b1580156200286f57600080fd5b505afa15801562002884573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028aa91906200369a565b620028c95760405162461bcd60e51b8152600401620005769062004435565b5050565b600080620028da62000a2e565b60405163495abadb60e11b815291935091506001600160a01b038416906392b575b690620014f0908590859060040162004587565b6000601836108015906200293d5750620029286200110c565b6001600160a01b0316336001600160a01b0316145b1562002953575060131936013560601c6200062e565b503390565b6000606063399ae72460e01b848460405160240162002979929190620042d0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905080620029b86200148b565b604051620029c69062002ff9565b620029d39291906200430f565b604051809103906000f080158015620029f0573d6000803e3d6000fd5b509150836001600160a01b0316856001600160a01b03167f19dbe5ac5bcfdc5074f78d1e907e1dce6f6e3b50a56b50d990926abaf9c55057848660405162002a3a929190620042d0565b60405180910390a3509392505050565b62002a7360405180606001604052806035815260200162004b0a60359139600084511162002f7d565b62002a986040518060600160405280602c815260200162004a2a602c91398562002ea1565b62002abd60405180606001604052806026815260200162004b61602691398462002ea1565b81511562002bf0576000846001600160a01b031663f2d638266040518163ffffffff1660e01b815260040160206040518083038186803b15801562002b0157600080fd5b505afa15801562002b16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b3c9190620031c3565b905062002b6360405180606001604052806025815260200162004a98602591398262002ea1565b62002b8860405180606001604052806021815260200162004a56602191393362002ea1565b60405163f067cc1160e01b81526001600160a01b0382169063f067cc119062002bba908890889088906004016200424c565b600060405180830381600087803b15801562002bd557600080fd5b505af115801562002bea573d6000803e3d6000fd5b50505050505b62002c306040518060400160405280602081526020017f5f5f636f6e666967757265457874656e73696f6e73206669727374207374657081525062002f33565b836001600160a01b031663b3fc38e96040518163ffffffff1660e01b815260040160206040518083038186803b15801562002c6a57600080fd5b505afa15801562002c7f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ca59190620031c3565b6001600160a01b031663f067cc1185856040518363ffffffff1660e01b815260040162002cd49291906200427f565b600060405180830381600087803b15801562002cef57600080fd5b505af115801562002d04573d6000803e3d6000fd5b50505050836001600160a01b031663e7c456906040518163ffffffff1660e01b815260040160206040518083038186803b15801562002d4257600080fd5b505afa15801562002d57573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d7d9190620031c3565b6001600160a01b031663f067cc1185856040518363ffffffff1660e01b815260040162002dac9291906200427f565b600060405180830381600087803b15801562002dc757600080fd5b505af115801562002ddc573d6000803e3d6000fd5b50505050836001600160a01b031663d44ad6cb6040518163ffffffff1660e01b815260040160206040518083038186803b15801562002e1a57600080fd5b505afa15801562002e2f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e559190620031c3565b6001600160a01b031663f067cc118585846040518463ffffffff1660e01b815260040162002e86939291906200424c565b600060405180830381600087803b15801562001a3a57600080fd5b620028c9828260405160240162002eba9291906200430f565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905262002fc1565b620028c9828260405160240162002f039291906200436a565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905262002fc1565b62002f7a8160405160240162002f4a919062004333565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262002fc1565b50565b620028c9828260405160240162002f9692919062004346565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b604080518082019091526000808252602082015290565b61030980620046fd83390190565b80356200301481620046ab565b92915050565b80516200301481620046ab565b60008083601f8401126200303a57600080fd5b5081356001600160401b038111156200305257600080fd5b6020830191508360208202830111156200306b57600080fd5b9250929050565b600082601f8301126200308457600080fd5b81356200309b6200309582620045dd565b620045b6565b91508181835260208401935060208101905083856020840282011115620030c157600080fd5b60005b83811015620030f15781620030da888262003115565b8452506020928301929190910190600101620030c4565b5050505092915050565b80356200301481620046c2565b80516200301481620046c2565b80356200301481620046cd565b80356200301481620046d8565b60008083601f8401126200314257600080fd5b5081356001600160401b038111156200315a57600080fd5b6020830191508360018202830111156200306b57600080fd5b80356200301481620046e3565b80516200301481620046cd565b80356200301481620046f1565b600060208284031215620031ad57600080fd5b6000620031bb848462003007565b949350505050565b600060208284031215620031d657600080fd5b6000620031bb84846200301a565b60008060008060808587031215620031fb57600080fd5b600062003209878762003007565b94505060206200321c8782880162003007565b93505060406200322f8782880162003007565b9250506060620032428782880162003007565b91505092959194509250565b600080600080608085870312156200326557600080fd5b60006200327387876200301a565b945050602062003286878288016200301a565b935050604062003299878288016200301a565b9250506060620032428782880162003180565b600080600080600080600060a0888a031215620032c857600080fd5b6000620032d68a8a62003007565b9750506020620032e98a828b0162003007565b9650506040620032fc8a828b0162003115565b95505060608801356001600160401b038111156200331957600080fd5b620033278a828b016200312f565b945094505060808801356001600160401b038111156200334657600080fd5b620033548a828b016200312f565b925092505092959891949750929550565b60008060008060008060008060c0898b0312156200338257600080fd5b6000620033908b8b62003007565b9850506020620033a38b828c0162003007565b9750506040620033b68b828c0162003115565b96505060608901356001600160401b03811115620033d357600080fd5b620033e18b828c016200312f565b955095505060808901356001600160401b038111156200340057600080fd5b6200340e8b828c016200312f565b935093505060a0620034238b828c01620030fb565b9150509295985092959890939650565b600080604083850312156200344757600080fd5b600062003455858562003007565b92505060206200346885828601620030fb565b9150509250929050565b6000806000606084860312156200348857600080fd5b600062003496868662003007565b9350506020620034a98682870162003122565b9250506040620034bc8682870162003115565b9150509250925092565b600080600080600080600080600060c08a8c031215620034e557600080fd5b6000620034f38c8c62003007565b99505060208a01356001600160401b038111156200351057600080fd5b6200351e8c828d016200312f565b98509850506040620035338c828d0162003007565b9650506060620035468c828d0162003115565b95505060808a01356001600160401b038111156200356357600080fd5b620035718c828d016200312f565b945094505060a08a01356001600160401b038111156200359057600080fd5b6200359e8c828d016200312f565b92509250509295985092959850929598565b60008060208385031215620035c457600080fd5b82356001600160401b03811115620035db57600080fd5b620035e98582860162003027565b92509250509250929050565b6000806000806000606086880312156200360e57600080fd5b85356001600160401b038111156200362557600080fd5b620036338882890162003027565b955095505060208601356001600160401b038111156200365257600080fd5b620036608882890162003027565b935093505060408601356001600160401b038111156200367f57600080fd5b6200368d8882890162003072565b9150509295509295909350565b600060208284031215620036ad57600080fd5b6000620031bb848462003108565b600060208284031215620036ce57600080fd5b6000620031bb848462003122565b600080600080600060a08688031215620036f557600080fd5b600062003703888862003173565b9550506020620037168882890162003007565b9450506040620037298882890162003007565b93505060606200373c8882890162003007565b92505060806200368d8882890162003007565b6000602082840312156200376257600080fd5b6000620031bb848462003115565b600080604083850312156200378457600080fd5b60006200379285856200318d565b925050602062003468858286016200318d565b620037b0816200460b565b82525050565b620037b0620037c5826200460b565b62004687565b620037b08162004618565b620037b0816200062e565b620037b0816200461d565b620037b0620037fb826200461d565b6200062e565b60006200380e82620045fe565b6200381a818562004602565b93506200382c81856020860162004658565b62003837816200469b565b9093019392505050565b60006200384f838562004602565b93506200385e8385846200464c565b62003837836200469b565b60006200387860488362004602565b7f63616e63656c5265636f6e66696775726174696f6e3a204e6f207265636f6e6681527f696775726174696f6e20726571756573742065786973747320666f72205f7661602082015267756c7450726f787960c01b604082015260600192915050565b6000620038ea60238362004602565b7f73657452656c656173654c6976653a207661756c744c6962206973206e6f74208152621cd95d60ea1b602082015260400192915050565b60006200393160498362004602565b7f657865637574655265636f6e66696775726174696f6e3a204e6f207265636f6e81527f66696775726174696f6e20726571756573742065786973747320666f72205f7660208201526861756c7450726f787960b81b604082015260600192915050565b6000620039a460298362004602565b7f73657452656c656173654c6976653a20636f6d7074726f6c6c65724c696220698152681cc81b9bdd081cd95d60ba1b602082015260400192915050565b6000620039f1601f8362004602565b7f546869732076616c75652063616e206f6e6c7920626520736574206f6e636500815260200192915050565b600062003a2c603b8362004602565b7f72656769737465724275795368617265734f6e426568616c6643616c6c65727381527f3a2043616c6c657220616c726561647920726567697374657265640000000000602082015260400192915050565b600062003a8d602e8362004602565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c81526d103a3434b990333ab731ba34b7b760911b602082015260400192915050565b600062003adf603c8362004602565b7f6372656174655265636f6e66696775726174696f6e526571756573743a20566181527f756c7450726f7879206e6f74206f6e20746869732072656c6561736500000000602082015260400192915050565b600062003b4060298362004602565b7f646572656769737465725661756c7443616c6c733a2043616c6c206e6f7420728152681959da5cdd195c995960ba1b602082015260400192915050565b600062003b8d60338362004602565b7f4f6e6c792061207065726d697373696f6e6564206d69677261746f722063616e8152721031b0b636103a3434b990333ab731ba34b7b760691b602082015260400192915050565b600062003be460268362004602565b7f4f6e6c7920446973706174636865722063616e2063616c6c20746869732066758152653731ba34b7b760d11b602082015260400192915050565b600062003c2e60398362004602565b7f6372656174654d6967726174696f6e526571756573743a2041204d696772617481527f696f6e5265717565737420616c72656164792065786973747300000000000000602082015260400192915050565b600062003c8f601c8362004602565b7f73657452656c656173654c6976653a20416c7265616479206c69766500000000815260200192915050565b600062003cca60408362004602565b7f657865637574655265636f6e66696775726174696f6e3a205f7661756c74507281527f6f7879206973206e6f206c6f6e676572206f6e20746869732072656c65617365602082015260400192915050565b600062003d2b60338362004602565b7f7365744761734c696d697473466f72446573747275637443616c6c3a205a65728152721bc81d985b1d59481b9bdd08185b1b1bddd959606a1b602082015260400192915050565b600062003d8260178362004602565b7f52656c65617365206973206e6f7420796574206c697665000000000000000000815260200192915050565b600062003dbd602d8362004602565b7f73657452656c656173654c6976653a2070726f746f636f6c466565547261636b81526c195c881a5cc81b9bdd081cd95d609a1b602082015260400192915050565b600062003e0e60248362004602565b7f72656769737465725661756c7443616c6c733a20456d707479205f636f6e74728152636163747360e01b602082015260400192915050565b60006200301460008362004602565b600062003e6560398362004602565b7f646572656769737465724275795368617265734f6e426568616c6643616c6c6581527f72733a2043616c6c6572206e6f74207265676973746572656400000000000000602082015260400192915050565b600062003ec6602b8362004602565b7f72656769737465725661756c7443616c6c733a2043616c6c20616c726561647981526a081c9959da5cdd195c995960aa1b602082015260400192915050565b600062003f1560278362004602565b7f72656769737465725661756c7443616c6c733a20556e6576656e20696e7075748152662061727261797360c81b602082015260400192915050565b600062003f6060268362004602565b7f646572656769737465725661756c7443616c6c733a20456d707479205f636f6e81526574726163747360d01b602082015260400192915050565b600062003faa604e8362004602565b7f6372656174655265636f6e66696775726174696f6e526571756573743a20566181527f756c7450726f78792068617320612070656e64696e67207265636f6e6669677560208201526d1c985d1a5bdb881c995c5d595cdd60921b604082015260600192915050565b60006200402260378362004602565b7f73657452656c656173654c6976653a204f6e6c79207468652063726561746f7281527f2063616e2063616c6c20746869732066756e6374696f6e000000000000000000602082015260400192915050565b60006200408360448362004602565b7f657865637574655265636f6e66696775726174696f6e3a20546865207265636f81527f6e66696775726174696f6e2074696d656c6f636b20686173206e6f7420656c616020820152631c1cd95960e21b604082015260600192915050565b6000620040f160298362004602565b7f646572656769737465725661756c7443616c6c733a20556e6576656e20696e7081526875742061727261797360b81b602082015260400192915050565b80516040830190620041428482620037a5565b506020820151620041576020850182620037d6565b50505050565b620037b0816200463f565b6000620041768285620037b6565b601482019150620041888284620037ec565b5060040192915050565b60208101620030148284620037a5565b60408101620041b28285620037a5565b620007ca6020830184620037a5565b60808101620041d18287620037a5565b620041e06020830186620037a5565b620041ef6040830185620037a5565b620014826060830184620037cb565b608081016200420e8288620037a5565b6200421d6020830187620037a5565b6200422c6040830186620037a5565b81810360608301526200424181848662003841565b979650505050505050565b606081016200425c8286620037a5565b6200426b6020830185620037a5565b818103604083015262001482818462003801565b606081016200428f8285620037a5565b6200429e6020830184620037a5565b8181036040830152620031bb8162003e47565b60408101620042c18285620037a5565b620007ca6020830184620037cb565b60408101620042e08285620037a5565b620007ca6020830184620037d6565b60208101620030148284620037cb565b60408101620042e08285620037e1565b6040808252810162004322818562003801565b9050620007ca6020830184620037a5565b60208082528101620007ca818462003801565b6040808252810162004359818562003801565b9050620007ca6020830184620037cb565b604080825281016200437d818562003801565b90508181036020830152620031bb818462003801565b60208082528101620030148162003869565b602080825281016200301481620038db565b60208082528101620030148162003922565b60208082528101620030148162003995565b602080825281016200301481620039e2565b60208082528101620030148162003a1d565b60208082528101620030148162003a7e565b60208082528101620030148162003ad0565b60208082528101620030148162003b31565b60208082528101620030148162003b7e565b60208082528101620030148162003bd5565b60208082528101620030148162003c1f565b60208082528101620030148162003c80565b60208082528101620030148162003cbb565b60208082528101620030148162003d1c565b60208082528101620030148162003d73565b60208082528101620030148162003dae565b60208082528101620030148162003dff565b60208082528101620030148162003e56565b60208082528101620030148162003eb7565b60208082528101620030148162003f06565b60208082528101620030148162003f51565b60208082528101620030148162003f9b565b60208082528101620030148162004013565b60208082528101620030148162004074565b602080825281016200301481620040e2565b604081016200301482846200412f565b60208101620030148284620037d6565b60408101620042e08285620037d6565b60408101620045a782856200415d565b620007ca60208301846200415d565b6040518181016001600160401b0381118282101715620045d557600080fd5b604052919050565b60006001600160401b03821115620045f457600080fd5b5060209081020190565b5190565b90815260200190565b600062003014826200462a565b151590565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b6000620030148262004636565b82818337506000910152565b60005b83811015620046755781810151838201526020016200465b565b83811115620041575750506000910152565b6000620030148260006200301482620046a5565b601f01601f191690565b60601b90565b620046b6816200460b565b811462002f7a57600080fd5b620046b68162004618565b620046b6816200062e565b620046b6816200461d565b6005811062002f7a57600080fd5b620046b6816200463656fe60a060405234801561001057600080fd5b506040516103093803806103098339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291905050508181806001600160a01b03166080816001600160a01b031660601b81525050807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5560006060826001600160a01b0316846040518082805190602001908083835b602083106101705780518252601f199092019160209182019101610151565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101d0576040519150601f19603f3d011682016040523d82523d6000602084013e6101d5565b606091505b50915091508181906102655760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561022a578181015183820152602001610212565b50505050905090810190601f1680156102575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050505050505060805160601c6083610286600039806006525060836000f3fe60806040527f00000000000000000000000000000000000000000000000000000000000000003660008037600080366000846127105a03f43d806000803e818015604857816000f35b816000fdfea2646970667358221220af3fa506b4585d3105feda3d44f2fc3c9f0ebf4c6a5e5924e3a86b53bce8828564736f6c634300060c00336372656174654e657746756e643a636f6d7074726f6c6c6572436f6e74726163743a2573205f5f636f6e666967757265457874656e73696f6e733a205f636f6d7074726f6c6c657250726f7879202573205f5f636f6e666967757265457874656e73696f6e733a2073656e6465722025736372656174654e657746756e643a4950726f746f636f6c466565547261636b6572205f5f636f6e666967757265457874656e73696f6e733a206665654d616e616765722025736372656174654e657746756e643a636f6d7074726f6c6c6572436f6e74726163742e61637469766174656372656174654e657746756e643a5f5f636f6e666967757265457874656e73696f6e735f5f636f6e666967757265457874656e73696f6e73205f6665654d616e61676572436f6e666967446174612e6c656e6774683a25736372656174654e657746756e643a636f6d7074726f6c6c657250726f78795f3a2573205f5f636f6e666967757265457874656e73696f6e733a205f7661756c7450726f7879202573a26469706673582212209aaff7e1bfe703c12fe3148b8d6d002ffd8748aea6a73fe36a60e0daa9d89c6b64736f6c634300060c0033",
  "devdoc": {
    "author": "Enzyme Council <security@enzyme.finance>",
    "kind": "dev",
    "methods": {
      "cancelMigration(address,bool)": {
        "params": {
          "_bypassPrevReleaseFailure": "True if should override a failure in the previous release while canceling migration",
          "_vaultProxy": "The VaultProxy for which to cancel migration"
        }
      },
      "cancelReconfiguration(address)": {
        "params": {
          "_vaultProxy": "The VaultProxy contract for which to cancel the reconfiguration request"
        }
      },
      "createMigrationRequest(address,address,uint256,bytes,bytes,bool)": {
        "params": {
          "_bypassPrevReleaseFailure": "True if should override a failure in the previous release while signaling migration",
          "_denominationAsset": "The contract address of the denomination asset for the fund",
          "_feeManagerConfigData": "Bytes data for the fees to be enabled for the fund",
          "_policyManagerConfigData": "Bytes data for the policies to be enabled for the fund",
          "_sharesActionTimelock": "The minimum number of seconds between any two \"shares actions\" (buying or selling shares) by the same user",
          "_vaultProxy": "The VaultProxy to migrate"
        },
        "returns": {
          "comptrollerProxy_": "The address of the ComptrollerProxy deployed during this action"
        }
      },
      "createNewFund(address,string,address,uint256,bytes,bytes)": {
        "params": {
          "_denominationAsset": "The contract address of the denomination asset for the fund",
          "_feeManagerConfigData": "Bytes data for the fees to be enabled for the fund",
          "_fundName": "The name of the fund",
          "_fundOwner": "The address of the owner for the fund",
          "_policyManagerConfigData": "Bytes data for the policies to be enabled for the fund",
          "_sharesActionTimelock": "The minimum number of seconds between any two \"shares actions\" (buying or selling shares) by the same user"
        },
        "returns": {
          "comptrollerProxy_": "The address of the ComptrollerProxy deployed during this action"
        }
      },
      "createReconfigurationRequest(address,address,uint256,bytes,bytes)": {
        "params": {
          "_denominationAsset": "The contract address of the denomination asset for the fund",
          "_feeManagerConfigData": "Bytes data for the fees to be enabled for the fund",
          "_policyManagerConfigData": "Bytes data for the policies to be enabled for the fund",
          "_sharesActionTimelock": "The minimum number of seconds between any two \"shares actions\" (buying or selling shares) by the same user",
          "_vaultProxy": "The VaultProxy to reconfigure"
        },
        "returns": {
          "comptrollerProxy_": "The address of the ComptrollerProxy deployed during this action"
        }
      },
      "deregisterBuySharesOnBehalfCallers(address[])": {
        "params": {
          "_callers": "The callers to deregister"
        }
      },
      "deregisterVaultCalls(address[],bytes4[],bytes32[])": {
        "details": "ANY_VAULT_CALL is a wildcard that allows any payload",
        "params": {
          "_contracts": "The contracts of the calls to de-register",
          "_dataHashes": "The keccak call data hashes of the calls to de-register",
          "_selectors": "The selectors of the calls to de-register"
        }
      },
      "executeMigration(address,bool)": {
        "params": {
          "_bypassPrevReleaseFailure": "True if should override a failure in the previous release while executing migration",
          "_vaultProxy": "The VaultProxy for which to execute the migration"
        }
      },
      "executeReconfiguration(address)": {
        "details": "ProtocolFeeTracker.initializeForVault() does not need to be included in a reconfiguration, as it refers to the vault and not the new ComptrollerProxy",
        "params": {
          "_vaultProxy": "The VaultProxy contract for which to execute the reconfiguration request"
        }
      },
      "getComptrollerLib()": {
        "returns": {
          "comptrollerLib_": "The `comptrollerLib` variable value"
        }
      },
      "getCreator()": {
        "returns": {
          "creator_": "The `CREATOR` variable value"
        }
      },
      "getDispatcher()": {
        "returns": {
          "dispatcher_": "The `DISPATCHER` variable value"
        }
      },
      "getGasLimitsForDestructCall()": {
        "returns": {
          "deactivateFeeManagerGasLimit_": "The amount of gas to forward to deactivate the FeeManager",
          "payProtocolFeeGasLimit_": "The amount of gas to forward to pay the protocol fee"
        }
      },
      "getGasRelayPaymasterFactory()": {
        "returns": {
          "gasRelayPaymasterFactory_": "The `GAS_RELAY_PAYMASTER_FACTORY` variable value"
        }
      },
      "getGasRelayTrustedForwarder()": {
        "returns": {
          "trustedForwarder_": "The trusted forwarder"
        }
      },
      "getOwner()": {
        "details": "The owner is initially the contract's creator, for convenience in setting up configuration. Ownership is handed-off when the creator calls setReleaseLive().",
        "returns": {
          "owner_": "The contract owner address"
        }
      },
      "getProtocolFeeTracker()": {
        "returns": {
          "protocolFeeTracker_": "The `protocolFeeTracker` variable value"
        }
      },
      "getReconfigurationRequestForVaultProxy(address)": {
        "params": {
          "_vaultProxy": "The VaultProxy instance"
        },
        "returns": {
          "reconfigurationRequest_": "The pending ReconfigurationRequest"
        }
      },
      "getReconfigurationTimelock()": {
        "returns": {
          "reconfigurationTimelock_": "The timelock value (in seconds)"
        }
      },
      "getVaultLib()": {
        "returns": {
          "vaultLib_": "The `vaultLib` variable value"
        }
      },
      "hasReconfigurationRequest(address)": {
        "params": {
          "_vaultProxy": "The VaultProxy instance"
        },
        "returns": {
          "hasReconfigurationRequest_": "True if a ReconfigurationRequest exists"
        }
      },
      "invokeMigrationInCancelHook(address,address,address,address)": {
        "params": {
          "_nextComptrollerProxy": "The ComptrollerProxy created on this release"
        }
      },
      "invokeMigrationOutHook(uint8,address,address,address,address)": {
        "params": {
          "_vaultProxy": "The VaultProxy being migrated"
        }
      },
      "isAllowedBuySharesOnBehalfCaller(address)": {
        "params": {
          "_who": "The account to check"
        },
        "returns": {
          "isAllowed_": "True if the account is an allowed caller"
        }
      },
      "isAllowedVaultCall(address,bytes4,bytes32)": {
        "details": "A vault call is allowed if the _dataHash is specifically allowed, or if any _dataHash is allowed",
        "params": {
          "_contract": "The contract of the call to check",
          "_dataHash": "The keccak call data hash of the call to check",
          "_selector": "The selector of the call to check"
        },
        "returns": {
          "isAllowed_": "True if the call is allowed"
        }
      },
      "isRegisteredVaultCall(address,bytes4,bytes32)": {
        "params": {
          "_contract": "The contract of the call to check",
          "_dataHash": "The keccak call data hash of the call to check",
          "_selector": "The selector of the call to check"
        },
        "returns": {
          "isRegistered_": "True if the call is registered"
        }
      },
      "registerBuySharesOnBehalfCallers(address[])": {
        "details": "Validate that each registered caller only forwards requests to buy shares that originate from the same _buyer passed into buySharesOnBehalf(). This is critical to the integrity of VaultProxy.freelyTransferableShares.",
        "params": {
          "_callers": "The allowed callers"
        }
      },
      "registerVaultCalls(address[],bytes4[],bytes32[])": {
        "details": "ANY_VAULT_CALL is a wildcard that allows any payload",
        "params": {
          "_contracts": "The contracts of the calls to register",
          "_dataHashes": "The keccak call data hashes of the calls to register",
          "_selectors": "The selectors of the calls to register"
        }
      },
      "releaseIsLive()": {
        "returns": {
          "isLive_": "The `isLive` variable value"
        }
      },
      "setComptrollerLib(address)": {
        "params": {
          "_comptrollerLib": "The ComptrollerLib contract address"
        }
      },
      "setGasLimitsForDestructCall(uint32,uint32)": {
        "params": {
          "_nextDeactivateFeeManagerGasLimit": "The amount of gas to forward to deactivate the FeeManager",
          "_nextPayProtocolFeeGasLimit": "The amount of gas to forward to pay the protocol fee"
        }
      },
      "setProtocolFeeTracker(address)": {
        "params": {
          "_protocolFeeTracker": "The ProtocolFeeTracker contract address"
        }
      },
      "setReconfigurationTimelock(uint256)": {
        "params": {
          "_nextTimelock": "The number of seconds for the new timelock"
        }
      },
      "setReleaseLive()": {
        "details": "A live release allows funds to be created and migrated once this contract is set as the Dispatcher.currentFundDeployer"
      },
      "setVaultLib(address)": {
        "params": {
          "_vaultLib": "The VaultLib contract address"
        }
      }
    },
    "title": "FundDeployer Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancelMigration(address,bool)": {
        "notice": "Cancels fund migration"
      },
      "cancelReconfiguration(address)": {
        "notice": "Cancels a pending reconfiguration request"
      },
      "createMigrationRequest(address,address,uint256,bytes,bytes,bool)": {
        "notice": "Creates a fully-configured ComptrollerProxy instance for a VaultProxy and signals the migration process"
      },
      "createNewFund(address,string,address,uint256,bytes,bytes)": {
        "notice": "Creates a new fund"
      },
      "createReconfigurationRequest(address,address,uint256,bytes,bytes)": {
        "notice": "Creates a fully-configured ComptrollerProxy instance for a VaultProxy and signals the reconfiguration process"
      },
      "deregisterBuySharesOnBehalfCallers(address[])": {
        "notice": "Deregisters allowed callers of ComptrollerProxy.buySharesOnBehalf()"
      },
      "deregisterVaultCalls(address[],bytes4[],bytes32[])": {
        "notice": "De-registers allowed arbitrary contract calls that can be sent from the VaultProxy"
      },
      "executeMigration(address,bool)": {
        "notice": "Executes fund migration"
      },
      "executeReconfiguration(address)": {
        "notice": "Executes a pending reconfiguration request"
      },
      "getComptrollerLib()": {
        "notice": "Gets the `comptrollerLib` variable value"
      },
      "getCreator()": {
        "notice": "Gets the `CREATOR` variable value"
      },
      "getDispatcher()": {
        "notice": "Gets the `DISPATCHER` variable value"
      },
      "getGasLimitsForDestructCall()": {
        "notice": "Gets the amounts of gas to forward to each of the ComptrollerLib.destructActivated() external calls"
      },
      "getGasRelayPaymasterFactory()": {
        "notice": "Gets the `GAS_RELAY_PAYMASTER_FACTORY` variable"
      },
      "getGasRelayTrustedForwarder()": {
        "notice": "Gets the trusted forwarder for GSN relaying"
      },
      "getOwner()": {
        "notice": "Gets the current owner of the contract"
      },
      "getProtocolFeeTracker()": {
        "notice": "Gets the `protocolFeeTracker` variable value"
      },
      "getReconfigurationRequestForVaultProxy(address)": {
        "notice": "Gets the pending ReconfigurationRequest for a given VaultProxy"
      },
      "getReconfigurationTimelock()": {
        "notice": "Gets the amount of time that must pass before executing a ReconfigurationRequest"
      },
      "getVaultLib()": {
        "notice": "Gets the `vaultLib` variable value"
      },
      "hasReconfigurationRequest(address)": {
        "notice": "Checks whether a ReconfigurationRequest exists for a given VaultProxy"
      },
      "invokeMigrationInCancelHook(address,address,address,address)": {
        "notice": "Executes logic when a migration is canceled on the Dispatcher"
      },
      "invokeMigrationOutHook(uint8,address,address,address,address)": {
        "notice": "Allows \"hooking into\" specific moments in the migration pipeline to execute arbitrary logic during a migration out of this release"
      },
      "isAllowedBuySharesOnBehalfCaller(address)": {
        "notice": "Checks if an account is an allowed caller of ComptrollerProxy.buySharesOnBehalf()"
      },
      "isAllowedVaultCall(address,bytes4,bytes32)": {
        "notice": "Checks if a contract call is allowed"
      },
      "isRegisteredVaultCall(address,bytes4,bytes32)": {
        "notice": "Checks if a contract call is registered"
      },
      "registerBuySharesOnBehalfCallers(address[])": {
        "notice": "Registers allowed callers of ComptrollerProxy.buySharesOnBehalf()"
      },
      "registerVaultCalls(address[],bytes4[],bytes32[])": {
        "notice": "Registers allowed arbitrary contract calls that can be sent from the VaultProxy"
      },
      "releaseIsLive()": {
        "notice": "Gets the `isLive` variable value"
      },
      "setComptrollerLib(address)": {
        "notice": "Sets the ComptrollerLib"
      },
      "setGasLimitsForDestructCall(uint32,uint32)": {
        "notice": "Sets the amounts of gas to forward to each of the ComptrollerLib.destructActivated() external calls"
      },
      "setProtocolFeeTracker(address)": {
        "notice": "Sets the ProtocolFeeTracker"
      },
      "setReconfigurationTimelock(uint256)": {
        "notice": "Sets a new reconfiguration timelock"
      },
      "setReleaseLive()": {
        "notice": "Sets the release as live"
      },
      "setVaultLib(address)": {
        "notice": "Sets the VaultLib"
      }
    },
    "notice": "The top-level contract of the release. It primarily coordinates fund deployment and fund migration, but it is also deferred to for contract access control and for allowed calls that can be made with a fund's VaultProxy as the msg.sender.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8393,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "comptrollerLib",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 8395,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "protocolFeeTracker",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 8397,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "vaultLib",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 8399,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "gasLimitForDestructCallToDeactivateFeeManager",
        "offset": 20,
        "slot": "2",
        "type": "t_uint32"
      },
      {
        "astId": 8401,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "gasLimitForDestructCallToPayProtocolFee",
        "offset": 24,
        "slot": "2",
        "type": "t_uint32"
      },
      {
        "astId": 8403,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "isLive",
        "offset": 28,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 8405,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "reconfigurationTimelock",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 8409,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "acctToIsAllowedBuySharesOnBehalfCaller",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 8415,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "vaultCallToPayloadToIsAllowed",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))"
      },
      {
        "astId": 8419,
        "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
        "label": "vaultProxyToReconfigurationRequest",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_struct(ReconfigurationRequest)8384_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(ReconfigurationRequest)8384_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FundDeployer.ReconfigurationRequest)",
        "numberOfBytes": "32",
        "value": "t_struct(ReconfigurationRequest)8384_storage"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_struct(ReconfigurationRequest)8384_storage": {
        "encoding": "inplace",
        "label": "struct FundDeployer.ReconfigurationRequest",
        "members": [
          {
            "astId": 8381,
            "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
            "label": "nextComptrollerProxy",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8383,
            "contract": "contracts/release/core/fund-deployer/FundDeployer.sol:FundDeployer",
            "label": "executableTimestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}