{
  "address": "0x20d7B364E8Ed1F4260b5B90C41c2deC3C1F6D367",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_integrationManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_augustusSwapper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenTransferProxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CLAIM_REWARDS_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEND_AND_STAKE_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEND_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REDEEM_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKE_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TAKE_ORDER_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNSTAKE_AND_REDEEM_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNSTAKE_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIntegrationManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "integrationManager_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getParaSwapV4AugustusSwapper",
      "outputs": [
        {
          "internalType": "address",
          "name": "augustusSwapper_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getParaSwapV4TokenTransferProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenTransferProxy_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "_actionData",
          "type": "bytes"
        }
      ],
      "name": "parseAssetsForAction",
      "outputs": [
        {
          "internalType": "enum IIntegrationManager.SpendAssetsHandleType",
          "name": "spendAssetsHandleType_",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "spendAssets_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "spendAssetAmounts_",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "incomingAssets_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minIncomingAssetAmounts_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_actionData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "takeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe03a875f68c9aae7b488e458931eada76539a7e134b2606215671a23489a1b81",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x20d7B364E8Ed1F4260b5B90C41c2deC3C1F6D367",
    "transactionIndex": 0,
    "gasUsed": "1348742",
    "logsBloom": "0x
    "blockHash": "0xd5ff9f86bb0cb8c09d34125fd3976696cc1899a74b4a50ce9eb0220d0c2069dd",
    "transactionHash": "0xe03a875f68c9aae7b488e458931eada76539a7e134b2606215671a23489a1b81",
    "logs": [],
    "blockNumber": 13946239,
    "cumulativeGasUsed": "1348742",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x313F922BE1649cEc058EC0f076664500c78bdc0b",
    "0x1bD435F3C054b6e901B7b108a0ab7617C808677b",
    "0xb70Bc06D2c9Bf03b3373799606dc7d39346c06B3"
  ],
  "linkedData": {
    "type": "ADAPTER"
  },
  "solcInputHash": "fd41f4d5d0ef192ad3cb382782c5b450",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_integrationManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_augustusSwapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenTransferProxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CLAIM_REWARDS_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEND_AND_STAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEND_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDEEM_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TAKE_ORDER_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_AND_REDEEM_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIntegrationManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"integrationManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParaSwapV4AugustusSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"augustusSwapper_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParaSwapV4TokenTransferProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenTransferProxy_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"}],\"name\":\"parseAssetsForAction\",\"outputs\":[{\"internalType\":\"enum IIntegrationManager.SpendAssetsHandleType\",\"name\":\"spendAssetsHandleType_\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"spendAssets_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"spendAssetAmounts_\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"incomingAssets_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minIncomingAssetAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"takeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"details\":\"Does not allow any protocol that collects protocol fees in ETH, e.g., 0x v3\",\"kind\":\"dev\",\"methods\":{\"getIntegrationManager()\":{\"returns\":{\"integrationManager_\":\"The `INTEGRATION_MANAGER` variable value\"}},\"getParaSwapV4AugustusSwapper()\":{\"returns\":{\"augustusSwapper_\":\"The `PARA_SWAP_V4_AUGUSTUS_SWAPPER` variable value\"}},\"getParaSwapV4TokenTransferProxy()\":{\"returns\":{\"tokenTransferProxy_\":\"The `PARA_SWAP_V4_TOKEN_TRANSFER_PROXY` variable value\"}},\"parseAssetsForAction(address,bytes4,bytes)\":{\"params\":{\"_actionData\":\"Data specific to this action\",\"_selector\":\"The function selector for the callOnIntegration\"},\"returns\":{\"incomingAssets_\":\"The assets to receive in the call\",\"minIncomingAssetAmounts_\":\"The min asset amounts to receive in the call\",\"spendAssetAmounts_\":\"The max asset amounts to spend in the call\",\"spendAssetsHandleType_\":\"A type that dictates how to handle granting the adapter access to spend assets (`None` by default)\",\"spendAssets_\":\"The assets to spend in the call\"}},\"takeOrder(address,bytes,bytes)\":{\"details\":\"ParaSwap v4 completely uses entire outgoing asset balance and incoming asset is sent directly to the beneficiary (the _vaultProxy)\",\"params\":{\"_actionData\":\"Data specific to this action\",\"_vaultProxy\":\"The VaultProxy of the calling fund\"}}},\"title\":\"ParaSwapV4Adapter Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getIntegrationManager()\":{\"notice\":\"Gets the `INTEGRATION_MANAGER` variable\"},\"getParaSwapV4AugustusSwapper()\":{\"notice\":\"Gets the `PARA_SWAP_V4_AUGUSTUS_SWAPPER` variable\"},\"getParaSwapV4TokenTransferProxy()\":{\"notice\":\"Gets the `PARA_SWAP_V4_TOKEN_TRANSFER_PROXY` variable\"},\"parseAssetsForAction(address,bytes4,bytes)\":{\"notice\":\"Parses the expected assets in a particular action\"},\"takeOrder(address,bytes,bytes)\":{\"notice\":\"Trades assets on ParaSwap\"}},\"notice\":\"Adapter for interacting with ParaSwap (v4)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/integration-manager/integrations/adapters/ParaSwapV4Adapter.sol\":\"ParaSwapV4Adapter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/release/extensions/integration-manager/IIntegrationManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IIntegrationManager interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Interface for the IntegrationManager\\ninterface IIntegrationManager {\\n    enum SpendAssetsHandleType {None, Approve, Transfer}\\n}\\n\",\"keccak256\":\"0x858506b4374948c01124d37df17fe4d1902631c752fd29afb65f82e36356072a\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/IIntegrationAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../IIntegrationManager.sol\\\";\\n\\n/// @title Integration Adapter interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Interface for all integration adapters\\ninterface IIntegrationAdapter {\\n    function parseAssetsForAction(\\n        address _vaultProxy,\\n        bytes4 _selector,\\n        bytes calldata _encodedCallArgs\\n    )\\n        external\\n        view\\n        returns (\\n            IIntegrationManager.SpendAssetsHandleType spendAssetsHandleType_,\\n            address[] memory spendAssets_,\\n            uint256[] memory spendAssetAmounts_,\\n            address[] memory incomingAssets_,\\n            uint256[] memory minIncomingAssetAmounts_\\n        );\\n}\\n\",\"keccak256\":\"0x14b11777e21aceca340931832874342546731493bb169dbb4de736b16e9a7cc1\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/adapters/ParaSwapV4Adapter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../utils/actions/ParaSwapV4ActionsMixin.sol\\\";\\nimport \\\"../utils/AdapterBase.sol\\\";\\n\\n/// @title ParaSwapV4Adapter Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Adapter for interacting with ParaSwap (v4)\\n/// @dev Does not allow any protocol that collects protocol fees in ETH, e.g., 0x v3\\ncontract ParaSwapV4Adapter is AdapterBase, ParaSwapV4ActionsMixin {\\n    constructor(\\n        address _integrationManager,\\n        address _augustusSwapper,\\n        address _tokenTransferProxy\\n    )\\n        public\\n        AdapterBase(_integrationManager)\\n        ParaSwapV4ActionsMixin(_augustusSwapper, _tokenTransferProxy)\\n    {}\\n\\n    // EXTERNAL FUNCTIONS\\n\\n    /// @notice Trades assets on ParaSwap\\n    /// @param _vaultProxy The VaultProxy of the calling fund\\n    /// @param _actionData Data specific to this action\\n    /// @dev ParaSwap v4 completely uses entire outgoing asset balance and incoming asset\\n    /// is sent directly to the beneficiary (the _vaultProxy)\\n    function takeOrder(\\n        address _vaultProxy,\\n        bytes calldata _actionData,\\n        bytes calldata\\n    ) external onlyIntegrationManager {\\n        (\\n            uint256 minIncomingAssetAmount,\\n            uint256 expectedIncomingAssetAmount,\\n            address outgoingAsset,\\n            uint256 outgoingAssetAmount,\\n            IParaSwapV4AugustusSwapper.Path[] memory paths\\n        ) = __decodeCallArgs(_actionData);\\n\\n        __paraSwapV4MultiSwap(\\n            outgoingAsset,\\n            outgoingAssetAmount,\\n            minIncomingAssetAmount,\\n            expectedIncomingAssetAmount,\\n            payable(_vaultProxy),\\n            paths\\n        );\\n    }\\n\\n    /// @notice Parses the expected assets in a particular action\\n    /// @param _selector The function selector for the callOnIntegration\\n    /// @param _actionData Data specific to this action\\n    /// @return spendAssetsHandleType_ A type that dictates how to handle granting\\n    /// the adapter access to spend assets (`None` by default)\\n    /// @return spendAssets_ The assets to spend in the call\\n    /// @return spendAssetAmounts_ The max asset amounts to spend in the call\\n    /// @return incomingAssets_ The assets to receive in the call\\n    /// @return minIncomingAssetAmounts_ The min asset amounts to receive in the call\\n    function parseAssetsForAction(\\n        address,\\n        bytes4 _selector,\\n        bytes calldata _actionData\\n    )\\n        external\\n        view\\n        override\\n        returns (\\n            IIntegrationManager.SpendAssetsHandleType spendAssetsHandleType_,\\n            address[] memory spendAssets_,\\n            uint256[] memory spendAssetAmounts_,\\n            address[] memory incomingAssets_,\\n            uint256[] memory minIncomingAssetAmounts_\\n        )\\n    {\\n        require(_selector == TAKE_ORDER_SELECTOR, \\\"parseAssetsForAction: _selector invalid\\\");\\n\\n        (\\n            uint256 minIncomingAssetAmount,\\n            ,\\n            address outgoingAsset,\\n            uint256 outgoingAssetAmount,\\n            IParaSwapV4AugustusSwapper.Path[] memory paths\\n        ) = __decodeCallArgs(_actionData);\\n\\n        spendAssets_ = new address[](1);\\n        spendAssets_[0] = outgoingAsset;\\n\\n        spendAssetAmounts_ = new uint256[](1);\\n        spendAssetAmounts_[0] = outgoingAssetAmount;\\n\\n        incomingAssets_ = new address[](1);\\n        incomingAssets_[0] = paths[paths.length - 1].to;\\n\\n        minIncomingAssetAmounts_ = new uint256[](1);\\n        minIncomingAssetAmounts_[0] = minIncomingAssetAmount;\\n\\n        return (\\n            IIntegrationManager.SpendAssetsHandleType.Transfer,\\n            spendAssets_,\\n            spendAssetAmounts_,\\n            incomingAssets_,\\n            minIncomingAssetAmounts_\\n        );\\n    }\\n\\n    /// @dev Helper to decode the encoded callOnIntegration call arguments\\n    function __decodeCallArgs(bytes memory _actionData)\\n        private\\n        pure\\n        returns (\\n            uint256 minIncomingAssetAmount_,\\n            uint256 expectedIncomingAssetAmount_, // Passed as a courtesy to ParaSwap for analytics\\n            address outgoingAsset_,\\n            uint256 outgoingAssetAmount_,\\n            IParaSwapV4AugustusSwapper.Path[] memory paths_\\n        )\\n    {\\n        return\\n            abi.decode(\\n                _actionData,\\n                (uint256, uint256, address, uint256, IParaSwapV4AugustusSwapper.Path[])\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe3a8f81fc62f5de4834542e4fe0011aeb3ac748780e202afc11d7069fe19f491\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/utils/AdapterBase.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"../../../../utils/AssetHelpers.sol\\\";\\nimport \\\"../IIntegrationAdapter.sol\\\";\\nimport \\\"./IntegrationSelectors.sol\\\";\\n\\n/// @title AdapterBase Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A base contract for integration adapters\\nabstract contract AdapterBase is IIntegrationAdapter, IntegrationSelectors, AssetHelpers {\\n    using SafeERC20 for ERC20;\\n\\n    address internal immutable INTEGRATION_MANAGER;\\n\\n    /// @dev Provides a standard implementation for transferring incoming assets\\n    /// from an adapter to a VaultProxy at the end of an adapter action\\n    modifier postActionIncomingAssetsTransferHandler(\\n        address _vaultProxy,\\n        bytes memory _assetData\\n    ) {\\n        _;\\n\\n        (, , address[] memory incomingAssets) = __decodeAssetData(_assetData);\\n\\n        __pushFullAssetBalances(_vaultProxy, incomingAssets);\\n    }\\n\\n    /// @dev Provides a standard implementation for transferring unspent spend assets\\n    /// from an adapter to a VaultProxy at the end of an adapter action\\n    modifier postActionSpendAssetsTransferHandler(address _vaultProxy, bytes memory _assetData) {\\n        _;\\n\\n        (address[] memory spendAssets, , ) = __decodeAssetData(_assetData);\\n\\n        __pushFullAssetBalances(_vaultProxy, spendAssets);\\n    }\\n\\n    modifier onlyIntegrationManager {\\n        require(\\n            msg.sender == INTEGRATION_MANAGER,\\n            \\\"Only the IntegrationManager can call this function\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor(address _integrationManager) public {\\n        INTEGRATION_MANAGER = _integrationManager;\\n    }\\n\\n    // INTERNAL FUNCTIONS\\n\\n    /// @dev Helper to decode the _assetData param passed to adapter call\\n    function __decodeAssetData(bytes memory _assetData)\\n        internal\\n        pure\\n        returns (\\n            address[] memory spendAssets_,\\n            uint256[] memory spendAssetAmounts_,\\n            address[] memory incomingAssets_\\n        )\\n    {\\n        return abi.decode(_assetData, (address[], uint256[], address[]));\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Gets the `INTEGRATION_MANAGER` variable\\n    /// @return integrationManager_ The `INTEGRATION_MANAGER` variable value\\n    function getIntegrationManager() external view returns (address integrationManager_) {\\n        return INTEGRATION_MANAGER;\\n    }\\n}\\n\",\"keccak256\":\"0x154cf5c2025f1c500bbfcbd4a8a6ed467d5e7f79f8625b56895b14cb6b176164\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/utils/IntegrationSelectors.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IntegrationSelectors Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Selectors for integration actions\\n/// @dev Selectors are created from their signatures rather than hardcoded for easy verification\\nabstract contract IntegrationSelectors {\\n    // Trading\\n    bytes4 public constant TAKE_ORDER_SELECTOR = bytes4(\\n        keccak256(\\\"takeOrder(address,bytes,bytes)\\\")\\n    );\\n\\n    // Lending\\n    bytes4 public constant LEND_SELECTOR = bytes4(keccak256(\\\"lend(address,bytes,bytes)\\\"));\\n    bytes4 public constant REDEEM_SELECTOR = bytes4(keccak256(\\\"redeem(address,bytes,bytes)\\\"));\\n\\n    // Staking\\n    bytes4 public constant STAKE_SELECTOR = bytes4(keccak256(\\\"stake(address,bytes,bytes)\\\"));\\n    bytes4 public constant UNSTAKE_SELECTOR = bytes4(keccak256(\\\"unstake(address,bytes,bytes)\\\"));\\n\\n    // Rewards\\n    bytes4 public constant CLAIM_REWARDS_SELECTOR = bytes4(\\n        keccak256(\\\"claimRewards(address,bytes,bytes)\\\")\\n    );\\n\\n    // Combined\\n    bytes4 public constant LEND_AND_STAKE_SELECTOR = bytes4(\\n        keccak256(\\\"lendAndStake(address,bytes,bytes)\\\")\\n    );\\n    bytes4 public constant UNSTAKE_AND_REDEEM_SELECTOR = bytes4(\\n        keccak256(\\\"unstakeAndRedeem(address,bytes,bytes)\\\")\\n    );\\n}\\n\",\"keccak256\":\"0x46d92f56468d868acc2a6f78e80024edfcaf03d09625644c666ce1ab5603c34c\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/utils/actions/ParaSwapV4ActionsMixin.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../../../../interfaces/IParaSwapV4AugustusSwapper.sol\\\";\\nimport \\\"../../../../../utils/AssetHelpers.sol\\\";\\n\\n/// @title ParaSwapV4ActionsMixin Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Mixin contract for interacting with ParaSwap (v4)\\nabstract contract ParaSwapV4ActionsMixin is AssetHelpers {\\n    string private constant REFERRER = \\\"enzyme\\\";\\n\\n    address private immutable PARA_SWAP_V4_AUGUSTUS_SWAPPER;\\n    address private immutable PARA_SWAP_V4_TOKEN_TRANSFER_PROXY;\\n\\n    constructor(address _augustusSwapper, address _tokenTransferProxy) public {\\n        PARA_SWAP_V4_AUGUSTUS_SWAPPER = _augustusSwapper;\\n        PARA_SWAP_V4_TOKEN_TRANSFER_PROXY = _tokenTransferProxy;\\n    }\\n\\n    /// @dev Helper to execute a multiSwap() order\\n    function __paraSwapV4MultiSwap(\\n        address _fromToken,\\n        uint256 _fromAmount,\\n        uint256 _toAmount,\\n        uint256 _expectedAmount,\\n        address payable _beneficiary,\\n        IParaSwapV4AugustusSwapper.Path[] memory _path\\n    ) internal {\\n        __approveAssetMaxAsNeeded(_fromToken, PARA_SWAP_V4_TOKEN_TRANSFER_PROXY, _fromAmount);\\n\\n        IParaSwapV4AugustusSwapper.SellData memory sellData = IParaSwapV4AugustusSwapper.SellData({\\n            fromToken: _fromToken,\\n            fromAmount: _fromAmount,\\n            toAmount: _toAmount,\\n            expectedAmount: _expectedAmount,\\n            beneficiary: _beneficiary,\\n            referrer: REFERRER,\\n            useReduxToken: false,\\n            path: _path\\n        });\\n\\n        IParaSwapV4AugustusSwapper(PARA_SWAP_V4_AUGUSTUS_SWAPPER).multiSwap(sellData);\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Gets the `PARA_SWAP_V4_AUGUSTUS_SWAPPER` variable\\n    /// @return augustusSwapper_ The `PARA_SWAP_V4_AUGUSTUS_SWAPPER` variable value\\n    function getParaSwapV4AugustusSwapper() public view returns (address augustusSwapper_) {\\n        return PARA_SWAP_V4_AUGUSTUS_SWAPPER;\\n    }\\n\\n    /// @notice Gets the `PARA_SWAP_V4_TOKEN_TRANSFER_PROXY` variable\\n    /// @return tokenTransferProxy_ The `PARA_SWAP_V4_TOKEN_TRANSFER_PROXY` variable value\\n    function getParaSwapV4TokenTransferProxy() public view returns (address tokenTransferProxy_) {\\n        return PARA_SWAP_V4_TOKEN_TRANSFER_PROXY;\\n    }\\n}\\n\",\"keccak256\":\"0xb49edc26628a8e2d4255d022c06b28a4c972b3a124ebea23e0d9b25853e1e67f\",\"license\":\"GPL-3.0\"},\"contracts/release/interfaces/IParaSwapV4AugustusSwapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\n/// @title ParaSwap V4 IAugustusSwapper interface\\ninterface IParaSwapV4AugustusSwapper {\\n    struct Route {\\n        address payable exchange;\\n        address targetExchange;\\n        uint256 percent;\\n        bytes payload;\\n        uint256 networkFee;\\n    }\\n\\n    struct Path {\\n        address to;\\n        uint256 totalNetworkFee;\\n        Route[] routes;\\n    }\\n\\n    struct SellData {\\n        address fromToken;\\n        uint256 fromAmount;\\n        uint256 toAmount;\\n        uint256 expectedAmount;\\n        address payable beneficiary;\\n        string referrer;\\n        bool useReduxToken;\\n        Path[] path;\\n    }\\n\\n    function multiSwap(SellData calldata) external payable returns (uint256);\\n}\\n\",\"keccak256\":\"0x813ba34145d9f0e2da46cfcfa50a5e8d213b4f63113aa761628743827f45aaf2\",\"license\":\"GPL-3.0\"},\"contracts/release/utils/AssetHelpers.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\n\\n/// @title AssetHelpers Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A util contract for common token actions\\nabstract contract AssetHelpers {\\n    using SafeERC20 for ERC20;\\n    using SafeMath for uint256;\\n\\n    /// @dev Helper to approve a target account with the max amount of an asset.\\n    /// This is helpful for fully trusted contracts, such as adapters that\\n    /// interact with external protocol like Uniswap, Compound, etc.\\n    function __approveAssetMaxAsNeeded(\\n        address _asset,\\n        address _target,\\n        uint256 _neededAmount\\n    ) internal {\\n        uint256 allowance = ERC20(_asset).allowance(address(this), _target);\\n        if (allowance < _neededAmount) {\\n            if (allowance > 0) {\\n                ERC20(_asset).safeApprove(_target, 0);\\n            }\\n            ERC20(_asset).safeApprove(_target, type(uint256).max);\\n        }\\n    }\\n\\n    /// @dev Helper to transfer full asset balances from the current contract to a target\\n    function __pushFullAssetBalances(address _target, address[] memory _assets)\\n        internal\\n        returns (uint256[] memory amountsTransferred_)\\n    {\\n        amountsTransferred_ = new uint256[](_assets.length);\\n        for (uint256 i; i < _assets.length; i++) {\\n            ERC20 assetContract = ERC20(_assets[i]);\\n            amountsTransferred_[i] = assetContract.balanceOf(address(this));\\n            if (amountsTransferred_[i] > 0) {\\n                assetContract.safeTransfer(_target, amountsTransferred_[i]);\\n            }\\n        }\\n\\n        return amountsTransferred_;\\n    }\\n}\\n\",\"keccak256\":\"0xe52543e0c2ac52e6ce6bbe60aa91b7b72aff3a9682d312ce83743ee0bb7d304d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620018933803806200189383398101604081905262000034916200006f565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c052620000ef565b80516200006981620000d5565b92915050565b6000806000606084860312156200008557600080fd5b60006200009386866200005c565b9350506020620000a6868287016200005c565b9250506040620000b9868287016200005c565b9150509250925092565b60006001600160a01b03821662000069565b620000e081620000c3565b8114620000ec57600080fd5b50565b60805160601c60a05160601c60c05160601c61175f620001346000398061053c52806105da5250806102fa52806106785250806101935280610560525061175f6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635e21197a1161008c578063c54efee511610066578063c54efee51461014c578063c7308c0314610170578063e7c4569014610178578063f7d882b514610180576100cf565b80635e21197a14610127578063863e5ad01461013c578063b23228cf14610144576100cf565b806303e38a2b146100d4578063080456c1146100e9578063131461c014610107578063257cb1a31461010f5780633ffc15911461011757806340da225d1461011f575b600080fd5b6100e76100e2366004610df8565b610188565b005b6100f1610244565b6040516100fe9190611507565b60405180910390f35b6100f1610268565b6100f161028c565b6100f16102b0565b6100f16102d4565b61012f6102f8565b6040516100fe91906114c3565b6100f161031c565b6100f1610340565b61015f61015a366004610d90565b610364565b6040516100fe959493929190611515565b61012f61053a565b61012f61055e565b6100f1610582565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101d95760405162461bcd60e51b81526004016101d090611592565b60405180910390fd5b600080600080606061022089898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105a692505050565b94509450945094509450610238838387878e866105d4565b50505050505050505050565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b600060608080806001600160e01b031988166303e38a2b60e01b1461039b5760405162461bcd60e51b81526004016101d0906115d2565b600080600060606103e18b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105a692505050565b945094509450509350600167ffffffffffffffff8111801561040257600080fd5b5060405190808252806020026020018201604052801561042c578160200160208202803683370190505b509750828860008151811061043d57fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509650818760008151811061048157fe5b602090810291909101015260408051600180825281830190925290816020016020820280368337019050509550806001825103815181106104be57fe5b602002602001015160000151866000815181106104d757fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509450838560008151811061051b57fe5b6020026020010181815250506002985050505050945094509450945094565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b6000806000806060858060200190518101906105c29190610ec3565b939a9299509097509550909350915050565b6105ff867f00000000000000000000000000000000000000000000000000000000000000008761071e565b610607610a8b565b604051806101000160405280886001600160a01b03168152602001878152602001868152602001858152602001846001600160a01b0316815260200160405180604001604052806006815260200165656e7a796d6560d01b81525081526020016000151581526020018381525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638f00eccb826040518263ffffffff1660e01b81526004016106c291906115e2565b602060405180830381600087803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107149190610ea5565b5050505050505050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e9061074f90309087906004016114d1565b60206040518083038186803b15801561076757600080fd5b505afa15801561077b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079f9190610ea5565b9050818110156107da5780156107c4576107c46001600160a01b0385168460006107e0565b6107da6001600160a01b038516846000196107e0565b50505050565b8015806108685750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061081690309086906004016114d1565b60206040518083038186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190610ea5565b155b6108845760405162461bcd60e51b81526004016101d0906115c2565b6108da8363095ea7b360e01b84846040516024016108a39291906114ec565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526108df565b505050565b6060610934826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661096e9092919063ffffffff16565b8051909150156108da57808060200190518101906109529190610e7f565b6108da5760405162461bcd60e51b81526004016101d0906115b2565b606061097d8484600085610987565b90505b9392505050565b6060824710156109a95760405162461bcd60e51b81526004016101d090611582565b6109b285610a48565b6109ce5760405162461bcd60e51b81526004016101d0906115a2565b60006060866001600160a01b031685876040516109eb91906114b7565b60006040518083038185875af1925050503d8060008114610a28576040519150601f19603f3d011682016040523d82523d6000602084013e610a2d565b606091505b5091509150610a3d828286610a52565b979650505050505050565b803b15155b919050565b60608315610a61575081610980565b825115610a715782518084602001fd5b8160405162461bcd60e51b81526004016101d09190611571565b60405180610100016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600015158152602001606081525090565b8035610aef816116fa565b92915050565b8051610aef816116fa565b600082601f830112610b1157600080fd5b8151610b24610b1f8261161a565b6115f3565b81815260209384019390925082018360005b83811015610b625781518601610b4c8882610c77565b8452506020928301929190910190600101610b36565b5050505092915050565b600082601f830112610b7d57600080fd5b8151610b8b610b1f8261161a565b81815260209384019390925082018360005b83811015610b625781518601610bb38882610cea565b8452506020928301929190910190600101610b9d565b8051610aef8161170e565b8035610aef81611717565b60008083601f840112610bf157600080fd5b50813567ffffffffffffffff811115610c0957600080fd5b602083019150836001820283011115610c2157600080fd5b9250929050565b600082601f830112610c3957600080fd5b8151610c47610b1f8261163b565b91508082526020830160208301858383011115610c6357600080fd5b610c6e8382846116b7565b50505092915050565b600060608284031215610c8957600080fd5b610c9360606115f3565b90506000610ca18484610af5565b8252506020610cb284848301610d85565b602083015250604082015167ffffffffffffffff811115610cd257600080fd5b610cde84828501610b6c565b60408301525092915050565b600060a08284031215610cfc57600080fd5b610d0660a06115f3565b90506000610d148484610af5565b8252506020610d2584848301610af5565b6020830152506040610d3984828501610d85565b604083015250606082015167ffffffffffffffff811115610d5957600080fd5b610d6584828501610c28565b6060830152506080610d7984828501610d85565b60808301525092915050565b8051610aef81611720565b60008060008060608587031215610da657600080fd5b6000610db28787610ae4565b9450506020610dc387828801610bd4565b935050604085013567ffffffffffffffff811115610de057600080fd5b610dec87828801610bdf565b95989497509550505050565b600080600080600060608688031215610e1057600080fd5b6000610e1c8888610ae4565b955050602086013567ffffffffffffffff811115610e3957600080fd5b610e4588828901610bdf565b9450945050604086013567ffffffffffffffff811115610e6457600080fd5b610e7088828901610bdf565b92509250509295509295909350565b600060208284031215610e9157600080fd5b6000610e9d8484610bc9565b949350505050565b600060208284031215610eb757600080fd5b6000610e9d8484610d85565b600080600080600060a08688031215610edb57600080fd5b6000610ee78888610d85565b9550506020610ef888828901610d85565b9450506040610f0988828901610af5565b9350506060610f1a88828901610d85565b925050608086015167ffffffffffffffff811115610f3757600080fd5b610f4388828901610b00565b9150509295509295909350565b6000610f5c8383610f88565b505060200190565b60006109808383611351565b60006109808383611399565b6000610f5c83836114ae565b610f9181611676565b82525050565b6000610fa282611669565b610fac818561166d565b9350610fb783611663565b8060005b83811015610fe5578151610fcf8882610f50565b9750610fda83611663565b925050600101610fbb565b509495945050505050565b6000610ffb82611669565b611005818561166d565b93508360208202850161101785611663565b8060005b8581101561105157848403895281516110348582610f64565b945061103f83611663565b60209a909a019992505060010161101b565b5091979650505050505050565b600061106982611669565b611073818561166d565b93508360208202850161108585611663565b8060005b8581101561105157848403895281516110a28582610f70565b94506110ad83611663565b60209a909a0199925050600101611089565b60006110ca82611669565b6110d4818561166d565b93506110df83611663565b8060005b83811015610fe55781516110f78882610f7c565b975061110283611663565b9250506001016110e3565b610f9181611681565b610f9181611686565b600061112a82611669565b611134818561166d565b93506111448185602086016116b7565b61114d816116e3565b9093019392505050565b600061116282611669565b61116c8185610a4d565b935061117c8185602086016116b7565b9290920192915050565b610f91816116ac565b600061119c60268361166d565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015260400192915050565b60006111e460328361166d565b7f4f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2081527131b0b636103a3434b990333ab731ba34b7b760711b602082015260400192915050565b6000611238601d8361166d565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815260200192915050565b6000611271602a8361166d565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006112bd60368361166d565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b600061131560278361166d565b7f7061727365417373657473466f72416374696f6e3a205f73656c6563746f72208152661a5b9d985b1a5960ca1b602082015260400192915050565b805160009060608401906113658582610f88565b50602083015161137860208601826114ae565b5060408301518482036040860152611390828261105e565b95945050505050565b805160009060a08401906113ad8582610f88565b5060208301516113c06020860182610f88565b5060408301516113d360408601826114ae565b50606083015184820360608601526113eb828261111f565b915050608083015161140060808601826114ae565b509392505050565b805160009061010084019061141d8582610f88565b50602083015161143060208601826114ae565b50604083015161144360408601826114ae565b50606083015161145660608601826114ae565b5060808301516114696080860182610f88565b5060a083015184820360a0860152611481828261111f565b91505060c083015161149660c086018261110d565b5060e083015184820360e08601526113908282610ff0565b610f91816116a9565b60006109808284611157565b60208101610aef8284610f88565b604081016114df8285610f88565b6109806020830184610f88565b604081016114fa8285610f88565b61098060208301846114ae565b60208101610aef8284611116565b60a081016115238288611186565b81810360208301526115358187610f97565b9050818103604083015261154981866110bf565b9050818103606083015261155d8185610f97565b90508181036080830152610a3d81846110bf565b60208082528101610980818461111f565b60208082528101610aef8161118f565b60208082528101610aef816111d7565b60208082528101610aef8161122b565b60208082528101610aef81611264565b60208082528101610aef816112b0565b60208082528101610aef81611308565b602080825281016109808184611408565b60405181810167ffffffffffffffff8111828210171561161257600080fd5b604052919050565b600067ffffffffffffffff82111561163157600080fd5b5060209081020190565b600067ffffffffffffffff82111561165257600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610aef8261169d565b151590565b6001600160e01b03191690565b80610a4d816116ed565b6001600160a01b031690565b90565b6000610aef82611693565b60005b838110156116d25781810151838201526020016116ba565b838111156107da5750506000910152565b601f01601f191690565b600381106116f757fe5b50565b61170381611676565b81146116f757600080fd5b61170381611681565b61170381611686565b611703816116a956fea2646970667358221220b9bf2f3231cdfed33ada65ba418e8ceb640e05cb2577a5363e17233b67a1b45664736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635e21197a1161008c578063c54efee511610066578063c54efee51461014c578063c7308c0314610170578063e7c4569014610178578063f7d882b514610180576100cf565b80635e21197a14610127578063863e5ad01461013c578063b23228cf14610144576100cf565b806303e38a2b146100d4578063080456c1146100e9578063131461c014610107578063257cb1a31461010f5780633ffc15911461011757806340da225d1461011f575b600080fd5b6100e76100e2366004610df8565b610188565b005b6100f1610244565b6040516100fe9190611507565b60405180910390f35b6100f1610268565b6100f161028c565b6100f16102b0565b6100f16102d4565b61012f6102f8565b6040516100fe91906114c3565b6100f161031c565b6100f1610340565b61015f61015a366004610d90565b610364565b6040516100fe959493929190611515565b61012f61053a565b61012f61055e565b6100f1610582565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101d95760405162461bcd60e51b81526004016101d090611592565b60405180910390fd5b600080600080606061022089898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105a692505050565b94509450945094509450610238838387878e866105d4565b50505050505050505050565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b600060608080806001600160e01b031988166303e38a2b60e01b1461039b5760405162461bcd60e51b81526004016101d0906115d2565b600080600060606103e18b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105a692505050565b945094509450509350600167ffffffffffffffff8111801561040257600080fd5b5060405190808252806020026020018201604052801561042c578160200160208202803683370190505b509750828860008151811061043d57fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509650818760008151811061048157fe5b602090810291909101015260408051600180825281830190925290816020016020820280368337019050509550806001825103815181106104be57fe5b602002602001015160000151866000815181106104d757fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509450838560008151811061051b57fe5b6020026020010181815250506002985050505050945094509450945094565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b6000806000806060858060200190518101906105c29190610ec3565b939a9299509097509550909350915050565b6105ff867f00000000000000000000000000000000000000000000000000000000000000008761071e565b610607610a8b565b604051806101000160405280886001600160a01b03168152602001878152602001868152602001858152602001846001600160a01b0316815260200160405180604001604052806006815260200165656e7a796d6560d01b81525081526020016000151581526020018381525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638f00eccb826040518263ffffffff1660e01b81526004016106c291906115e2565b602060405180830381600087803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107149190610ea5565b5050505050505050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e9061074f90309087906004016114d1565b60206040518083038186803b15801561076757600080fd5b505afa15801561077b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079f9190610ea5565b9050818110156107da5780156107c4576107c46001600160a01b0385168460006107e0565b6107da6001600160a01b038516846000196107e0565b50505050565b8015806108685750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061081690309086906004016114d1565b60206040518083038186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190610ea5565b155b6108845760405162461bcd60e51b81526004016101d0906115c2565b6108da8363095ea7b360e01b84846040516024016108a39291906114ec565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526108df565b505050565b6060610934826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661096e9092919063ffffffff16565b8051909150156108da57808060200190518101906109529190610e7f565b6108da5760405162461bcd60e51b81526004016101d0906115b2565b606061097d8484600085610987565b90505b9392505050565b6060824710156109a95760405162461bcd60e51b81526004016101d090611582565b6109b285610a48565b6109ce5760405162461bcd60e51b81526004016101d0906115a2565b60006060866001600160a01b031685876040516109eb91906114b7565b60006040518083038185875af1925050503d8060008114610a28576040519150601f19603f3d011682016040523d82523d6000602084013e610a2d565b606091505b5091509150610a3d828286610a52565b979650505050505050565b803b15155b919050565b60608315610a61575081610980565b825115610a715782518084602001fd5b8160405162461bcd60e51b81526004016101d09190611571565b60405180610100016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600015158152602001606081525090565b8035610aef816116fa565b92915050565b8051610aef816116fa565b600082601f830112610b1157600080fd5b8151610b24610b1f8261161a565b6115f3565b81815260209384019390925082018360005b83811015610b625781518601610b4c8882610c77565b8452506020928301929190910190600101610b36565b5050505092915050565b600082601f830112610b7d57600080fd5b8151610b8b610b1f8261161a565b81815260209384019390925082018360005b83811015610b625781518601610bb38882610cea565b8452506020928301929190910190600101610b9d565b8051610aef8161170e565b8035610aef81611717565b60008083601f840112610bf157600080fd5b50813567ffffffffffffffff811115610c0957600080fd5b602083019150836001820283011115610c2157600080fd5b9250929050565b600082601f830112610c3957600080fd5b8151610c47610b1f8261163b565b91508082526020830160208301858383011115610c6357600080fd5b610c6e8382846116b7565b50505092915050565b600060608284031215610c8957600080fd5b610c9360606115f3565b90506000610ca18484610af5565b8252506020610cb284848301610d85565b602083015250604082015167ffffffffffffffff811115610cd257600080fd5b610cde84828501610b6c565b60408301525092915050565b600060a08284031215610cfc57600080fd5b610d0660a06115f3565b90506000610d148484610af5565b8252506020610d2584848301610af5565b6020830152506040610d3984828501610d85565b604083015250606082015167ffffffffffffffff811115610d5957600080fd5b610d6584828501610c28565b6060830152506080610d7984828501610d85565b60808301525092915050565b8051610aef81611720565b60008060008060608587031215610da657600080fd5b6000610db28787610ae4565b9450506020610dc387828801610bd4565b935050604085013567ffffffffffffffff811115610de057600080fd5b610dec87828801610bdf565b95989497509550505050565b600080600080600060608688031215610e1057600080fd5b6000610e1c8888610ae4565b955050602086013567ffffffffffffffff811115610e3957600080fd5b610e4588828901610bdf565b9450945050604086013567ffffffffffffffff811115610e6457600080fd5b610e7088828901610bdf565b92509250509295509295909350565b600060208284031215610e9157600080fd5b6000610e9d8484610bc9565b949350505050565b600060208284031215610eb757600080fd5b6000610e9d8484610d85565b600080600080600060a08688031215610edb57600080fd5b6000610ee78888610d85565b9550506020610ef888828901610d85565b9450506040610f0988828901610af5565b9350506060610f1a88828901610d85565b925050608086015167ffffffffffffffff811115610f3757600080fd5b610f4388828901610b00565b9150509295509295909350565b6000610f5c8383610f88565b505060200190565b60006109808383611351565b60006109808383611399565b6000610f5c83836114ae565b610f9181611676565b82525050565b6000610fa282611669565b610fac818561166d565b9350610fb783611663565b8060005b83811015610fe5578151610fcf8882610f50565b9750610fda83611663565b925050600101610fbb565b509495945050505050565b6000610ffb82611669565b611005818561166d565b93508360208202850161101785611663565b8060005b8581101561105157848403895281516110348582610f64565b945061103f83611663565b60209a909a019992505060010161101b565b5091979650505050505050565b600061106982611669565b611073818561166d565b93508360208202850161108585611663565b8060005b8581101561105157848403895281516110a28582610f70565b94506110ad83611663565b60209a909a0199925050600101611089565b60006110ca82611669565b6110d4818561166d565b93506110df83611663565b8060005b83811015610fe55781516110f78882610f7c565b975061110283611663565b9250506001016110e3565b610f9181611681565b610f9181611686565b600061112a82611669565b611134818561166d565b93506111448185602086016116b7565b61114d816116e3565b9093019392505050565b600061116282611669565b61116c8185610a4d565b935061117c8185602086016116b7565b9290920192915050565b610f91816116ac565b600061119c60268361166d565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015260400192915050565b60006111e460328361166d565b7f4f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2081527131b0b636103a3434b990333ab731ba34b7b760711b602082015260400192915050565b6000611238601d8361166d565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815260200192915050565b6000611271602a8361166d565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006112bd60368361166d565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b600061131560278361166d565b7f7061727365417373657473466f72416374696f6e3a205f73656c6563746f72208152661a5b9d985b1a5960ca1b602082015260400192915050565b805160009060608401906113658582610f88565b50602083015161137860208601826114ae565b5060408301518482036040860152611390828261105e565b95945050505050565b805160009060a08401906113ad8582610f88565b5060208301516113c06020860182610f88565b5060408301516113d360408601826114ae565b50606083015184820360608601526113eb828261111f565b915050608083015161140060808601826114ae565b509392505050565b805160009061010084019061141d8582610f88565b50602083015161143060208601826114ae565b50604083015161144360408601826114ae565b50606083015161145660608601826114ae565b5060808301516114696080860182610f88565b5060a083015184820360a0860152611481828261111f565b91505060c083015161149660c086018261110d565b5060e083015184820360e08601526113908282610ff0565b610f91816116a9565b60006109808284611157565b60208101610aef8284610f88565b604081016114df8285610f88565b6109806020830184610f88565b604081016114fa8285610f88565b61098060208301846114ae565b60208101610aef8284611116565b60a081016115238288611186565b81810360208301526115358187610f97565b9050818103604083015261154981866110bf565b9050818103606083015261155d8185610f97565b90508181036080830152610a3d81846110bf565b60208082528101610980818461111f565b60208082528101610aef8161118f565b60208082528101610aef816111d7565b60208082528101610aef8161122b565b60208082528101610aef81611264565b60208082528101610aef816112b0565b60208082528101610aef81611308565b602080825281016109808184611408565b60405181810167ffffffffffffffff8111828210171561161257600080fd5b604052919050565b600067ffffffffffffffff82111561163157600080fd5b5060209081020190565b600067ffffffffffffffff82111561165257600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610aef8261169d565b151590565b6001600160e01b03191690565b80610a4d816116ed565b6001600160a01b031690565b90565b6000610aef82611693565b60005b838110156116d25781810151838201526020016116ba565b838111156107da5750506000910152565b601f01601f191690565b600381106116f757fe5b50565b61170381611676565b81146116f757600080fd5b61170381611681565b61170381611686565b611703816116a956fea2646970667358221220b9bf2f3231cdfed33ada65ba418e8ceb640e05cb2577a5363e17233b67a1b45664736f6c634300060c0033",
  "devdoc": {
    "author": "Enzyme Council <security@enzyme.finance>",
    "details": "Does not allow any protocol that collects protocol fees in ETH, e.g., 0x v3",
    "kind": "dev",
    "methods": {
      "getIntegrationManager()": {
        "returns": {
          "integrationManager_": "The `INTEGRATION_MANAGER` variable value"
        }
      },
      "getParaSwapV4AugustusSwapper()": {
        "returns": {
          "augustusSwapper_": "The `PARA_SWAP_V4_AUGUSTUS_SWAPPER` variable value"
        }
      },
      "getParaSwapV4TokenTransferProxy()": {
        "returns": {
          "tokenTransferProxy_": "The `PARA_SWAP_V4_TOKEN_TRANSFER_PROXY` variable value"
        }
      },
      "parseAssetsForAction(address,bytes4,bytes)": {
        "params": {
          "_actionData": "Data specific to this action",
          "_selector": "The function selector for the callOnIntegration"
        },
        "returns": {
          "incomingAssets_": "The assets to receive in the call",
          "minIncomingAssetAmounts_": "The min asset amounts to receive in the call",
          "spendAssetAmounts_": "The max asset amounts to spend in the call",
          "spendAssetsHandleType_": "A type that dictates how to handle granting the adapter access to spend assets (`None` by default)",
          "spendAssets_": "The assets to spend in the call"
        }
      },
      "takeOrder(address,bytes,bytes)": {
        "details": "ParaSwap v4 completely uses entire outgoing asset balance and incoming asset is sent directly to the beneficiary (the _vaultProxy)",
        "params": {
          "_actionData": "Data specific to this action",
          "_vaultProxy": "The VaultProxy of the calling fund"
        }
      }
    },
    "title": "ParaSwapV4Adapter Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getIntegrationManager()": {
        "notice": "Gets the `INTEGRATION_MANAGER` variable"
      },
      "getParaSwapV4AugustusSwapper()": {
        "notice": "Gets the `PARA_SWAP_V4_AUGUSTUS_SWAPPER` variable"
      },
      "getParaSwapV4TokenTransferProxy()": {
        "notice": "Gets the `PARA_SWAP_V4_TOKEN_TRANSFER_PROXY` variable"
      },
      "parseAssetsForAction(address,bytes4,bytes)": {
        "notice": "Parses the expected assets in a particular action"
      },
      "takeOrder(address,bytes,bytes)": {
        "notice": "Trades assets on ParaSwap"
      }
    },
    "notice": "Adapter for interacting with ParaSwap (v4)",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}